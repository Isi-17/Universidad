(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    323009,       6836]
NotebookOptionsPosition[    303637,       6523]
NotebookOutlinePosition[    304238,       6544]
CellTagsIndexPosition[    304195,       6541]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Pr\[AAcute]ctica 1 ",
  FontWeight->"Bold",
  FontColor->RGBColor[0.5, 0, 0.5]],
 StyleBox["      \t\t\t\t            ",
  FontWeight->"Bold"],
 StyleBox["Curso 23 / 24",
  FontWeight->"Bold",
  FontColor->RGBColor[0.5, 0, 0.5]]
}], "Title",
 CellFrame->6,
 CellFrameColor->RGBColor[0.5, 0, 0.5],
 CellChangeTimes->{{3.468559717263747*^9, 3.468559724512825*^9}, {
  3.593267560747326*^9, 3.5932676096989927`*^9}, {3.593501763019442*^9, 
  3.593501765448421*^9}, {3.625892533741406*^9, 3.625892536439143*^9}, {
  3.657281055816585*^9, 3.657281058080488*^9}, {3.6572813233415537`*^9, 
  3.657281330246933*^9}, {3.688727712667021*^9, 3.688727716346607*^9}, {
  3.720173917629781*^9, 3.7201739201855183`*^9}, {3.751639069702311*^9, 
  3.751639072858666*^9}, {3.783079699701139*^9, 3.783079702923695*^9}, {
  3.8153227253600407`*^9, 3.815322728758202*^9}, {3.846600626272266*^9, 
  3.846600629995796*^9}, {3.877358039914233*^9, 3.8773580422655773`*^9}, {
  3.9075145543911667`*^9, 3.9075145565322437`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"333b2812-7075-48b6-85ec-d994c7acd63b"],

Cell[TextData[StyleBox["Resoluci\[OAcute]n de problemas de \
Programaci\[OAcute]n Lineal. Dualidad. C\[AAcute]lculo de m\[UAcute]ltiples \
\[OAcute]ptimos",
 FontWeight->"Bold",
 FontColor->RGBColor[0.5, 0, 0.5]]], "Subtitle",
 CellFrame->6,
 CellFrameColor->RGBColor[0.5, 0, 0.5],
 CellChangeTimes->{{3.468559729111598*^9, 3.468559769463496*^9}, {
  3.7832675198328648`*^9, 3.783267531087688*^9}, {3.815323123899804*^9, 
  3.81532312495514*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"cf6dbb8d-b006-4622-80c1-4c432e78c2f4"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Introducci\[OAcute]n",
 FontSize->24,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0, 1],
 CellChangeTimes->{{3.4685597832953*^9, 3.4685598064365177`*^9}},
 FontSize->22,
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"cdb7bb68-6b2c-417a-9cca-f07f18764908"],

Cell[CellGroupData[{

Cell["Instrucciones matriciales con Mathematica", "Subsection",
 CellChangeTimes->{{3.4685598305966253`*^9, 3.468559849380307*^9}},
 FontSize->18,ExpressionUUID->"4b5f5bf4-0626-48a6-b174-7ac2e7a8abde"],

Cell["La forma de definir el vector v de componentes v1 y v2 es:", "Text",
 CellChangeTimes->{{3.468559817244766*^9, 3.46855992042743*^9}, {
   3.468559985170136*^9, 3.4685600072017183`*^9}, 3.468560157391707*^9},
 FontSize->18,ExpressionUUID->"dde1cf14-5ec1-4037-b8b4-bc7f5d8e81a7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"v", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"v1", ",", " ", "v2"}], "}"}]}],
  FontColor->GrayLevel[0]]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468559923795808*^9, 3.4685599379384117`*^9}, 
   3.468560144314887*^9},
 FontSize->18,
 FontColor->RGBColor[1, 0.5, 0],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"ffab45ad-adac-4c6c-8f1e-7a43383b69f0"],

Cell[TextData[{
 "La forma de definir una matriz A=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NoBreak]", ")"}], TraditionalForm]],ExpressionUUID->
  "ef3b604c-a0e2-408c-83c2-4bbfc14252f3"],
 " es:"
}], "Text",
 CellChangeTimes->{{3.468560038705451*^9, 3.468560112663865*^9}},
 FontSize->18,ExpressionUUID->"b80bda00-ac94-4acf-804f-0032c782ee45"],

Cell[BoxData[
 StyleBox[
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}],
  FontColor->GrayLevel[0]]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468560119465468*^9, 3.468560128792304*^9}},
 FontSize->18,
 FontColor->RGBColor[0, 1, 1],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4885ce0b-ed00-4619-bc04-9a47dc557db4"],

Cell["Algunas operaciones b\[AAcute]sicas con matrices son:", "Text",
 CellChangeTimes->{{3.4685603157986193`*^9, 3.468560341900337*^9}},
 FontSize->18,ExpressionUUID->"e94dc849-8651-4297-9da9-7dbc2fa36bd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "+", "B"}], ",", " ", 
  RowBox[{"A", ".", "B"}], ",", " ", 
  RowBox[{"Inverse", "[", "A", "]"}], ",", " ", 
  RowBox[{"Transpose", "[", "A", "]"}], ",", " ", 
  RowBox[{"Det", "[", "A", "]"}]}]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468560344566811*^9, 3.4685604003806467`*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0ca315d0-68a1-4f59-8e0f-564aef0e8ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsection",
 CellChangeTimes->{{3.4685598305966253`*^9, 3.468559849380307*^9}, {
  3.468560418708124*^9, 3.468560428403212*^9}, {3.5932684824019413`*^9, 
  3.59326848362529*^9}},
 FontSize->18,ExpressionUUID->"29e55415-983f-4820-844a-4df00b493eb4"],

Cell[TextData[{
 "Define dos matrices cuadradas regulares de tama\[NTilde]o 2,  ",
 StyleBox["A",
  FontWeight->"Bold"],
 " y ",
 StyleBox["B",
  FontWeight->"Bold"],
 ", eval\[UAcute]alas y calcula su suma, su producto, sus inversas, sus \
traspuestas y sus determinantes.\nDefine una matriz ",
 StyleBox["F",
  FontWeight->"Bold"],
 " que no sea regular y trata de calcular su inversa."
}], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468560630703395*^9, 3.4685606528359737`*^9}, {
  3.469380383619072*^9, 3.4693803890708103`*^9}, {3.783266978232633*^9, 
  3.7832669787761927`*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"490bac00-7aab-4de5-80fe-6300da7b8435"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", "1"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Si", " ", "ponemos"}], " ", ";", " ", 
    RowBox[{"al", " ", "final", " ", "no", " ", "pone", " ", "la", " ", 
     RowBox[{"salida", ".", " ", "Pero"}], " ", "s\[IAcute]", " ", "se", " ", 
     "ejecuta", " ", "la", " ", 
     RowBox[{"sentencia", "."}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.907655895598935*^9, 3.9076559053821373`*^9}, {
  3.907656116823386*^9, 
  3.9076561300365505`*^9}},ExpressionUUID->"7076f7b7-fc33-4875-a55a-\
48f6399d9122"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9076559075231676`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"fa7433d1-3776-4dd0-a74c-f5d887d447d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", " ", 
      RowBox[{"-", "1"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"5", ",", " ", 
      RowBox[{"-", "4"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.907655914572672*^9, 3.9076559164471974`*^9}, {
  3.90765613716121*^9, 3.907656140889637*^9}, {3.9076562402358847`*^9, 
  3.9076562415630817`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a5d1cad3-0a5a-44fb-8e80-e40233ea6299"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "4"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656243137148*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"def2eb99-02ac-48e3-b9fa-77353e089ed5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "+", "B"}]], "Input",
 CellChangeTimes->{{3.90765600710314*^9, 3.9076560085807986`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"646c96d2-3bd9-4aee-b9b5-5bf3e5d82b61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656244407239*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b209bc22-e0f0-4da5-b380-3c7e0599734c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", ".", "B"}]], "Input",
 CellChangeTimes->{{3.907656010762762*^9, 3.907656011950824*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"4b1da500-c49e-4d6b-ab87-44650ecacd0e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     RowBox[{"-", "7"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656245548526*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"54bedda8-68ed-43b4-979d-64b04bf9a4db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.907656013827639*^9, 3.9076560169238963`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1a9bbe21-070c-4c94-a6b5-60dcf893a114"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "5"]}], ",", 
     FractionBox["2", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", 
     RowBox[{"-", 
      FractionBox["1", "5"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656018670703*^9, 3.9076562471774893`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0a470e6f-d901-4d69-ac38-26542b5340d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.907656020989545*^9, 3.907656023132887*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2ce41706-b0b8-4415-ae53-1d04a0aaaea1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "7"], ",", 
     RowBox[{"-", 
      FractionBox["1", "7"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "7"], ",", 
     RowBox[{"-", 
      FractionBox["3", "7"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656248348858*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"73dd3a3f-a5c0-42f9-aed7-0448e1d7c96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.9076560249792614`*^9, 3.9076560276786685`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"66457ac6-0c4f-473f-9ae0-e760253ecaf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656028058528*^9, 3.907656251090721*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"aa5917cd-2494-4c6d-9141-56235c77a1d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.907656029959241*^9, 3.907656033006399*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b5c45cc9-4f9c-49e4-9557-9bd576d7e6b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "4"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.907656252090782*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1be0526d-caea-46bf-b4b7-673f650c4ca2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input",
 CellChangeTimes->{{3.907656037430594*^9, 3.907656039537259*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"15a10adf-bdc5-424e-8eb5-3f19ee819882"],

Cell[BoxData[
 RowBox[{"-", "5"}]], "Output",
 CellChangeTimes->{3.907656040056967*^9, 3.907656253002366*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"3437c566-904f-4fec-9362-6919fe3a9b4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.907656040774459*^9, 3.9076560425707293`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"76dc150a-379a-4c11-b63d-d6ad1611abe4"],

Cell[BoxData[
 RowBox[{"-", "7"}]], "Output",
 CellChangeTimes->{3.907656253869277*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"ebad3685-d4b0-471f-bfc4-545a6a3c41a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Resoluci\[OAcute]n de problemas de \
Programaci\[OAcute]n Lineal",
 FontSize->24,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0, 1],
 CellChangeTimes->{{3.468560723044957*^9, 3.468560741281863*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d448170d-f629-4d2b-b29b-407731c66f5e"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSize->18,
  FontSlant->"Italic"],
 StyleBox[" tiene una gran colecci\[OAcute]n de algoritmos para resolver \
problemas de Optimizaci\[OAcute]n con variables reales, accesibles con las \
instrucciones LinearProgramming, FindMinimum, FindMaximum, NMinimize, \
NMaximize, Minimize y Maximize.\nLa instrucci\[OAcute]n LinearProgramming es \
la que accede directamente a algoritmos de Programaci\[OAcute]n Lineal. \nLas \
dem\[AAcute]s instrucciones resuelven problemas de Optimizaci\[OAcute]n, no \
necesariamente lineales. \nVamos a ver c\[OAcute]mo se utiliza cada uno de \
ellos:\n\n",
  FontSize->18],
 Cell[BoxData[
  GraphicsBox[InsetBox[
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
muLPmT6ei/mlcUFpaWXnlTmmvIK/sOuT779StTLKKSi3gD3KL3Db9njTb3h9
7BeVP6+CGZYckaV8JEg4YJ55jkVIdsZ0MHICAQlNudPKTis1Su0ZTFILB3NL
7exPKG+SJOowyPM+HOwvw7zHKii98J7rz3arSeXPqS7kf1YZE7TtTNPnirzp
ArxODnriXViuAhMRhBaVqqgALLMP1kqB29eDcJ8Yxl9UlCrD46tOpZj/n/Wp
B6rjd5bH7ijlvruYvaOY+d5i9s7F7N2LmXsivm8frqRjPiin7qoMf0/Lf9/I
P9RK36tm/+vWn3xMlX7cTN7dGCGup+6upu+upO8uZYg3/4bXx43kA43kffxQ
d1Qyf1PKfntx9G+Ko3cWs/cU0/cXRx4oDt2zOERtUh3+TnX4W2sX7FcI6b6y
ddXJNaf+uZT+QSP7YCt7f3X4nmrqAWrwzJ3VzLcb6W+1U9/sjHxLS35ro99v
JKUktHjLEGCRZPwLoJgfJcYGvuoM360P3T2+9S9V858gEnPbv93NPlQdvFs+
sWdF3nQBXieH7yV9D15NJXMH5J9V4Nszyb+eGflOYehvZtMPlMb+biHz982p
f1TGtrULRuAvxfAVj2QxsPtUb9l0aXYSj4ra89MjDxeGP98c/6PO1Kea+T+u
Zv+wmv3jauZTteyfNsc+V818ZkVupD4X80G4NvIn5uRt7dHPNjN/Orvzd7Dh
zvxFI/3pWh9XM0u86Te8Tu4M/Xln+LZ28gvN1GeiR/tMJf3FWvYvqqm/qI18
pZX8cjf1Z0bq817ucyr/+UMGgEcrURyrrqyh5sTfl4a/0cl9Tct9pZn6Um3k
z6up26ppKOanGpk/7KT+QE/+oTH8xxv9fktZeqftkU/rw582hog7yU83+EVX
ssTYwHtvRBzMfL2d/sLc9t/XRm+zJ75cG/rT5sjn6sOfweeKvOkCvF4e+fPG
yG2NkS82Ul+opUkFaoDQzKcqaXx+vpz8T5XUV+qZbxYHvt7N36vc/2/tgnEA
YFc0Imtoqm1LXEgVKxMPVyf+dDr5SXzWJj+3OPrp8tjnyrkvLGa/UM1/qZT9
s3159Dbi7JdiPgjPpD7XXfjrwshnZzNfaM5+PT/wJ/gspD83P3ab8EJuGW/6
Da+T68lv1kb+qpr+WjnzZfxbHP3SwuhXF7JfL2a+uZj6Zi31rVb2W63UVxqD
n20O/ZGW+qNDhX9HLzlUN8DePZt9cGz3f6rlv1of+2op87WF7F/NZ785m/v6
fO6raORy5ku19JebI1/dcHnO31bM3VZP39ZN3qYN39YZua2aIbmdzRPjq3KW
9gAZZOf04OfAjYm/bE19Y37ki+D6+Ne6M9/cdEHdKE7/VSnzdWa8iy8z0/7q
2NeaE9+s5m9vTt3ZnLxneuD2ev4BpR5dh2BEieu+CjPkI2D3aEZBm1PsAuXP
1SfurY//bqX0A+X/v0r9u1L/ptQTSj2pvMeV2qrUM8v56Yififmg/DOlnnW9
xwP1lFLPW/ZPudGe62vAfXjTb3h97L6gvG3Kf0YFeJanmLHxrPKfD79yn1bt
f9IL9zeyf90c/ZqK6aBk0CLTbV+NFqb/fnbqLhX830r9b9JKNKna7hO/oNQ2
Fbyg3B3K2bXxr5il1HtaOU8r+2l6m/Sin/Z7AhyEe6Kdz/DI3Yue+ySYtzf6
Do8QfnoZBz8jrfe3Km+rpz06kfq7qczfK7VjpXf+Eqkvv1GA3e1Z7LqhaMUr
+sqbLY9+ZzHz4dH8PxjWdqWGXX9QqRzYstJBMOF7k0vsjzOPgT1/MuaDcKAK
HSflqHHDy+pupmunnGBMt9P4XJE3/YbXycodV96Y8rN+MOKpYUcN2yrtqKzj
jXpOWvkZFQx4rX8v5x6aGvirwuBX1yHYrwjiFVUspWby4z/O5x5Q/r8QSvi7
vWDUUlM68aShJp0AijmtnNkNf8UBaT29Ypc/PRJaS40Zij5txTLMjA3827VH
rWBCd8c0JxeoWTA2DC9vq8kVedMFeJ3skMyPgD2VJg6yYD/ImtZwoDKBn1Qq
o9TQ+Pg/jY39AzbWIRpGH7DzhFbOObMt3+SCmz1gr4x9pzJ6a27sJ66LXnXY
c/colVJBxrFGlJoI3Hwf54i9LNj18jEfhB2S9lGPM0M0YyhKBYFeZIWlGcEe
86bf8DpZOROKZCPj+Sk3GLIVOGUHGdfN+DbECbK0V+n/2i48UM7+ZWP8K4cK
AI9WMjRoraH86fGRH04O36u8nyrvOeUOopFtb9IMJnWVM1UGLQwRws6Nf78k
tBBUO8haihgbwtg2mbHh+lm+nyzngUxb3pinJvHZNdOSVmf7+RV50wV4nWyr
AeYhN0i5fgbt4Hk5MLWGAmzCWh5WaufY6N+PJB+CC78O0dDCNFewlHRwVTQp
xrJo8JT/tQvV0dtr+VtnCj9g9xlew5N83ReVs416Fn+X8vcw7yIOdjDDtt8V
80FYM7cqNWDZcJwH8EKVv93VtiqbHWdhb4fymaVJN/uG18tuWnnDCu5esIc9
TXmiAZJndzcen3zS1o9bY1+vjHy6M/apQ4R/Ry/ZssjRTCXzk3LyPuU/Cl9e
2TuUM6I8cYv2+Apq+AJFY/wXNvz9Oiyxaoejdlj8Sa84FN1wpy07fRJv39sO
9shWHAr8Ha6DOxwyjWc3X1A3irfRuxCxDwaUP6y8EWJ7jwr2BuazfMDT0/kH
x7N3cLh7jeT25kOFk4GdMIs+TG+P6jra9Ur2gWb2Y5OZbyv1OCDIs9G5ZN0g
6alBxx8MyIOYcIwkx2cGPW874ZWz0w/ShgkVzpXKT+N4y8F2Vjd3KjVq2TBQ
J3R9iHw39NomfjgdBLl2B9+mDBsPuBdnoKu4GdPEmfOtzrNusMNTO3UTkpC3
rBGOC6Vsd7eEhnA5x5V7wP1kTBs/T+NbL8C1sr4atuwkp4xSEMlDj+nBQhiz
nRFsV2sv0CO4KborA2eb6Gp78SuY0J3OcOBPKTWn60lOOk3jVLYzCB9KbgPX
VSrpeLsdbw+5M8EAPylOlet08RIzAW3DTE3yTlgse/lIOg9sV5zEMMhW8ajj
zvLdZvicuNZMt5tkMz7P5yxY5CJl213cLTZyfJMT/MM8Tgu9cHxqQMcd4p+n
fH4RuD02Boa5uXaBA0XmAZqUbymFJvUC/HwcT+Gp3bgxNAXf8IBmvMA3M6EZ
pIC4PW6fvOm8iBZA63E7jKFtZUPasFJFvz/RakOYJ+Bp4sz41lU5stbotnej
AdECHQ0vGm4pDgDmD5HFrp4qZr+1mP58Mx8D+88hWq+C5hVmF7KPzI0+oNTW
IKB357ND7Zq7OTu6WGuOBHADSZgH8H5ZWfIs9smA/P0UXr1P8pDDS2RdHiGR
sJ7z6b2MsBQNgwMS8gGWTwjMTv42bdq7bXcvK9peV20j0Qpy0Bfbxnmyre7P
lNqD81drkLQ8fi7ChuO7+naWKDoDiXRnO8sbUGIXi2Kqqz9Ph2k7fX8UigCI
YElOySfr/kil9mRvT/QTbOBucSF6QCggJA0bjSaBRqX6HCPAeKMJxZwE/kB3
HCcdBHkwsKtcwX1Otjo4zwCgo9nayXo03Ow8zZHnET7/IM4f0KyBJNTNosGL
UeZUtQ67N++5EzY8UDWkW89AE9EU/ODbze6ACnLE3pilE7bUqjjtINnGUGE/
yybcE9PZB4u5HxLyr5XWBOyPRcCeY2AfdnxS28AeU8EUNYI35Hv0on3yrKHF
KW6lbFcHFqV1czsD2iDEAAfYzjBFITR8Fkwzw2iQqzfxsEnL3e76e0TYABfc
QcB/38UYlZqe+SkalgUA8kZowwek8QbRkoa1S6QF3+LtMIC8yPKcrTWeibqY
DO9J47fc7Fn8CtvSC8jPsccwB/jNFup1wijulZKCk5DzWp1uGG8WN+aRaSRf
4cHTuAQuSv2LtZebIqcZO0T+WZh3cr+TbHWeQxOxkAAGX6RnUQStfJ5srf4i
dzS7WXiSgqh8/mRbe4bBOet6UFsoy/aAUHGvQfb/kAAmGlCgG+rc7j5H5hDM
OVYBPiDFLTwszYhtdHCQWI0sh6xhDvFc490c68szXCcZeKlzZKgf5hYeoXaI
WhVN2mtD+RZ7pOXRdAB208bx6FjzaJN6cyuhCiyBGNjXRAcCdn7FycAZ8J1R
n2bEFAnJrd2MTikAnZgu9BZIQUi08I4Y+iYA+JBDBq69jPlDLG/ZZnsba/F2
tkzohUKeWXHo23rz2YAEgwSVzYw500yxwA/BSGMzJg9Vgnp6hFcpFn6IQXKu
+C+Mhz8TG4wFEmi5vdGGATkEIZfftlrSSZH5JPIsVgqOF5EGtnN/kao1fibq
Kb0Da6KARnZh8XGRUsvGPeQAFOg1sAEUwr2hR+MOYqJU2ib3xo85CaXAM3Ir
5WFh4hF8tQd6ahjU68G8YaxLc5eRps6FbK05dEaN9s/YG8XOSVxRd56kKCvs
HMC7mgzciU5LMGpg84E9e/tyYIdWjjhk985ZHQBOSbmFbnOv9IkcLoOxSq8S
r4ybfQjSgqZgREoxyGcaTWBjHgjG9t4o2g0HSxeMH6IfZxBI82HUbqXK4x3t
ebG6RdIERliKCElYsLMAQxxQrW8ls6HznGBpqfoo3let+ST3ksO2twPdB5u4
spNs2o7+LIvBILCav6JLtzu7qbuvkV5Y7rZa81GGuyT3CxRJMB1cYndkz2TE
MpdbYvFIcY+Q5a+yuCuG96zpPhudJ8vdH34Fmdmh27jtPSy9olDU+/PBuUbr
GRzfNXAnA83OU+Kw8J0na62f4tUE6nknwKmG8GjcsZKVJf0UdzT0GYRCS16M
dGpQTO4cBfmH+G4n2N2Q28tzC6SrjccMawcJP7lgA6xEAvgp1qMR0TLRvt63
3Ikk2Y7K2y4b/zp12RAAvGgbHUoM7GuigwC71dlGnr4qtLVRy51qdfaw+CVL
lSdkqiMZq36KBSPFbw2SmZ+d/ZkAPqvYoIA5xHix/KSIKMstVH4ANk/kfQva
pyFUMFAZ58eDcLbpSGQYpNlEASaMsRCSIrvecL31GLn2Lky+JGCBVW9QM7ey
qO+ttx9l0EuyfyoSmJLrio4LUGM7suLC3ke6G9wbwwhZQWzYk6MhRiM2mu1n
ej2C4DaElgWVDGmcgTvBbLO5ixtkmE3KUdfNoDsQMGczj6AMjx96pvZOQA2O
aTaGpRsiE6u7y3EErLbDVneoO8hbNJF/ztAGA38Ir+wIA/Yx1894AaU0HHtM
4rQtiS2JxMnHJLa8OnHmaQnsMfUJn/Nnom49hQbBiwa211tApGSjtZVRIgub
VlAan3g13PWnuRNP9SAaLxRdrZjfYlHDTLXsIbSzHA+3DiwnhDXI0EHTdZst
SEWKnb4UBRZMHhRgJOQuNWnYL/ArGJC7gpEgYiYOHQMpOvcUm+5Z/u0gg+rT
kReZZmN4gKUxzx1Qrlh6gu8zPbfw77xBdwjbA3rBUkrBomYLNvYO03keMsZn
Jv1qtJ9kcNvrqZ0QNoFfnL9r4Ji9sLX4isnC7D9JR482ZCDdwzc2oFlPtfXH
Aew+BfSSYplw55grLj5F3lBjW+8T++Egn3d+QtN38S2lWYapE+EuaZL75b2Q
9nqD4lTFEl790BlnJTqdvWTDc8yHb16QIcntEG6L1kDy2WWmf4H8rzo+ceLJ
ieO2JDgAlQktHPPFGNjXRgcG9mHfJEUoF58/5fTEq45NXPjahGXu4jcIFy/N
wY1Jccp8CiwMQo84MlmAIcomVpYNXUJ1MZxYbslKEVCVHkG2RUoDwTHC7Zl2
a8R1xzj8kmS4hnSNic/L0igqPwbhx0/KtcfEtOYw0R6IbgDh957v6KHFC506
+ZSEbUPfB9AdwN7g2CYhxrHHJWQbtrfIOQ6Q2Is8mhh17BuKNw3veHCx/FgU
zElqxgtsAiWlD2JTMM+IvZNRgk7IEc7tEsKi+/RfgNEOXOLuj9RcQjpiOKFt
Tzk5YZoZyLxuUUDyzDMSrEG7bZ3izycdnzj+GGJWsaymPXvEArtS80B1pWqe
VlDOZLuB+y9uOS4hvb/rjUiMvd0lyw0NKxEA5rQAHbw/HEadLGPR9Ayukg84
VhxQ4+8gbDf3cACQwJPRPsvymQcuRWYt2Y1RKuZEvb6Dwn3sBbCjtyuSzxQ7
cYO9Lp5i3VEcPgrUpPmT3LTjjku0Wjh4BpfD7XE0Mk0RBm+EOncXvu0w70zi
chK9ZwHIctA73erAGN7bbOP1pdneGIUjzEo0GYW+ITxp/hWhK7oeEhtzuwRw
OBKVpWgSKUgBz7VQfFI6MjFUTjs9AfcZpyUjhDWFxUl0B+0/Af3FAXzFcbKm
OOzT6eLpxs6/IHEsvyb2zcc4hDjCgcpcu40XMSohHT5GgrQp1tZJTR/gZqSX
y+2Qd9wktQMPDZjWII+V5GQEgd/RnhNOTHD0ck+rs/ussxOV6jOks9QxxTH2
NdKBgN1zCHUDZ4BlbAHAzo4SwTVeU6OBVzMTBORWQ55DP468s0lNG5H9HCPN
RsNDowxfufmFJ3g7J7AJkwkborBQScibBKKVmsZF+TMH2CT8D9Kel+MAxRjZ
q/wTEWw+FQkPS9SExOigej5ZwoQM1doL555LhqIKprnHmZARHOgLxPKMMxNQ
QBbmCT4z43kAa1CGwCYdJ81hnEkZ9OGIIg1IAZHYvMmKoYhrcQBBPJEcR4Ge
YusuRzEHAnk44wMQbEKY4EXD3sYtI15DnvusAtAJeHXssYljX53wXNxPulx9
4vzz+eZxaRq8HttC2+OBS60BhKzXpMc5ooB9KRTjOuNnnJTQm6NhISC2B9Bl
n3BColLZKRVvypVt/AaHeNRMYt0Ul4DVPTP7eDSsiX4/Uyo/xwJQWChS7wlP
R/wvHNBs7uGA/ATj2DbXmeCxRbj2NBqINscnzk9ga2dMg8ZcDIMSMhst6rhx
Wtcdlaplppmam3uGXgcNmhSwX85sWWS3dLsAmQKOR8/L76UENo0cBcdo5Dcp
Y77Vyl6uWzXFCJ9sUo82gzPjAPTREk5nc1pGqbI8tjvG50+qoCBjrxyzmrfM
MXQf6PcDCssPipZhv23REKqmEfB6boEvUZDYO/oRnOfUU0iK0DIMoWTGVKrP
cReD809VKhDXAo9k4d9CtQr9HWfQpn8LhadOPDHBSjep60nHyXJvkobbq+sp
Pkkab+q00xJ4m1D2WuNpGdLFVwAEy0Lfis5iqlrdxU+BdpiB48m+J+WtdTrD
Mi6MZjzppITlw4yh18E9RY47vlSz+1wM7GujA1vsIxQ94MFTzcyfe0Gi3d2r
gmH2Oif47c/V6zQWz50yBTChhhAVvGXOEyiwsTECUZfRedMa5hHwCUm6JvO7
sV0sBMgDVJtNC3L34IdC7yhtXs212juiMZ0JQITWzVCaBCdI82nR6RRKpe1S
IAvKpWsUnGcjapK9wslaDY8w32pkAJVK1SGokFJBUWxDqmF0sWxPyTidyHk0
ZpfqtnM8vlCyzHHXwXPN4+kgkJBtASXYfhR+tIZZMfNs3k8AMbjroZbheHse
kM7RxTxdSJe8CBpylVSNuXl4FjMMdBQ0duz8yScmOm3JPUhBMfnmJ22PdJaA
neCxUJx74dSTE2Rqtp/efGA/4ODp2BbcvJP38dZIPYdkbJSfqGRbE91OGviD
vuzUUxPUUJ70vJMc05s888wEoAPfwm7HafEvsJThtABBgkV6+hlkWDabeNJ5
CvucluAkltzpp9JhjO054CebmhTCOu00+XkRL3TL8Qm8fZiLEHhIzoknJLAH
355xeuK0UxON+hAhczDdaiZfcyFZBccdS9+iy3DscUjdGy9+NZ7ilJMS/CyL
eGt4iZAueFs47Oorz2g1Ritl3NhMq7UXbwryg/2wMVyX7Hbuv9IyfAzzdWrq
8Te8gX547jmJTmsUcnjClsRxx8rJK3JptANlv5g52n514jh+kNmZbdQHeQty
3bPOSnDXM4Of4xhqk1MTnc5gq72LLZ9JSC9ESw7GMbhtiLTWTeMZjz8ucdaZ
iXJpFy6BHgF7GnW8zTlpE2gcvNoLL6QfsvGWPn4LbZ98kry7HG4Pzchf5bER
tsNVJ6EBK+U9pIbN5EknJpqNYey/8AJqYfRZaFj0UD5n7C+Wn9tyQiIankix
FxwD+1rogMAecKIFDCdvrNFOH3O8+M6kdOjKzz+PRejMRLG4jYyl1gvcm0+c
ytp0+mkAJfxbgMbhXcPgFCOHvj2WGMIP6CND9NgEwBMWEVnUx5J5wDb2BN5+
vTYMgeHuO81O8VirmXrNBaxffFoKVjtZqBhkGxedn9117tmJk05IlBdx5/NQ
UtEFMvLdeddaOPZVCccgBTmezjnHdzgHIwfX4oS6OVaQuVCDjgl3Kq+KH7Yb
4wAK6GanNWbqE1CHM89IzM/hVmdKJXxOSiBd8mRE6fjSk+32EH6odcbkntst
XLQi2jc+DuelBBjXjb1nnEHahztBB8HaNw9gLy6Q5U+JGU7u/HMT3BkNBU66
K0H7YNw2Rs86A+fcdkRY7AdId4SOs4sx6eh7fJfcFpcyV1OnoOdq4inKeGW1
Cu5/XtcyaCKYebANPC/P/tokAIdbcpqt0Dx69uPhPJrTnjuJJoWfhRaDhUwv
0SgY2iReDcxO10tb+jxaHiAsQRLx7NAF0wkJKmt4Eei1KeBvikcwI+8d5oHv
TQFwcE4yiYNp6neOIcznbr0AiGP7gXJ1oAJ4uYzq47hnwxiGJ8IGz/z42LMn
EUbNLy6+eBKDv/RlgLhTTkmwD5hnD2UUAtDtDlxwQYKN/BK6A3QWaAdALses
ShBgz5k5kc5WACyLm9Bt50mW6JywaiYB8mgTgCrsmZPo52MCyLh/MrnDnJkc
52iNCwJLV8gH0JF4BEMfxSOTgkQ7cQx6XjqSLlSg4KcxytvzUEAoLPV0Nmwt
CmlCqnGfuA0chhdRr5H5N55/6iSKtMwtFndgI+qX59BloCV9b5Lvf9YOsq3O
nvMuSMA+xJvi1IiU6e6KgX1tdGCLPe1oL1DelwXrovgqMhXQC8MgzwCFyOHy
Z/gFzbDMZDjmmYLUQf67HZKZRmOvoBzsATAAU7xRKKlAK94soFveLIwE3jkd
qCSkDgcD6KA4PGT2LHco48BVSBSL+hx0HLeBDgJnFlE552wSKqAuLs2SWYBR
DUiEVhraOADkRBhjryJNh86KxGI7lG3cFUny/DJJPiYBOcdP5IeBtwjoAN6S
lMKKaw3CetQ54r1Y2hpFh0ZZU6qWXjznLDJIoNrHH5M4idCGyu2efSadCqhS
Lu2+6HXHdJpwAXLHHZ8AIHQ7sE+oz8KTAlv4sBIcFsou07OsSjOUSEzeyril
DQZu7tyzEq0Gp4h4O192wE79rDlPCObOB94c+nGOOeS2bCFrkB2iaWAIx0wI
YYAhALpmPX3ilkSzTj0dd83o1gtsVZYErvGJDoIsWKdJl7BmJNYt/iNAHsiM
M2jtKceEI1aL8IfMYIhKqwmTpsDe3yiAVCoh4ADBInQKcBshnLBmOZI/AVm1
LYJQuHien5GhXkkYw6lwJARVIuS4Gc8u+m5RBQsEhhT2oRvjexs7/nh2Fhj8
zz6D5S3Icbxl5mSStwWRUmgfW/vTZM/48+1mFhoE4+HEE8nwpuiQRcNDp56W
kDEptvApcg4vCW4LO78jcLpPPCkh9jODaij27KGguWbrtcHXvobsapjcbIqQ
plDzBgXuL4rSQ8Ekw51QY3YmoVONxm4Y4Z6zYBmTx7NIUyqXNcI3PMnm3BDa
n+23cAREzDOJdkoo5tTT0Vnv4iHmx3gAbigG9rXRaoEdlrb08p5bgI4AyTmE
khZg5wDarEAiNAIWNcQV3ii6ZseeNI18s4GDi0B+cYflk6MuIrpznD2Yl/22
TandHGOXeF2F4a4ioUXImMgt/FwIksTu0Hecd16CZ4tMwmwD4x64c5khafRL
NCmVfj4HjYC4YvtYNnUIS9mpxKcY7eTAtlOeM3cc2yRad1RUAPYYi3eOvYkw
n4c9/SFf7RFrCg6CrtH9GPoYUB3SDiOQ8IHDQbDxYJQSPtjFaDStwFGmOX6i
PLXPq4B4s5RF4w2jJdFBQH/JOYWfQiozpvw8ugzfzRwpWTGrDMWwIzPODVKU
Z+cHnJAWQAvjxYkhXSptP4/CF2yCvjphagCfuvR06AJgD+O9mPrUqSclKovp
004hy7PTGfbt1onHiWU+Z9uSuEJBcrxruF0XnneMbSxY+qz4VhJF4UvPQKRP
4dAQuhhIIAdzZmCHY1vGSbEfJocExlkGJoHSPB9HptW8KEEJYcgnLm05e1h0
m4ZWsM0pEfVOZ5CfsaCU7JmliJ8xo7Wneb0biYSjixETusARfhoesu2MmLuR
H0GuMQ8H5HjURgb6aSLAyScneGBUhoGSkgPJ23mJrgDD0XoAcMgnNvDZs2pw
aVyXQiVqToCdFacAN+cE9iPwRmBywNAK3BJ1yhYpmu8soqfGBuMzjh/tars9
P8UNRQNhsoE2we3JNiV9uclAjR+3JdHu7onmkdHgaWyxr5lWH4qZKS5sP/00
UQeyl3g0kI7kwe4CBANqCG0l2+a4BONhCODChalt+ITMAPpgZs/PwYqYQzch
ZoMkLeBbmAqMnxkGTOr9yU475xiYBzgY7gBMOKgYR/hpwIUD7wWxDSjWzSFZ
7iYI/4GNZNs0sxBdnJlM8WNCowVSzamVkenO4g3mhMN5qJX44DDAYJudQO7w
ZFfbi6c+lvanOXt5u+Nvp3RiSjwY6wWBIbEwSMRn4RGBPOGDNcH4kCd8oBE3
GiyAzsqvyAK0U9QabLGzUiRhmh7PmMPdR5jHTqjujHOwAk+6Z/OBfZWDp7CH
0W9eecUWvErYfjwgMgGlhrXZbFGCOro8GoXhkT701GicWnUA9qEKFrvt/AnU
+LMSLluY3w5n7SxyJCvs0M1T961XuHMsStBAMkAIUmhWF5n3tjl7NgVSxiEY
EIAwaueRj4lP2OTnn4euf5xySvVsLzRXq+6VIwNKvE+dBJu2PcBRMhgSIzJu
fmyY80NhPRrK8TMAMfQ76Mdxh6XigHisYpzAUkI3ce45bBv7uPMKrALboOgK
5ARYSha7Pw8hxGEwdGEJw5K//LLjyQ/FgxyTQAOefz6JR7tNg6RRJjzl/MCS
p4CJn+J4viT87JV0AgizeLtoRiC8xNJVUOCo1xzLvIRi5sQlOTMMm8w4Fgkn
zHLatvPwuVqNMQ6/sAvvV9rNHIfcJTIpC8HkzjwrIfNP8X7ZmJkolZ87fos0
FI27tY3BY9hdlWF0zZAZDXFWzBpptYOn6JfxlmF+R3A9STNHggFOV8vNzDzN
jpsIzAyA3aNFl4rQndmZF2E2g2Gc4/PsswjS33jxsbBOgXX4CToL2Lew5aDj
F5yfYB98kkNt9H7Zeq9RLMVa4A5iBnYLjdr7KU0fuOgiEgmYQPg8E9pKYeo8
59HlxQiMZLjCej3XE9puJwWpJs9ay8CRJE+clZf7mgkVFER3atUhCRTgVJxK
QVHE445PcBI+5SrzNFUKdHNAhvIT2B3O0GHke+Yl3Ro/Z3yYhKKx+s/I7HWO
blFsChrBjvw8cKDTGpVMBgA7gIh9lhRPTZqwtMHTTgZQ0HiT6+w9Iiz2VaY7
SnJLvb4DDcU1BChF6gR0vpwTa5h7OEc0G81Az0OEGG1mAe/4RKcQAizP6H/D
RYlyaTeMChyDFwc+7+xjIS3nni0Rm0lN3yOVCmjQmS0TgXf09SdsoS5GxI+h
uMgSstCzRjptyX6Zxwb+BeC3mhTbwY2dc06CMW1+bu456T74tU5hJ6APfha7
qJD58XPOktGfYs+EQAuwmY37H5+f33bR68l+hiKQSf/qRLm8QyLbwEnILe6T
goqcRoKNahmNU5kp7LzwfB7MdXLSGhBOgOTZ59DAAXwZ2cnDQHnT2gsDjMOG
k6edJgkD4+gR0GnCRjr7bJhGaX4pkydy8mGjsfssyksfDDvWV8vYAb2IU9ix
hbuB+5ex3XYLwj+OloTrhNvGV4zt5G1BbmXohEydzjBajB9tpuci4Sseb500
rGRXH5BQDI+1Jdv68zGwr41Wn+44FUVaKFReq23nLMcUm/ec8eVPwcrFMTDJ
2H2e4QHxuddcmBAbGJYJlIjVcz6y0ufFXoXEct5Xit/4NBcQ2M3OOz5nyosj
r73gROWV67XhmZlnLrxQuvtJiCgfP8dh6rlqdRc8UM4BoylUxx8vp6LAIHcK
lL0m2QUc5yyIv4yN2dmtp5+ekHQvMqE5QApr5HxyQCoMs9SXAQTE3KID1KgE
2CF7nHybQl/GscqSfAuNO44DQZKlI1jBUDMBnWJ8oA6iS3A9DTiiCCTZMzJW
VfSD9PTsv9G1OPKgmdscY7hdJ0NofmYrLVYIddB3HBGDp6ucoAT7GU+KfjlQ
mS0nJE4/M8EeUFam9kgKK0f5xtkQpVyOc89NcLbSJL+vKXkFcHw4VDsqEV28
O7wCcKWUPO8ciiRwKHhCOlb0GhwwmRA/jm1ROGU57twL7GZO9URRNhr1JPxK
GfWDPXPCll4AhDqm2Zlt+Or40E2gmAygNUxHeXUC/sWpJ5NVICE+3D+EU/J/
xK+Mat3QnUOMga7YD4llT2HyrDPpJKedktC7E3o3Lw4dJQg1h4HnQNfjj10a
pg+8BdyV5BdBeiUf0jLH8S086FZrt2RtSZ4YPcKWRCT5NBsaEgg8h+JI3Bt+
AW5SUhqk/dFKuD14KLouXeqMVFSAMJ8mSRGcHgBTDfYJ5R53M71mlOSi0uKu
s84M036qlb19386gbyo3tl/wmkS1/mI0XJWWEYEY2NdGq52gBL9PYtEnctSR
dSTTNWh6Xb35LI0ZUZwhxGooI9sk4+xrD0LdJHop1hr206h6GIosyH5o32te
S3uAsYuln3F8gwpZcAHDRdhgYAgwZAxuKdB7cfF5HAnNEvnhMOAsDABIKU5C
g0pODt1QrZKUgUvsxD1AdOfnt0KY5erisYqEw0qRYySReAvrDhx/x6IAL2ww
qDmgG5eDa4BLA2EYliekloKkxGyhJyrBjIHFiIseT/gwdA4n7ciIXogPwBaH
yu2edjpd9AzO3DuFM4uOC+M5Gd3cTncYqqHYnBP18vNnkEU0Z1G8PdNoPHmE
AftLKSkwDt9cAqqwDXjYUYql0GwjmZXAA3AFDjJQbj/PNcjD7Gy0ngtoeiaF
/iQUL/XBaAaxNcjdQUFGqwuFp/iKaR6CF/NjZGHxUZmJwGlLAzC26SY5Rx2f
EveWxHVK3iZZnRBZDSvJczlNwFq9sZ1SGZtJGfSBiUuVshypLwoTooLOhaMr
c2zhjHMsaCKqppLHI3S13fAjeIg8j22ezbFDcoBxfn78GY5yz0f56nnJCIXp
K54CW9GTOAmPyFDcXpKBcTmtm6a4fTDNSQgURy1XtnJ/NAmlkOxifoTwU2bR
SmAEfe5CcWs0uWOCXeACT1CVOP8MP0uaJw5P8j3I7NQ8Z61PcvOSMyURHs6a
IDeZPeLZntcsiRMUqCSTbLLZpvHoam0bz0Sg9+UEe2NgXxutvqRAQUbSiwvk
T/F0SLzQIR6XoTfLQ2DzEliGPLO45qN6dDkuh5KX+WgSSpVPLgnyvJi+UFKe
EiIFK3Z0jKc4A7lgaAUCTK8Mlxn/ynQh4W53iPMoZqant0Zl7sZgDUJQ2SKS
AdOSbc5iDxRHMuqBDKJEEGNJtoe0S2AQh3H9gQnPmQNDa8Bk1AWz5Dx6kxxd
KaBbkRWlcQYIv0xogiutVA1XBDiw9V7rtvMyWQNqzgOp04QPLp2cB5L28Byc
GdZQtlStMdee5Qi86EuBZ8HgSfe4ZjKsA4arz7/IM1MGjgiLfdVFwCbEFIxw
Q5BtFIjBcfVxbrE5FjNqMfR3bMjJjP6kzHdrtXfhlcmIYVQELM3Th8fhH3Hq
xYQUpeGhkBcYHHCVAV/tqTe3crRnnGF8hIuZ7JYJm8XSEzLnTiacBmFJimyY
cx4McQeUara3QbC5VhtNt+RSY1mck8Jr7ij7ZfPN5gBD/URUmIKm2UooXioM
yIin40oNloz4LDwbgh6WZ8CJfFLQT7ee5yoHaVxFNwYZeHNcEmGYO6k9XMhx
EB0fXB6O6Y3z7eWnZ/9F0sJNeyfn84z2Jn5GOV1D0EqYGehS+atR+bZceVZU
mBUkJfPvyMLXdqLBOQKZp44gGKjUH2fcoA6irT0jGgH9kmmDPAdtIkoVGBPl
lZ5ONK5jSs15UVvqNYqlR+MY+5pptUXAgD+ZzL9Jh8smSp6nvYfV4aLx09BZ
Y7Ad0YwdMvVbtCYg6aJyjpBAKYVkOXv4qwzXGdjJQjXJIrqX51rSxHwoqWvP
w0z1nUXcjMwZ5L4gKXOxWUdIFKdnforzcPRGEgBGuDeZnJ19VgZnpVTIzOzj
0uPwPZOwlcrPyAZzPpwKbUlO9Qx7IgUYeIAdKUkqg/7s2qekVB0egYsM0El4
1jme+kW4BmQFcUk0xpxJHtjl+lfOiKbvYpRDhzjA8QTc2KMM8pRpADzBD9EL
cAbppGY+K4ViqA8ycFF0Nxld235ExNhXWbZX4mC2Lfl7kzJnTdcF1dE1Z01j
tFoZPP/cMKaBA3iMfpBrF9MMZTYXyR+ELNneDi7gMMCT67MCJmIDS+HEeusp
T1EBFtvHAbu5zmGSq8fka7XtFO5Wu2XSfbXxGBv2NB5tey96aiePjEthQxof
D6imzW6ul56UGgJRUZoUT/kfwP0QOjlpMftlHjTf4aBUNgjC6GKWy5PuiGof
UfABLRNQgY49TvAc90FDUm4UeG7723jPbt5ISrE7HKlZ6Cx2Skqn5eyyqep1
kuUwyz2XJAzjuX5qec9xKgLNgOa6kSmW3hxDfVpmc8senqJLE4F71TbwLe7B
DeRWRbwH0DJ4Ot3YywgPzEcLZ6RwX1QhkyqHSE1mePTYg8bhtqL+ERtS8YxT
yyZcH13nbgnFcIw9rhWzdlpt2V72WGc4VVhqUOcYsqBTVALr2OMoQnicRLwp
T6wAoI6qMw1LJVKuAEbz/aVcBo+6prlkSkqqspDjHBbOSnP1pN2ODxzIUB77
qxInn0Az+ADsYuaRaCkR5mFcS6pwiya2uk+iX2BtFRNxXApwSfkRKWvA0R5J
nqEqslJGldUhzeWP0jA5Igs/L3XncAYpHsI1oNJclhDyv5fLxeCWnjecZ3iK
KCTzma5FFSY7+s88tdWhVSx3Mz7sNv3HAvUctxvVtuIBo0KzuYddmxxPKl+A
Ky31jWkRGW+aAXCX8ke5XMw4AztcCeoNXXfHIQd2r7fKhucDz4OA9gSE8Xqg
mq5ywhWUrFIrfZ+R/P2xUQA7utRtPDpD8QoH7UYLnA3aai/zIC+LkwQ7asjB
a3o5s9TjEsbb99VeJ3zMvSZ/4l+Xv5JjVn3+QH5F7MtJeI8bnd+PLo3t7urP
f6SxoXaY6J7oiSQfD30WRCWlw09B70z/ErDPjt1ezHw2BvafS6SeqgtwmMw/
UhgjYKd18Wi1wQxr305X7XC5wU01ZJBKbuz7Dfp0QfXk2WcO9u6jTcHq5dkn
i2VIhTwoLIrpqt1ghx6W2CbesekCvw/zs+MRki69i0GT3ssgLXEFK4v6piFe
aOOpQvYHxdGfKH/tS+MtATuti+cHkeXOwN5eAna72ErfayQ/OZH9Gw7FvKDg
1vljysmjD6IkfDXkohMnxgZpq7BYjC9fpnzgHodSRKXw5GF9/jcUMD5m1ef3
5FeDvpwE1m+0Ry4RnpkPMNWqz3+ksU3ax6geJIl9tDC0NcUrn+assN77Uwuj
t5fTn41XUPq5FJCX3YblOTP28EzuHlrGGuauT3FLFs6dvFjPTsY9Mrc2/hUP
BvspxYpKFPEq9UUlI8lJEu6Bl84pncVuYZ+eeuemC/y+9083jPvPyLy8CDAz
Lk3qGaXeKtimgqdm0z8oZ36i3LUDe9AP7Kof2M1Adb0lYJ9vZu7WR35nOnWH
8h+nNbb03bRerZVT7mjgDvd1oFy+O0gtae7Lmr3BkP1lkrmMgwiQ3cFVn9/l
3/bO4zJ7ofCHO73wGAL/TW+Q9bEvEgLB8GgWHrFPK+fChw3CpaPgCT5Rztxe
H/msnvvjQ4aARyuRugLYU/O5h4rZu1XwmHKfZ9sgyUK1m0LcFMIdFOdoo9/v
vsB+AF46bG0X8pIhC7YLvJNu9jyC3SFvtsDvy66I/ajyRvkdCVpCC/IUioH8
+88q74niyCPV9I+Us/ZQTB+wU3S9D9htpTRPuQTsFHKfrmfv7KY+Pp36HgP7
dgb2HAN7lrBISatGahvy0Oa35DrZGyJekp+eGxhxEH0VHrnaF82/7Z0KZ3D5
s3chf/meTW+Q9XEgkkwNm1HOKAm5x19xScnAH2AL8/Fy5q+rqRjYXwLRMvQa
mm4h+3AE7M+FwB5EcOez2AQZGgjb+Pfb4301JeJlx6zlKsnl3Afs/dgeSBRo
82V+GTsi9jkCdj8VKT7eS46WA6ZVUJ9R/qPF1PermR/SKsBrpeXATkOlbgjs
+NdYAnavUBu9o535+GT6LnL3gu3K2MuhmCytmev1+1bJICxoz/0Rme4vZ/aT
S/0UP1o/LzmGS7yW80vYKjwb7wnCQFbP6wx3bn6DrI8lOkcTk70cM8Q7w6vj
jQRqhNdgImBfyP11Of35VhyK+blEdphFyRi5R+YoFPOY8p5j/44mIEcuc0YF
o5QNokY3/BUv6f4K+hIs/1atWZ5VjyOt2S/wHgWCNl/mlzEg3c0rd4KQnLra
IW4WekHKT1MuR/C0Ch6dzXy/nP2h8g4FsCuIh9UDdhVg0wqUH6XNTFZydzSz
Hx/L3K/Us7gB30KjUbl4mqDkD3OkiKLrrkq5KuMTp+SeX9bM661QENin51oa
BHGjnfuF0VZ7CTpJ/zmDvmu5EpeLhNlfy/mPLOaHGvVVjnxPYog3/sX+EVel
bUpL2E2Dp7nvzGX/rJr/4qHCv6OVyMcmlZ2YGvvB9BgDu3qG1DMa4SJrMKDM
EDS7cxj0xd8XfpdHyKW7idhftTxHzwKBydj86YZQEzJr5VIPsukCv+/9e3nl
AdWngmDCJ0VIMmaSRnAW/RCj6xOF7CPzuR+tJysmBHYSDwJ2dwnJKf7SD+yl
sTtr2U+OpR9S6rkI2Mc8L0tD8P5gD9i5YXuoPrTpoxXrHexYjrT7IHCf5bD2
S/TDeK8Hcfuv0qcpm94g62Tp+mleSZAjVIfpTnYLLPZhj7BdgP2Z6dxds5mv
lfN/cWjg7+glN0xRzk/lHynk71TqX8ihVi/4NHooCSqDEv1w1SAnI22wvuwT
eVhmXYdgvjx0s8rzUz9FYA5UNyNs9wkz9+tEWGU2XeD3vX8vMmloZbcwyYcB
swfslBUzlf0vc7n/wZ7IGikIwsgL2+cAdoq9RGjvCrBTKntQKI7dV8l+ajJ9
j0iOsl7kmPBeFewKaBrCi8w7WTH3hqM2cKuD3S97jgZiZLR9aVwGX/nM/Yet
4/wrc9B3IX9N5z+imIRkBz8XjwhTFpwM8O2gLN9ApOipudHvzae/Uh37yiHC
v6OXyNfuKpWeHXtwbuzbSv0vxvYnKO+RbD/YYM9zkz7P/27d8Pe7v6DuL8zr
kWeXMyep29rtcH5jsM+Z+3XT22xpX6F99kaZGBJ1lLcj6jDAmPmUUo/OZh4u
jv6I96yVloAd9rllK9fuAbsLG95taiYBuypOZ79fGf+yNv+Aav1Yuf+m1NPK
36rsJ5TzU85s/3fmx1TwhPKfos/gURX8O2+8nNnnT7Wcscd5lNTEe1LZ4vyC
fxbo/7zq89N5nia20KTP+MY/s0o+FV6ldw/eE8pl3vQGWSer/63UP5Ns+E9E
/BiLyqNh27r/qtr/lzV/XyP3lcXhTx8K7DuqyQ6UV4OlV8s/WBn7llL/RM1L
UwgfJQ4eY+F5ihqZ1HP18rnq97tVuY+SIviPL5PngNREb/yjcn/K4v0MH/yz
VZ+//S/0W4M/1RO+EjV8jBTEi7RVVObI1Bf/0fBuSez/lV/Wv/Jrepp6Xnyl
/k35/6sydl85/QjbOWulJWB3PeXYyl8Cdo+AXXM441Etjg3/YHbkG5MDX5wb
+UY5d2cld//i6P2z6XtmR783N37n7Ph3Z/Pfmx+7Z37s3oXcvYuj9yzm7lrM
fZc2Xua8kMND3TOTDxnb2NkYf7A49N1W9r5m5t6Z3beXMneXcveWpx5c7cnb
Uw8Xh+8A44SFoe/UZh6ezNxRGL0TV8F1hXFYafSeauaeWmbzW2OdPD/xjfnx
2xfGvkviMSpC8j3wbOrbc+nvLmTuWszeXU5/p5T6y8Whzy8M/skhAb+jmShJ
ua6CkcXUgxMvfqUz/sBC8u65zIPzow/P5x5azD5cyjwCxsbC6P0iuhvKkN6J
9HcbxR+M7P76WPLbpenvz+bvGR26fW783oXJ+/Evvi1OPTA/cV9y119iz2rP
ryfvMvMP1sbvSw1+Y2L87ump+6ay3yPVy94DXhwVlQH+YM+9tfS9my7w+3Ap
993S6PdKoyz2Y99ezN9On7m7ZpP3LKTvnx76zkLm9mr+bwq7v1YeuV/5z61L
NgTGle+Rud4H7JwnY/ouJ7g3psf+n3rh78pj9xVzDyxkH57L/O105geF7CPT
Yw/PjH9/On//dP6hmdwjM7kfzI7+YH70EcjVwigL2MuZ8aT4nBl7GI85ladP
bGNnbfRvy8MP5rd+s558yJ798dzw/QPPfqNc+LvVnn9ixx3V9MPG5A9zz90+
N/LAbI4uUcg9hA05ABvgBdLQh3HkpjfIOnmGDIC7Zsfunc09RHvwmXswZPyb
+c9goFB17IHGxL3tyTsPDfodxQTlNFvKGmuO/+P84H+uj/1ocu/fTiX/20z2
JzPZH81nfrSQ/gkYG7Oj/xW6udHvd2TPd6tzP8wMfG9s6G6z/j9Hd98BNhb/
R3P6hy889ufK+Ofx5L1DL96eH7m3Xf7vYyP3rvb8au4fnvvxH9jF/z6avGty
+pGJyYdHh++eS38f2gFeyD4ySxD0CPBnMfMIjN5NF/h9GN0rUJGAMXc/m8F3
0Se0IPtfSvn/c2bk4ULy7sWxB4uZh1qT/6DsveuQDD8CdsiIb3H1iQjYaTgV
wM71KCyrM6L8nVKVSwVjiop3TUq1H96ZUeGS5VPME/xvhqtvvax5bGWmCQV5
ZY0qN//2NyQUVTfN+9bwqs/v5T94/cmqupvOxifptnf21TLqY7S5N7bZrbF+
3sPDeSl+KGne0agqGlpgnJ7RGVVeOppiE9PByA1k8mmdci1cXoyM1kWai3Rw
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
Zz5xRC3X+0w69VRl6MV3//27pcHn9eEfZLqfHut8fDz5xLRtNPnsaNdTY13b
ZHtirOuxsdQj2B/tfCrd9Yej7S+OdG5P9z0x3vNU+cBfgPPWh2b0GU6Uy6E2
iCVMjKX5vG2i70+Kfdsneh7tTj7a1fPMQPdT4z1P4MMfTT4/2vky8gn1ccS7
nqa+ekuc8Nho8hk1TPh2uDtknrHUQ+OpB9Nd92e67s8lt/D0s2//81fciR35
gUfLw9tHUg9n+p/sbX3giPmn/elMx9PjnU+PJZ8aTlHDg8gYxd4dua4nBnfe
Yw7uKPY9le9/qnvv3ZkDT6sfM0xtG/7CdMezufZn8u1P5FKPTHRvHep6eKTn
mYPJ7aMdT1T6Hi123FEaegXccWWRl+veFGD3JbDXpM055ckNV3lynbDQ/0hq
UN4QRZLg7Vwx9belvmcPpF5Mpf6WBpraM8QGNCIxVkSNkGFbDTI8Fh3ZNvnM
h0J4US1GGLrsY+FHKRqy8A/RVx6U13+CjnSpkX0Ihn+0/++/DsN/pHfvsAZf
nOh4PNv3TH/L1uHUEwe7JzU8gi3TeWTtSPkznbq3v3t7R/LZob7tI50PT/T/
lRuMatyTZZr9Se4oQQ6cD05inKQUf7DQ+aeljgezrd83BraNdTyQ7r9/YvD2
TP9d+Z77i91bS90PUks9XO6+q9xzp2y3l3tuLffeItv3ZZN9PEgfyXPo5FuP
qOn9dwzv/QZ2ILct1/k9bFrf7em277zX+aWeu0q9t5f6vl/qvaXUe6ts2Lml
kLpL73us2PVIoeueUt8d4+3f1/qeBv6vR4nbZyyhkBDUBp+TMc6VItDe8eRj
WuoPKn03T/TfNjpwd2HoXuPAHeXu+8qpreWux8pdD1MfRzx1P/XVW+QEdQTP
kW/zvfcUe+4p9t5Vkiykdd+ud9+KrdjxPXw1eu/MdX6/kLodT9AG7p9I3l7s
u/WImp66U+sm3iv23pnvux1bEdmj99Zsx++P7fkGFPEWvp9p/ZY2eGum6zuF
gVvK3fcgC+HJ+Bfxd+rJrVbnVrvzPq391nz7LRPteNqWfNf9WtedTvd33M4b
hjv+H/CGKRtxDbCH5UWkKCsI22sUn1OcAlWWUrq9VZiTqlGGwO5AmXiDHcwn
X8qmbh7tv7fvwB/SQFN7kAZd8UMVLmpggdo92OSTr223h606prdMat0PSv5R
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
8IW9EBL2HAu7xojCntxV2LPRG+KoEX3B54lHXp8XiuhRK0g6fEZlqZ8loTOK
A+M6EkO3dndEbxVB3CFh7/r76pUzhe9miy/kcy9K9x0cWu/Mue6SJeZMmbdw
05lZ26249gYuuXyYDL7VjtbpLrpiDUzI9a5VzmQ/SM9cpiWqGLujTgTD3Vtc
T++R57WlKFdSr1XT/7R68+9w+zArK40Fubk0dgKMyh97y3bqtrNhu6u2u2x7
S7a3QK9LpjNnedBg4Uqn2/alQvlfrtx8OT37fZp4suji2ia2G2xj5m8zpOqj
Kf29No7EZtaCtuSkzU9x1gv+tDaedtWmuJWl9Ler+edl99+ld2XsBXrITW5n
pb0qu3npXVqZf7mU/o50W/gku0QZN9jgRvobEe4b2FRAXZ4qz764Ov+FSvEJ
af6NdKCM3pTibSn/U8ofSPlv9Po6bocq/utwmXsL834s5dt44LwhWz8oZ15Z
yX5DyrcOiO5HGOhkqm25XE9ti2bTyocTK/m/rhafX8k+Jb1/lPI1Kd+Q8s3x
E2BEc34iHeDJfxNnXpfej8heR7N/KO3XpPhXKf9Z2t9s1/5ibfHxm/nv2zLl
yUUPa40N7iytj3p0hd1Ve3FqYccf2qLlDQ38lei5F1bnX9lYeEp2vo3aPvYC
PeQm/0PK95Bj8jsrq4/NzX0Z1x9w/P0nfVPCLkbaQUlabemWpfPTRuG5Ru6z
lcQfGnN/2ip+qZr+88rMUyv5x5eLjyyXHlopPlQpfHot/yjEXIfK6pmdbX36
kc3sZ+Fgu/BYu/QnlfjDzfznpfzWgRH+qIKopbblcv24u0XrYLy/PPt8ufjY
TPz3qsuPLs89Ml/6zOLc42MnwMj8+Xw9gzypzzxSn/m0tkdapc9t5T/TyP5R
I/fwZuEPNou/v5H7nbWZ354u/LArMo5cEnIbdE0Ju/CCZ2eGhP3uV3WphF2q
JAwJjidkXeCaUZvSMaUwIHxbXfraQvFR0Hbw28deoIfcZkt/vDj3Z6XiE8ur
j87M/m5p4Qnqva3hk8SNFG39nCk4GoVBTSG3arI5vZ3/3nbuG9X4c5upl1Yn
v76R+lY1/c3V7Eur+edWC8+s5Z+p5r5czX2lmv3qXWErqWdXM89V0l9Zz71Q
L/4lnG7Ofl26rx0Y4Y8qREjbfWE3cQPc7tXVhX9YW3y1kPrSytxXFwrPz+Ze
mC+9PPaCHtmeQwNiI72fIUOer2aeBfIsTz9Tnn66nPrCysyTa4Un10tPzq9c
cjEPU6Vq6HkqcPYroBMSdmechXiAUB57T9jhAkjGupBtTzmZ7lxj/Xug7eC3
Y05m/AV6qK1UeHGu8Go++8pS+WuF+S8uLL+KPThmA5+woo2ffvGEv434fmHS
hrUYC2xIryzdBekuS2tNWjU0pyrdFekukle/gtkh7y4xrHrr9FqVYs0xFoRV
piuM3aFyCOQwCLX4J10UTWkuSgHcmMVXsS69hvSa4y/oEU0souGiTwu0s88C
XSkTc2pkVbWFpdpcYNsowkVy1zFn1cuxI5xBd32UinlI4JK7HvIkXWm7uGE3
pd4tX9ux28UuyFZl/AV6yE2uYVXytmihyKx05/HxOkFkFHDGHjHos1yIJ9WH
qU3VTfxHOtsT1G70SSixrwLPw2Ou2Nk6XWmY0rSRhfAD4cByRuuM+FlBW4WE
fpeg0D48lL7pIQMt39xtfB07AUblj9zJBNHGpXyUh/yxSc5sfyv5Nqk3VhvH
DmriQIL9qAi71y/sQj8ijyasd7W2Y06GxGPcBXrIzTM8nyP40CwkGcitqTtk
esJu+mq8X3SlacquJduObNliyxEtR3SAyLbwoG5bgXnIajCMyQ6Tue7O1muS
+o2xF4ZSxMGoD1crfMjGToBR+ePtZMQfz8Ohfn4WnU4dRz0f2/Mc9WSUx469
iz1h90OeUCW9m+ENp2LUmFj87aBM4Lfjw3BM/Ond8RfoIbceN/yH2+sw7WeL
o532fULILcqzt6CBEMLQ9doIVXA79F/uJvOE6XpdxzXgVV2hA8bu8IbMh0s5
d6jOZhdDH/A1dKB3V5sRsj7Oo9vuKg33H4XQkm7brqqJSthtO6gjR07YwykC
X9hNB6JhgT8d/Xa83Ma+VHiA/hgqtlsa9VCYAtnlCZVI7z3roLp5ows7FYe9
Q232I4eQCUeT9hCZG9FGIvnPAkK1OOBc4LAP29gJcKD8UR76MG08bf0Pp69a
BjXR6eVhjpiw4ws8jTaoE2i743PAoL7UCvVHtMdeoIfcAiL5I9ZF8GgD5Q2I
pBzs/UKYpNuhKHtY5EMXh3k9Xov6ZBl7wBt6xFrVhx+mO+7SHwN/hj/CR/hd
R0jYvUFhF9IgbTe1OikvtA5Rvwi6ZthuYQNdOcJXVPTe9eMO4r7RhB1jqJak
bm63v8L6CH0tIQ/6d45sUf+CsTtE3/NS/gOGjYobuuPUcbBeYwUfOwFG5c+w
9W56pGNOEDIjf27JJy+k6kdiBLvC4I8NngldE+FnNUAetp34ho+uLbApDBpB
u9cd7wt7kBgZJRVTo5mnLVqmwLGkh4MfKSAVfqvhZx0Vw8ff/TBy7wVjF4Tk
y5E9AoCM2460LTTTwjC85cpN8NPGX6CjGv1YL+yaejr33iafp61njjh061bY
oVfiSEAH6gMYVi0vmMrEdmtDOq3RWMe61vAmHRv6aY+YWtdwTekSabVXFvLY
1VRiE62XPDxkFnW8EWNXUNHrRJ9f9CZ1+niBx67afS374ybAqPzZRdhbWthN
vwlA+uz4OcPY5dbdhf5fsadTOvYCPeSGjwiUnKbu+hdbdOzox6yFfbgxjQRa
nU5l0XvCHqY6VGivN7J953G/47OowRBjd1CkprtvhDKPQkgZEnYKuj1899gJ
cGD8GczDODR6wRShIf165Ry7P16+lbAfhV4dEf6Bg9Up4IkTHI+9QA+5+cP+
Ucxtfcn2BxS56lbgL40GpeoCq7NFI+XVVFRXhrwXHbH2piccGmNlP1ioeA2h
pVv5sYGwO8FjPxLCLoMf28cQT/blIUNe/eDAyN2F/SBi6rFCNW19DmfP5dOJ
WX/0BZyysO/FN0O19m18bqrlxzbRxHtOIOzGAQg7th3YqW3JWlfW27LVlmaX
RN5FX0VlGg2aiqf8j3HHMoOhDadiDhIDuo3WE3YVvDluT/SM8RNgVDN7+XOf
IeEEu0rF2L0HgqftkLzbvTrY5zk4vZj6bgb19JkiiE0GiOH1yxY+ibEX6OG2
rmJRXYp2SOsN/0niA7T9CafsiDIYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaD
wWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAw
GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDwWAwGAwGg8FgMBgMxv8b/g/voT3s
       "], {{0, 557}, {499, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{499, 557},
     PlotRange->{{0, 499}, {0, 557}}], 
    Scaled[{0.5072916666666667, 0.5388888888888892}], 
    Center, {1.2750000000000004, 0.866666666666667}, {{1., 0.}, {0., 1.}}],
   ContentSelectable->True,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{735., 548.},
   PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
   PlotRangePadding->Automatic]], "Input",
  CellChangeTimes->{
   3.593497804456849*^9, {3.5934978386854477`*^9, 3.59349787411064*^9}, {
    3.5934979392479362`*^9, 3.593497967139688*^9}},ExpressionUUID->
  "6ef3359a-f24e-43d0-869e-c11fca32c40f"],
 "\n\n",
 StyleBox["En esta pr\[AAcute]ctica nos restringiremos solamente a la \
instrucci\[OAcute]n ",
  FontSize->18],
 Cell[BoxData[
  ButtonBox["LinearProgramming",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LinearProgramming"]],
  FontSize->18,ExpressionUUID->"5dbaf179-1c7f-4039-b722-b630f0ab8fbe"]
}], "Text",
 CellChangeTimes->{{3.468560788515341*^9, 3.4685610211624603`*^9}, {
  3.469380407178813*^9, 3.4693804136328907`*^9}, {3.501227265445403*^9, 
  3.5012272667471323`*^9}, {3.5932679453783913`*^9, 3.5932679537754307`*^9}, {
  3.5934979939340887`*^9, 3.593498004935498*^9}, {3.5934981002110147`*^9, 
  3.593498166150625*^9}, {3.593498250245057*^9, 3.593498252125263*^9}, {
  3.7516396846058683`*^9, 
  3.751639684975133*^9}},ExpressionUUID->"06c4638b-b5d3-4d06-bc5c-\
d9b81f0a7c11"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5934980440971193`*^9, 
  3.593498107059313*^9}},ExpressionUUID->"8fb560a5-8864-42a9-b27e-\
32330b485718"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{"c", ",", "A", ",", "b"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "A"}], ",", " ", 
    RowBox[{"matriz", " ", "A"}], ",", " ", 
    RowBox[{"vector", " ", "B"}]}], "*)"}]}]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561399860488*^9, 3.468561430793605*^9}, {
  3.907656630207286*^9, 3.907656639222374*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"38b0051e-cb8f-4a76-a431-99cbd9816bc3"],

Cell[TextData[{
 "encuentra un vector x que minimiza ",
 StyleBox["c' x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["Ax",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["b",
  FontWeight->"Bold"],
 " y ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[GreaterEqual]",
 StyleBox[" 0",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
  3.468562129053109*^9, 3.468562134180163*^9}},
 FontSize->18,ExpressionUUID->"44c3367b-56a3-4392-aa76-27a0b0fa7a3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ejemplo", ":", " ", 
   RowBox[{"Min", " ", 
    RowBox[{"(", 
     RowBox[{"x", " ", "+", 
      RowBox[{"2", " ", "y"}]}], ")"}]}]}], " ", ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"s", ".", "a", ".", "  ", 
     RowBox[{"-", "x"}]}], " ", "+", " ", 
    RowBox[{"3", " ", "y"}]}], " ", "\[GreaterEqual]", "1"}], ",", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "x"}], "+", "y"}], "\[GreaterEqual]", "4"}], ",", 
  " ", 
  RowBox[{"x", " ", "\[GreaterEqual]", " ", "0"}], ",", " ", 
  RowBox[{"y", "\[GreaterEqual]", " ", "0"}]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468563447231855*^9, 3.4685634785646276`*^9}, {
   3.4685637811426487`*^9, 3.468563791566009*^9}, 3.4685639010946712`*^9, 
   3.468594277847752*^9, {3.4685943481077633`*^9, 3.468594363163485*^9}, {
   3.46859448372736*^9, 3.468594526092984*^9}, {3.4688254521789017`*^9, 
   3.468825461558762*^9}, {3.468825498775558*^9, 3.468825515046933*^9}, 
   3.469380555747048*^9, {3.5932681119083223`*^9, 3.593268113713005*^9}, {
   3.751639175649222*^9, 3.751639180041161*^9}, {3.7830799578705177`*^9, 
   3.783079985036359*^9}, {3.7830801351298447`*^9, 3.78308014628034*^9}, 
   3.7830805221170187`*^9, {3.783082850659728*^9, 3.7830828528732443`*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"39cf5aad-9b70-49cb-960a-22c8fb2a21d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2"}], "}"}]}], ";", " ", 
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", " ", "1"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "4"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9076566894928536`*^9, 3.9076567279927216`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"14d161bb-4f4b-456c-8e98-12c1967ac89a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{"c", ",", " ", "A", ",", " ", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.9076567315080166`*^9, 3.9076567371170015`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"99d52b31-3b75-4381-a71c-e938ea42e49c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.9076567384918923`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"36c54112-22aa-4b20-a0d7-c9e357086e3e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{"c", ",", "A", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b1", ",", "r1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b2", ",", "r2"}], "}"}], ",", "..."}], "}"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Tipo", " ", "de", " ", 
      RowBox[{"desigualdad", ":", " ", "ri"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", 
          RowBox[{"-", "1"}], " ", ",", " ", "0"}], "}"}], 
        "\[IndentingNewLine]", "0"}], " ", "->"}], " ", "="}]}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"1", " ", "->", " ", ">="}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"-", "1"}], " ", "->", " ", "<="}]}], "\[IndentingNewLine]", 
   "*)"}]}]}], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561538423443*^9, 3.468561576454245*^9}, {
  3.469380421403983*^9, 3.469380424648666*^9}, {3.907656793159963*^9, 
  3.9076569668726635`*^9}, {3.9076570485638657`*^9, 3.9076570867174635`*^9}},
 FontSize->18,
 FontColor->GrayLevel[0],
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"1689e888-f562-41ce-949d-7330ad95f27e"],

Cell[TextData[{
 "encuentra un vector",
 StyleBox[" x ",
  FontWeight->"Bold"],
 "que minimiza ",
 StyleBox["c' x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["0",
  FontWeight->"Bold"],
 " y sujeto a las restricciones lineales especificadas por la matriz ",
 StyleBox["A",
  FontWeight->"Bold"],
 " y los pares {bi , ri} de la siguiente forma. Para cada fila ai de ",
 StyleBox["A",
  FontWeight->"Bold"],
 ", la correspondiente restricci\[OAcute]n es ai \[CenterDot] x \
\[GreaterEqual] bi si ri = 1,  ai \[CenterDot] x = bi si ri = 0 y ai \
\[CenterDot] x \[LessEqual] bi si ri = -1. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
  3.468561600149444*^9, 3.468561745390723*^9}, {3.468561779598865*^9, 
  3.46856180326057*^9}, {3.468561934139982*^9, 3.468561980351738*^9}, {
  3.468562290742138*^9, 3.468562366875297*^9}, {3.4693804282956343`*^9, 
  3.469380527527494*^9}},
 FontSize->18,ExpressionUUID->"fae25572-2e3d-4e0a-90e0-7485649e3232"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ejemplo", ":", 
    RowBox[{"Min", " ", 
     FormBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}]}],
      TraditionalForm]}]}], ")"}], ",", " ", 
  RowBox[{"s", ".", "a", ".", " ", 
   FormBox[
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "y"}]}], 
     StyleBox["\[GreaterEqual]",
      FontSize->14], "3"}],
    TraditionalForm]}], ",", " ", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "-", "y"}], "\[LessEqual]", "2"}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}],
   TraditionalForm], ",", " ", 
  FormBox[
   RowBox[{"y", 
    StyleBox["\[GreaterEqual]",
     FontSize->14], 
    StyleBox["0",
     FontSize->14]}],
   TraditionalForm]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.593268123598154*^9, 3.593268126142043*^9}, {
   3.751639287782257*^9, 3.751639315378065*^9}, {3.783080511677762*^9, 
   3.783080523716446*^9}, 3.78308285955584*^9},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e8526e8b-d924-47af-9979-771b670be946"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9076569730341187`*^9, 3.9076570326899805`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"953cb78c-d4c2-4be6-94c4-3a641e42b465"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["3", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9076570222219524`*^9, 3.9076570333774242`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"e2cb5025-6a24-431e-88db-cfa1201285bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{"c", ",", "A", ",", " ", "b", ",", 
    RowBox[{"{", 
     RowBox[{"l1", ",", "l2", ",", "..."}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"a\[NTilde]adir", " ", "cota", " ", "inferior"}], 
   "*)"}]}]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561538423443*^9, 3.468561576454245*^9}, {
  3.4685620854878197`*^9, 3.468562091381925*^9}, {3.468562178260363*^9, 
  3.468562189698707*^9}, {3.907657223227329*^9, 3.907657226414572*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"6e02b955-ac01-4dd3-83a4-433c1789febc"],

Cell[TextData[{
 "encuentra un vector",
 StyleBox[" x",
  FontWeight->"Bold"],
 " que minimiza ",
 StyleBox["c' x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["Ax",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["b",
  FontWeight->"Bold"],
 ", xi\[GreaterEqual]li."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
  3.468561600149444*^9, 3.468561745390723*^9}, {3.468561779598865*^9, 
  3.46856180326057*^9}, {3.468561934139982*^9, 3.468561980351738*^9}, {
  3.468562109662417*^9, 3.468562145707773*^9}, {3.4685621989532003`*^9, 
  3.468562206896542*^9}, {3.4685635306600103`*^9, 3.468563531970039*^9}},
 FontSize->18,ExpressionUUID->"d0710c6e-7467-4008-9d67-870768af2f79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ejemplo", ":", 
    RowBox[{"Min", " ", 
     FormBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}]}],
      TraditionalForm]}]}], ")"}], ",", " ", 
  RowBox[{"s", ".", "a", ".", " ", 
   FormBox[
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "y"}]}], 
     StyleBox["\[GreaterEqual]",
      FontSize->14], "3"}],
    TraditionalForm]}], ",", " ", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "-", "y"}], "\[LessEqual]", "2"}], ",", 
    RowBox[{"x", "\[GreaterEqual]", 
     RowBox[{"-", "1"}]}]}],
   TraditionalForm], ",", " ", 
  FormBox[
   RowBox[{"y", 
    StyleBox["\[GreaterEqual]",
     FontSize->14], 
    RowBox[{"-", "1"}]}],
   TraditionalForm]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.593268123598154*^9, 3.593268126142043*^9}, {
   3.751639287782257*^9, 3.751639315378065*^9}, 3.783080714919587*^9, 
   3.7830828618911963`*^9},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"bbfaebc1-67a1-4181-844b-c66f978ce028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", " ", 
     RowBox[{"-", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.907657100950842*^9, 3.907657124378787*^9}, {
  3.9076571848371134`*^9, 3.9076572024921446`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4e99465d-9836-4f5e-a126-05b0a6341a1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.907657124956869*^9, 3.9076572033045616`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"ccc8efcd-c001-4721-bed7-d2062a9fe41b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{"c", ",", "A", ",", " ", "b", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1", ",", "u1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l2", ",", "u2"}], "}"}], ",", "..."}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"a\[NTilde]adir", " ", "cota", " ", "inf"}], " ", "&"}], " ", 
    "sup"}], "*)"}]}]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561538423443*^9, 3.468561576454245*^9}, {
  3.4685620854878197`*^9, 3.468562091381925*^9}, {3.468562178260363*^9, 
  3.468562189698707*^9}, {3.468562228482874*^9, 3.4685622442647753`*^9}, {
  3.907657229539366*^9, 3.9076572346796308`*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"b0d1daf6-d45c-4a51-96f8-ffc4838d77c3"],

Cell[TextData[{
 "encuentra un vector x que minimiza ",
 StyleBox["c\[CloseCurlyQuote] x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["Ax",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["b",
  FontWeight->"Bold"],
 "  y li \[LessEqual] x \[LessEqual] ui."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
   3.468561600149444*^9, 3.468561745390723*^9}, {3.468561779598865*^9, 
   3.46856180326057*^9}, {3.468561934139982*^9, 3.468561980351738*^9}, {
   3.468562109662417*^9, 3.468562145707773*^9}, {3.4685621989532003`*^9, 
   3.468562206896542*^9}, {3.468562256134894*^9, 3.468562313924849*^9}, {
   3.4685635343622847`*^9, 3.468563538258202*^9}, 3.593268371195613*^9, 
   3.846669093908544*^9},
 FontSize->18,ExpressionUUID->"ffdd4088-bc95-4494-86fa-38b1df23cc94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ejemplo", ":", 
   RowBox[{"Min", " ", 
    FormBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}],
     TraditionalForm]}]}], ",", " ", 
  RowBox[{"s", ".", "a", ".", " ", 
   FormBox[
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "y"}]}], 
     StyleBox["\[GreaterEqual]",
      FontSize->14], "3"}],
    TraditionalForm]}], ",", 
  RowBox[{
   RowBox[{"x", "-", "y"}], "\[LessEqual]", "2"}], ",", " ", 
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], "\[LessEqual]", " ", "x", "\[LessEqual]", "1"}],
   TraditionalForm], ",", " ", 
  RowBox[{
   RowBox[{"-", "1"}], "\[LessEqual]", " ", "y", " ", "\[LessEqual]", " ", 
   "2"}]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468563947959095*^9, 3.468563978940844*^9}, {
   3.468564079121792*^9, 3.468564080706071*^9}, {3.5932681284701967`*^9, 
   3.5932681302447042`*^9}, {3.751639420206025*^9, 3.751639421381546*^9}, {
   3.783080712127326*^9, 3.783080712694996*^9}, 3.783082867986496*^9},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"99e042af-c968-45c0-9013-06332239c3e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", " ", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.907657249616111*^9, 3.9076572557407427`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"36e077a9-e095-4694-955c-0176de0c2d50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9076572565374665`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"850f02c7-22c7-4a10-ac87-9614e6d53de9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"LinearProgramming", "[", 
  RowBox[{"c", ",", "A", ",", "b", ",", "Automatic", ",", " ", "dom"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "   ", 
   RowBox[{
    RowBox[{"Automatic", ":", " ", 
     RowBox[{"no", " ", "hay", " ", "cotas", " ", 
      RowBox[{"(", 
       RowBox[{"s\[OAcute]lo", " ", "no", " ", 
        RowBox[{"negativ", "."}]}], ")"}], " ", "\[IndentingNewLine]", 
      "Dom"}]}], " ", "->", " ", 
    RowBox[{"Dominio", " ", "de", " ", "las", " ", "variables", " ", 
     RowBox[{"(", 
      RowBox[{"Real", ",", " ", "Integers"}], ")"}]}]}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561399860488*^9, 3.468561430793605*^9}, {
  3.468562528346806*^9, 3.468562532218626*^9}, {3.4685644201443253`*^9, 
  3.46856442326392*^9}, {3.9076572901287994`*^9, 3.90765736734873*^9}, {
  3.907657661871949*^9, 3.90765766248134*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4ae491a3-97cb-45fc-8c62-188a4906f75b"],

Cell[TextData[{
 "encuentra un vector x que minimiza ",
 StyleBox["c\[CloseCurlyQuote] x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["Ax",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["b",
  FontWeight->"Bold"],
 ", ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["0",
  FontWeight->"Bold"],
 " y ",
 StyleBox["x",
  FontWeight->"Bold"],
 " en el dominio dom (Reals, Integers, etc) "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
   3.468562129053109*^9, 3.468562134180163*^9}, {3.468562546170691*^9, 
   3.4685625735777197`*^9}, 3.846669109364683*^9},
 FontSize->18,ExpressionUUID->"8996ab3b-157f-46b1-9925-36ae80dfe4ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ejemplo", ":", 
   RowBox[{"Min", " ", 
    FormBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}],
     TraditionalForm]}]}], ",", " ", 
  RowBox[{"s", ".", "a", ".", " ", 
   FormBox[
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "y"}]}], 
     StyleBox["\[GreaterEqual]",
      FontSize->14], "3"}],
    TraditionalForm]}], ",", 
  RowBox[{
   RowBox[{"x", "-", "y"}], "\[LessEqual]", "2"}], ",", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
  RowBox[{"y", " ", "\[GreaterEqual]", "  ", "0"}], ",", " ", 
  RowBox[{"x", " ", "e", " ", "y", " ", "enteras"}]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468564455848542*^9, 3.4685644687266417`*^9}, {
   3.469380581816519*^9, 3.4693805833926983`*^9}, {3.5932681471422777`*^9, 
   3.5932681486939983`*^9}, {3.751639585063065*^9, 3.751639585532666*^9}, 
   3.783080773773885*^9, 3.783080914894177*^9, 3.783082871200778*^9, {
   3.783257294195315*^9, 3.783257301110331*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"031a18f7-47c0-4a0d-ab0b-8641aa17ed1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", "Automatic", ",", " ", 
   "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.907657407042365*^9, 3.907657434438637*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8151146b-7b18-41f4-adad-db0ec994e4c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["3", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.907657412807581*^9, 3.9076574493677163`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"0e00ccd3-6e12-4ffe-b591-0b37d40252ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{"c", ",", "A", ",", "b", ",", " ", "Automatic", ",", 
    RowBox[{"{", 
     RowBox[{"dom1", ",", "dom2", ",", "..."}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"dominio", " ", "por", " ", "variable"}], "*)"}]}]], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561399860488*^9, 3.468561430793605*^9}, {
  3.468562528346806*^9, 3.468562532218626*^9}, {3.4685625977322493`*^9, 
  3.46856260384865*^9}, {3.468564425240033*^9, 3.468564428296218*^9}, {
  3.9076575363150935`*^9, 3.9076575394398737`*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0e37cce8-c8ac-49f7-9a8d-2b0ff5ad4c6e"],

Cell[TextData[{
 "encuentra un vector x que minimiza ",
 StyleBox["c\[CloseCurlyQuote] x",
  FontWeight->"Bold"],
 " sujeto a que ",
 StyleBox["Ax",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["b",
  FontWeight->"Bold"],
 ",  ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[GreaterEqual] ",
 StyleBox["0",
  FontWeight->"Bold"],
 " y xi en el dominio dom (Reals, Integers, etc) "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
   3.468562129053109*^9, 3.468562134180163*^9}, {3.468562546170691*^9, 
   3.4685625735777197`*^9}, {3.4685626085454206`*^9, 3.468562613367588*^9}, 
   3.783267075241304*^9, {3.846669117212759*^9, 3.846669141314973*^9}},
 FontSize->18,ExpressionUUID->"0879cb82-2621-4182-aeb7-2b2d310c9054"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ejemplo", ":", 
   RowBox[{"Min", " ", 
    FormBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "y"}], ")"}],
     TraditionalForm]}]}], ",", " ", 
  RowBox[{"s", ".", "a", ".", " ", 
   FormBox[
    RowBox[{
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "y"}]}], 
     StyleBox["\[GreaterEqual]",
      FontSize->14], "3"}],
    TraditionalForm]}], ",", 
  RowBox[{
   RowBox[{"x", "-", "y"}], "\[LessEqual]", "2"}], ",", 
  RowBox[{"x", "\[GreaterEqual]", "0"}], ",", 
  RowBox[{"y", " ", "\[GreaterEqual]", "  ", "0"}], ",", " ", 
  RowBox[{"x", " ", 
   RowBox[{"entera", "."}]}]}]], "DisplayFormula",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.4685644829833593`*^9, 3.468564489901862*^9}, {
   3.469380586792644*^9, 3.469380588152581*^9}, {3.59326815029397*^9, 
   3.59326815203793*^9}, {3.751639594855095*^9, 3.751639596358193*^9}, 
   3.783080943361681*^9, 3.783082873730118*^9, {3.783257303083873*^9, 
   3.7832573086834*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"deeea438-011a-412c-831d-29d8539f2580"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", "Automatic", ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"Integers", ",", " ", "Reals"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.907657550267234*^9, 3.907657556548137*^9}, {
  3.9076576015580263`*^9, 3.9076576056202765`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"fe35fc0e-f046-4972-be51-752a8e9945d9"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpip", 
   "\"Warning: integer linear programming will use a machine-precision \
approximation of the inputs.\"", 2, 26, 4, 17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.9076576030422983`*^9, 3.9076576060420837`*^9}},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[26]:=",ExpressionUUID->"5f1f7d9d-590f-4231-a20b-434d2959ac9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1.5`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.907657557032383*^9, {3.907657603057938*^9, 3.907657606229597*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"fa947ff9-493c-485f-8e12-b7cb8ddb1f3f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"LinearProgramming", "[", 
  RowBox[{"c", ",", "A", ",", "b", ",", " ", 
   RowBox[{"Method", "\[Rule]", "met"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{"Automatic", ":", " ", 
    RowBox[{
    "no", " ", "usa", " ", "m\[EAcute]todo", "\[IndentingNewLine]", "  ", 
     "Simplex"}], ":", " ", 
    RowBox[{"simplex", "\[IndentingNewLine]", "  ", 
     RowBox[{"InteriorPoint", ":", " ", 
      RowBox[{
      "algoritmo", " ", "del", " ", "puntos", " ", "interiores"}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468561399860488*^9, 3.468561430793605*^9}, {
  3.468564689443578*^9, 3.468564705385826*^9}, {3.468564765079493*^9, 
  3.468564767383057*^9}, {3.9076575608733754`*^9, 3.907657595964689*^9}, {
  3.9076576497947264`*^9, 3.907657683561351*^9}},
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"61dc69e3-6628-44f8-9c38-ea08ac54e8ad"],

Cell[TextData[{
 StyleBox["encuentra un vector x que minimiza ",
  FontSize->18],
 StyleBox["c\[CloseCurlyQuote] x",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" sujeto a que ",
  FontSize->18],
 StyleBox["Ax",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" \[GreaterEqual] ",
  FontSize->18],
 StyleBox["b",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" y  ",
  FontSize->18],
 StyleBox["x",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" \[GreaterEqual] ",
  FontSize->18],
 StyleBox["0",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" utilizando el m\[EAcute]todo met. Los posibles m\[EAcute]todos \
son: Automatic, \"Simplex\", \"RevisedSimplex\" e \"InteriorPoint\".",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.468561440225979*^9, 3.4685615075510387`*^9}, {
  3.468562129053109*^9, 3.468562134180163*^9}, {3.468564709024008*^9, 
  3.468564806475615*^9}, {3.46924862871847*^9, 3.4692486293868113`*^9}, {
  3.8466691443719788`*^9, 
  3.846669152603805*^9}},ExpressionUUID->"87096ee9-1d64-4b0b-8142-\
ad9a91137850"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.593755848420824*^9, 
  3.5937558485492697`*^9}},ExpressionUUID->"19adb553-5dd3-4a22-98bd-\
3852e3b21f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problema ilimitado:",
 FontSize->20,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0.67, 0]]], "Subtitle",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.5935014160512323`*^9, 3.593501454579236*^9}, {
  3.593701741386943*^9, 3.593701741655039*^9}, {3.593755755541122*^9, 
  3.593755778539369*^9}, {3.9076576986228037`*^9, 3.907657700966441*^9}},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"49fd31d0-436c-4e38-8207-009069da27d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Infinity"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "}"}]}], "]"}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", " ", "2", "x"}], " ", "+", " ", "y"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"sa", ".", " ", "3"}], "x"}], "+", 
      RowBox[{"2", "y"}]}], "<=", "6"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "+", 
      RowBox[{"4", "y"}]}], "<=", "5"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"x", ">=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"-", "Infinity"}], " ", "<=", " ", "y", " ", "<=", " ", 
     RowBox[{"Infinity", "-"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.593755386964259*^9, 3.593755526656866*^9}, {
  3.907657711231298*^9, 3.9076578001266737`*^9}, {3.9076578439173484`*^9, 
  3.9076578470889177`*^9}},
 FontSize->18,ExpressionUUID->"3842c606-d2b2-4127-8b56-a598c2ec76a7"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpsub", "\"This problem is unbounded.\"", 2, 27, 5, 
   17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.907657690795217*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[27]:=",ExpressionUUID->"bf666c70-f046-4684-a92e-4eb408df779b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{3.907657690810858*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"8efcd0d4-dc84-48e3-be3e-e41effb4ad53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problema imposible:",
 FontSize->20,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0.67, 0]]], "Subtitle",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.5935014160512323`*^9, 3.593501454579236*^9}, {
  3.593701741386943*^9, 3.593701741655039*^9}, {3.593755771923459*^9, 
  3.593755776611274*^9}},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"e5830918-7fa6-4eea-b2ed-568ad8bfea41"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", "0"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Min", " ", "-", 
     RowBox[{"6", "x"}], "-", 
     RowBox[{"8", "y"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"sa", " ", "3", "x"}], "+", 
      RowBox[{"2", "y"}]}], "<=", "2"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x"}], "+", 
      RowBox[{"4", "y"}]}], "=", "1"}], ",", " ", 
    RowBox[{"x", "<=", "0"}], ",", " ", 
    RowBox[{"y", "<=", "0"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.59375562084214*^9, 3.593755690159009*^9}, {
  3.907657808454235*^9, 3.907657892601032*^9}},
 FontSize->18,ExpressionUUID->"47142a24-35ca-4c06-aac2-0738aa375cf4"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpsnf", 
   "\"No solution can be found that satisfies the constraints.\"", 2, 28, 6, 
   17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9076578045170107`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[28]:=",ExpressionUUID->"f2b7f7f0-0007-4795-a6fe-5806d172ad6b"],

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "0"}], "}"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.9076578045326147`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"c2f01065-45fd-4f61-a64d-ac5fb5ed8904"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7830829495895987`*^9, 
  3.78308294988568*^9}},ExpressionUUID->"bc1d9ca2-e880-4003-9214-\
2ac90eb10e63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    ButtonBox["RegionPlot",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/RegionPlot"], "[", 
    RowBox[{"pred", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", " ", "ymax"}], "}"}]}], "]"}], " ", 
   "representa", " ", "un", " ", "gr\[AAcute]fico", " ", "en", " ", "el", " ",
    "que", " ", "\"\<pred\>\"", " ", "es", " ", "cierta"}], ",", " ", 
  RowBox[{
  "para", " ", "los", " ", "valores", " ", "de", " ", "las", " ", "variables",
    " ", 
   RowBox[{"dados", "."}]}]}]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.593756693887993*^9, 3.5937567855906973`*^9}, {
  3.593757057058092*^9, 3.593757077113124*^9}},
 FontFamily->"Times",
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"6701ca95-5340-4e68-9f9e-d493faf0c1f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x1", "+", "x2"}], "\[LessEqual]", "800"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x1"}], "+", "x2"}], "\[LessEqual]", "1000"}], "&&", 
    RowBox[{"x1", "\[LessEqual]", "400"}], "&&", 
    RowBox[{"x2", "\[LessEqual]", "700"}], "&&", 
    RowBox[{"x1", ">=", "0"}], "&&", 
    RowBox[{"x2", "\[GreaterEqual]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "0", ",", "700"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "0", ",", "700"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593704495878778*^9, 3.593704531114833*^9}, {
  3.5937045704100227`*^9, 3.593704599432152*^9}, {3.593755908189632*^9, 
  3.59375614400296*^9}, {3.593756290022512*^9, 3.5937562905900507`*^9}, {
  3.9076579109121723`*^9, 3.907657913724475*^9}},
 FontSize->18,
 CellID->28861,ExpressionUUID->"a1bc0ad8-a7d5-43c7-aff8-60159d6450ca"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1l3tUjekexwupg0wHcXLIZSpNSDoVcvslkai01ahGTSiqretu197Rfe+s
Qh1NaVQcISV0MTITFZIQCl3c5RKZDDWRMi6NzlrfZ6/1WPXPsz69+32+3/f3
/C7vO2ldgMBrgJKSUqSyklLf+tJFVevByoELsS6fIplxRbiIwHEL/kytEQoY
e/jopRRm/8B4Qs2xpTXCdYyTfrSuLhu8kfGnt08WF2YLGZtdqHi8UjuQ8atv
hk2qEQYzPujq4mFZGsL4h5xD/ysbHEb9+eRX+AXDLxh+wfALhl8w/ILhFwy/
YPjtL468T36FXzD8guEXDL9g+AXDLxh+wfDb3znzceR98iv8guEXDL9g+AXD
Lxh+wfDbXx7y58zHkffJr/ALhl8w/ILhFwy/YPjtr074POTPmY8j75Nf4RcM
v2D4BcMvGH77q2O+Tvg85M+ZjyPvk1/hFwy/YPgFw29/fYavY75O+Dzkz5mP
I++TX+EXDL9g+O2vD/J9hq9jvk74POTPmY8j75Nf4be/vsz3Pb6v8HXL1wWf
d/y58nHjffErPyf4Psz3Ob6P8HXK1wGfZ/w5wh8/p0Z0vHlo6ihlfsDwA4Yf
MPyA4QcMP2D4AcMPGH4um1toF2ZvZn7A8AOGHzD8gOEHDD9g+AFDP1qe5Kbf
HsH0wdAHQx8MfTD0wdAHQx8M/XEv/GpXakczfTD0wdAHQx8MfTD0wdCT7Bjl
r24Vw/TA0ANDDww9MPTA0ANDr8H4tHqNMJbpgaEHhh4YemDogbG/0e21x+JT
4tj+YOwPxv5g7A/Gftsj1GwtS2VsPzD2A2M/MO5vnVz4R2+znN0Pxv3gkza2
C6XTJXSvR+55VWjMWF9wbFpR9nLGnfXbRpYPXs3YO8pDzUHbg3HTqA/xlqWe
jJfkp6mYOfqQUt/fIzGl+HrFqFsFkXXJ8bPxKaKv/u+flhHZGR5OJxYayfTb
/ei+gemnFs0oto/eo9Zy4e0YphPbl7+9ivMAw9fDvvt1ZSy+YDyH+fV7Wdkr
5Cx+YFzn44O4ghFXMOIKxr5g+ADDNxh5i7igTyFe6J+IF/oH4oX6QryQn4gX
8gvxQb4Yn8rWU3rkRXcMJfJb1nFUpaOap261lkwbtHVTA2R0WPuOwMzRhf4r
vVC1cpec2ga1e0mne9PU+wdNpSWxFB7g2Bqfsp62xixvNL0fR/86Ibqh3+5G
T/U6QzoHyMlzz8TkW2cl9Nu3p9cWZ89lfPXNAScH7ZWMoQOGDzB8gj9mZtfW
CiczPlU2oqB88FLG5gkLGixLHRnDFxi+wXguxB9xRdzBaj3S9rEZYeSckdAi
vLSJnQ9WzF3w/8tohZgy1jUH6vcGs/PDueOcwfgddKCr05f/l7aw/g1uGZMy
s7A4kEL7+p3pFnb+NX35Uazov2D4Fu1c/a53YzR7fuQ3nh86BYJ6e3dRKNPh
n/OdarzGM90Q9px4PsxXKp99Q3g7iM4uumiY2iplz4P5o/Gs6dtnmgFk2Jef
sZHMP/r3fvt5OZ3hvlRn9jmtLCmGllRdcx7Yq6g/MOoPjPoDo/7AqD+bHRo6
UaslX73HuNlYHVkTHEipi863qAwJ/eo960pz83f26mK63y3O2V4m+up9Z444
PM8iT0p6x/Q3jAwI+mr+5w7RnGJiGUn3qk7amlj6fzUvh12/JRgZEEN+M8bV
WeQp6vnQp9d6dMKL1fNsb8c8W621rJ5/Th//664vz/e+OvHxgR0LGWfdT++y
1XJgLFG91mls78p4mpZyz7bKtYwzCjJDI902sLXzSKjWLO849js7h/Glb5Jk
bJ/8d+edi0rkZJ+2yHZBaxg9bxi77/g6P7JI22XiuSeU5cVumy71C7vF9Lg3
t3b5ChEl2izrarMPYXWH/2Of+t4PJUEDgtl8mFrimnzzcyCVGzy4YhS7hWb5
ur3q8Alg8wK6ox/NzdmZFE2XGyr9P9f6svkheP+ipDvfmxa7HLh8u0ExP05G
bZO3zo8jd+t5G0qVvdk8ebLebpaKhift+7zMJ+2DYl6P0DXWPegpo9fHs1ur
N6xn8+VF1sYg3TZ3+nigQ00wWTFf/GpuV3lsk5Py3OE389Ld2Lxh86S3/Vb1
sk0sDqPSUtoazyj6f6zBdJ9Lror+33HmYuupLkX/LzKY+cv31or+7y2O7KxL
U/R/z5vujVY3FP3/bJiKeECPjLzfvrePdAulv9x/vLGtMoimyOMvDzUJpepE
+eqKMcFUdPiohopGCPtdgPmcxJTnIjKZOLGp6LjivqaE1NrAnnAqbX9po7U7
iPaXnHI8YLuZZPo6Orpt/rR4wgzb9T9F0UCb+WMo3Z/+udypPu1FFI3+KSHH
2N6XXO+2PDMYE0tpJ/b/bPvRh6ijW7/KIpZkhtWfcid/+S6xe7hwnnkg1T6V
VBg2hrB19O6pUSVbg2medOT8SYFS9rv84QWnRw6NJAfVycrxd4SkLtAZP3BV
DKXkiFad/OjM5jvmTpWo8o9vGuWsP+B9CPUgjX75uKJkFruO9yNc79b0EB5e
Yseu4z0C1++aPjs+x8WZXcc54PoaI3Xn5Ise7DrODddrLuQ2xazzop7mp6IH
bYr3K+2FS5O78yUsjg/q6tXkMRIqbGssTn/vq/CXP2hv/RRNxlueUO0vlgaM
tV4a+FdpWDF2Tfrr1cmP1ox999mYLK1YxXhIsHEInXBibH0laua0t2sYow7A
Iza7pqtprmeMugLHanRpfijcyBh1mmU+v2FilWIOog7GRwcaJaYGUOXufe3m
sjCWZ8/b21NzQ8WsbtCnIxpv7prlFULD7FcVnTMTs7w2zNnvZPidiNUh6u6l
r5+mgZKUHAcNDrL+PZjFWeLqNLrknmL+Yk64KKmljsuMoL2lv82sywyk7Q2P
1dusIihqgkZB2Dg/Nn9R5y02Dgmq/46hqw+aWo5kbaLPJguW+HdEk5FgrPHR
rDXkaHvXSHmTnL23jJnUnlVsochPzOvXrT6ySiPFd/fsPeOslj1VfP9HC+pU
rqcpvndrVGOrv7dWfP/phPsMP92l+F56VL9pj+cyCaubt+2Zx2LOhrK+a5Aw
wf3lBzGru/k5dv5qohDW14MX3NQOLhCxuo13VZ6RrBtMqo+St/9qEk5lb2TN
PR5B1HneY0tG+WbaO8G7eWpRAInFBkPz6yJJTRBAvXr+VHw0ImLJtC/xSLzm
MUdTSMHyJ4vtSmIoo6zh3LDtPuTTXVN2RhpLC/7R1XTOzItsnDwsnhfH0XWR
q3Ndpgcd+mvw4/23ZfRu1aLRc2UbKWvAjj+3asdRfEVuuvXv66gn9z87F1vJ
6G+2KM2q
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
Hx2dM/8HXUFlFg==
          "]], PolygonBox[CompressedData["
1:eJwtk2dvjmEYhq+rERGb2rvUVnt9QlFqU6tGjVohQkREfPET/AL/waYiQmjt
vbcQQgiNiIjVOM6c/XDkOe7nud83z3Xe51NUvbNiR0FElEIT2JoRA+Ac/gDW
4FWwHX8HffH2cAc/C/3xQrgb/s0YfCxcw09Bb7wd3MbPwAR8ItzAT8M4fDxc
x2ugBC+C+/hNGIGPhCv4CRiEd4L34XtL8BlwFH8Jy/ByOIa/grZ4A9dL8BT+
wuL03trws+WsXzfuqcRnw/HwvX+wNP1fddAmfU/+BCazngTnwxmswldCJf4G
BuId4C1+GUbho+EqfhL+wCLWL7heDGfVPD27MmuV3qNnj2AY615wL5xhS/w3
1wvwEFqnZ9Rsj8NZ9kuflTLdh/dMZ/8LpuLT0v99GAbjXeBj+B3X4+tgP/4B
huPF6W7cUmfwPfAjvGcOPjc9qzLUs67pLmjPbrxzevbvMBTvAV/DHdiLd093
4ScMwbvB53CnduEd0134BhvxDXAA/wRb8M1wEP8SnmVt+t0103x8ChzCn0FB
+p30Luq4urU63XV1THtL09nqN8p6AevnjZmra7PS3VLn1MWZ6W6ok9PxsvRZ
HAl3YUW6G+pERXqPnqkDkZ5Rs6lDymZTehZlpCyq07Mqk6bpzJSVMlA3+qS/
NXVkGz4vPWs9NEt3QGevjBamO6Cz10z6tlukz1bf+H+w6I58
          "]]}]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwt0ss3FFAcB/AZjNd4RaKHRCU9JCSjojSVngg9hJJRKOOdSh7Llu3srGw4
J/6G+ovsS/KZk8XnfO/53nvu4t5f2eBE53gwEAhskERinUUR5VQRIUobPcSI
M8cy3/jOCqussc4PNtniJ80uv0EBpxmhglFOcZEFwuRTzhInKaOKr2RygFIW
OcFxLjBPBhEaKOEL6TQxwTuGecsxzvOZNK5Qz1E+kcp1Eo8UY4hBjnCOOUJc
po7DfCSFa8QZ4A2vKeYssyRTSw1FzJDEVcbo5xV9HKKSaYJcoppCpoL/P66R
D7yklx4OcoZJ/jn2SD7kAS94zq4+T97nHs94yl99rmzlLt10saPPkXe4TSdP
+KPPllFu0UE7vxMzJVu4SRuPec+2vV+EySSDdNJIJUQKyfvzuQdx4jOw
       "]]}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{0, 700}, {0, 700}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9076579039595222`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d7b3bf4c-ae8a-492e-a408-c87441861588"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    ButtonBox["RegionPlot3D",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/RegionPlot3D"], "[", 
    RowBox[{"pred", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "ymin", ",", "ymax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "zmin", ",", "zmax"}], "}"}]}], "]"}], " ", 
   "representa", " ", "un", " ", "gr\[AAcute]fico", " ", "tridimensional", "  ",
    "en", " ", "el", " ", "que", " ", "\"\<pred\>\"", " ", "es", " ", 
   "cierta"}], ",", " ", 
  RowBox[{
  "para", " ", "los", " ", "valores", " ", "de", " ", "las", " ", "variables",
    " ", 
   RowBox[{"dados", "."}]}]}]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.593756914339118*^9, 3.5937569413562117`*^9}, {
  3.5937569795561953`*^9, 3.593756998203594*^9}, {3.5937570357138863`*^9, 
  3.593757047133359*^9}, {3.593757083865189*^9, 3.593757090337255*^9}},
 FontFamily->"Times",
 FontSize->18,
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"39c4027b-d32d-4a82-b467-615ce492ead9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"3", "x1"}], "+", 
      RowBox[{"6", "x2"}], "+", 
      RowBox[{"2", "x3"}]}], "\[LessEqual]", "6750"}], "&&", 
    RowBox[{"x1", "\[LessEqual]", "1000"}], "&&", 
    RowBox[{"x2", "\[LessEqual]", "500"}], "&&", 
    RowBox[{"x3", "\[LessEqual]", "1500"}], "&&", 
    RowBox[{"x1", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"x2", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"x3", "\[GreaterEqual]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "0", ",", "1500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "0", ",", "1500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "0", ",", "1500"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Automatic", ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593704495878778*^9, 3.5937045610095863`*^9}, {
  3.593704607080092*^9, 3.593704623895355*^9}, {3.5937561825639067`*^9, 
  3.5937562247072563`*^9}, {3.59375630929414*^9, 3.593756398838228*^9}, {
  3.593756481621578*^9, 3.593756532474203*^9}, {3.688727670891654*^9, 
  3.688727672124709*^9}, {3.7830810639279623`*^9, 3.783081112671764*^9}},
 FontSize->18,
 CellLabel->"In[30]:=",
 CellID->989707567,ExpressionUUID->"d1b14e4e-df10-4114-a0ab-27dda47dbc8d"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
kHY9pM+X9j7kd0kej3/nouXjc/6G/wNep+Me
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{490, 434, 427}, {507, 447, 438}, {389, 353, 346}, {
           307, 308, 309}, {344, 312, 305}, {436, 406, 395}, {549, 548, 
           305}, {393, 394, 395}, {349, 323, 309}, {425, 391, 384}, {546, 545,
            384}, {430, 431, 432}, {396, 363, 351}, {386, 387, 388}, {436, 
           437, 438}, {266, 243, 229}, {266, 267, 268}, {349, 350, 351}, {552,
            551, 229}, {430, 398, 388}, {425, 426, 427}, {344, 345, 346}, {
           310, 282, 268}, {500, 440, 432}}], Polygon3DBox[CompressedData["
1:eJxNlutvzmcYx5/fbWMndegBdX7JNmyMiLP9B/sLpjo6pFtERET6gmwJmUgN
aaybYd54IyTLJqpU6+mzEhFZRLxBq9XzAUG3N77fXB+JF5/0eu77uq/r+l2H
++7ciu++qk65XO538Y44mOVyf4u/xAHRJm6KMimVis2Sj4ifxSawfFh8A5Zr
RaWoEkc547PfimOseW+r+EnsF1vEfTFbfmaJmSnsXBIXxSHRpxiL9Xey6JVc
JJ0HkpvEBMn3sOGzM0Sj5P/EqLjMdz0TT8WfokG8Ei/xcwn5BT4vIn8kWx+m
sDHKmQbs2F6X6CR3z1l748u/n6AzSjzDYkicFz2iW5zDt20PigFxQt94XbSI
33JRi1tiSoqa/Cj5Anb2cXYU24PE/hJb/fj+X4wQg8/2EsN5vvMFuuNT+Lot
pqbw+a/ku2K65HJxJ4s1y9PEMrFFcVaJ5ci/iOOs7aDX/F3bRY04I/4Qezhj
vUqxUXyh39X6u00sTbHmvTGSUwq5zr2bYq0KX3Xo+YzPOg7H9on4OIXfT1Po
NYp3U9hYJHbp907xWQqdGmJbIHmh2J0LHetu51tcm+/B8q+5iLsauZ5vcGxX
8VlHbppYO45OPeuO2bl3jp3bqcQ+P0XOaojjlDhJzJ6DFs+HdCalmMUG+rqW
Wb3M2mHmspE17+VFQZTobDGz9RCbTcygZ8Kz8EEKXd8Rvht8xr3hGfTsuUec
w53U/fMUc38Fn0eYWdt1rBPJ7Wm+aRdndtAri7F1kh7yegsxO1Z/85IUNaim
dxZTI695bw+9Zh+7qZVnq/mtOl2jJq5BJ3N7m7l7zJxbvsnc9jATngOf6xHd
1DQvBsUAc3wduR+/Lch9xNCM3EscBTEshkSrcyAfS8UysSQLnV582ve6LO5R
37NrszgzRAx5YnJsXfSge2meuMEcNrI3NsVMOFdt4h9ydhq5QI26uNvukCPv
jRBzgTrl+e4T1K6VNe+tz+INcMzriNmx+21YA5b9dqzO4t5fJVa6Z8DyCjER
LC8XRb4ns/Bh22W+x8SXrHmvGLursF1Ofp3naeR5g/iafJcQ02rOlr0Vdyms
RaeE2PwmVhKX/WxibSV2NrPmPdfgBjl37ov4lvdUi3Fir+Qfsrj3fd/73fT7
6Xf7ALoV4v0UZ1bgu4K9DZzfyzedok6t1MZ+n1JD19Lvht+RR1ncA34XBpAf
sOe3ph0dvxn97Plttl/fGb4rHJN7dTJ1c886tlp0rOs3yW+T56wD28PI7ez5
ze1EZwEz7Vn23dzBumezjTMdyAVibEfO8x2PkH2X+G7y++h30neUZ9vvo+80
z7h73TPvWXfPe5ZLqbXneE6K/1/8P8jZLO6UZma5nlkvoXf6yHU5vTbCrE6h
rwbphWfotTHHZfTZAHXyWff1MHNn2TaGmGX3kHvHM+2cO/eek27uAsvWse5r
+Y9n6g==
           "]], Polygon3DBox[CompressedData["
1:eJwt0TtOQkEUxvG5N6ERFwBUoqJYGkCpYQdUYgIKHZLAFowv4gM62YOS+CCg
dC7ADRh7o7ED6Wj8n8xX/DIzmZsz3zk3WW+XWqFzLoYItjik8cX+D+9Y57yG
cuDcHrYRRwY5FBEL/PdLrMtIYMb5kfUH35jjCUlqreCe/R2OkcUhqqiobl7v
7aOGXYytLqZY4AVXeNXdCNc4wqX2fTSU02ofoIkCOsowwBAXOMVz4LM/4Ew1
RnrvDbfo6d56mqCLTfraQDTws7A5Wl8nqtNTj1H1Zz3taGZV3VudG+W0GX3i
A7/Kaf9iNfRzs/xl6Sj/uWZmOVKh/195vfkPnAY6QQ==
           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[None], 
       Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{435, 442, 501}, {189, 227, 204}, {423, 476, 428}, {
           264, 303, 269}, {342, 382, 347}}], Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[{{262, 301, 304, 303, 264}, {340, 380, 383, 382, 
           342}, {187, 225, 228, 227, 189}}]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{99, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 
        525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 
        539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 
        553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 
        567, 569, 99}]}, 
      {GrayLevel[0], 
       Line3DBox[{1, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 
        592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 477, 475, 
        473, 471, 469, 467, 465, 463, 461, 459, 457, 455, 453, 450, 580, 407, 
        364, 324, 283, 244, 205, 167, 129, 5, 1}], 
       Line3DBox[{4, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 451, 
        448, 478, 491, 501, 442, 400, 355, 314, 271, 231, 191, 153, 101, 102, 
        83, 66, 49, 4}], 
       Line3DBox[{594, 606, 607, 608, 609, 127, 128, 166, 204, 227, 228, 269, 
        303, 304, 347, 382, 383, 428, 476, 604, 422, 379, 339, 298, 259, 220, 
        182, 144, 46, 594}], 
       Line3DBox[{513, 568, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 
        123, 125, 610, 97, 80, 63, 45, 44, 41, 38, 35, 32, 29, 26, 23, 20, 17,
         14, 11, 8, 2, 508, 509, 510, 511, 512, 513}]}}},
    VertexNormals->CompressedData["
1:eJztmns0lHkYx62c3XTR0Vau24nmdEN2243k6NFOKt2kOrpsYkjK7FBTaUvR
TgnV6LJS7HYll4oTSmyLtVEjkVtuo4uS22DUJh2p9t3eR/a8mmjcpvX6g/N+
5znf5/u87/v7fd73GC07l0UO8nJycnbEr35y1J96oBwntSn5oN5eHdW/PZ3q
I22erpqL9qF9aJ+O+1F1afcNqv6xOWldQh19XWRCb1NHXxeZ0NvUUffLTj7P
SNK7at+m6/tmfUc/7677+WN9+poutZ+kfaOH6+n7oaN6ScoGS9eiYDAOr+U5
PhVDy3HH/Oj12DO61H70euxl3V3HbV2O1hFYb78wgtcsBn88blROEVt6xsMI
N+MsHYEYWMMdlW5VRcLGrYz5KVsygF+d0J+dVAf9tI8FL4+7Rq9HmdKl9pOR
9diqj/XJu7PUSQhHVtzYreAiAvPAco7tzJw+t34fUDjYiMfaR8aVTVFLgb1B
Ybt5NmKwG16gcn9DImyr3Oqh5pQLmiVRAW6ltaBYb+IlN18AlrGWDuPOFoGT
cFjajQk10HTRgR9ulkWv017Rpfbr9nW6f1r8GCOOEMy5g0RJHBGkqzYlnTPP
gQtmvkbbnIVws6CUP5fQPctNTHfNyQG26pzG75feA3YDY0/umSq4mG/C0WMV
dJILkvL3/nVkU7jZcvyIwk0mctOOws1hyE3Gdd31gTvzYY2+4u8bntSAr8qQ
56zKTDi9s8TK8dBdWD6eM3WmcjUE/3TCy3pDPr1Oe0WX2q/b+aiFfDyGfGS+
l4+t/ru4RmNqfhTCqKDmOHNnEazd7wOP/q3XZseuYwthsi5zTzyhhxjYFHgR
uib6H0V/C/QfLffqYT2x3g0HmG+LCqoCl4MQsWNlARTpDCz8jvCPc6gKKiL2
h7SE1an+xP5QNuWPl9qE/wmF2BAG4W/qKVjlMufT4Xglhb+vJfDXEfnrhvzV
QP4ORP7aIH8dkL/yUTR/+8K6Pow8nYU8FSBPzyNP05GnPORpAJPk6bzHJE+t
Hn8MT1v7hmLf77HvLewbQeH4Luz7gwrZd2w12ddNcdrbvobBe8O81wthjNhy
rAdRD0msM4bEPrA9+5XB9uX3IGvp3+YMYh/4fKSwvmIlNWfP3bc8CpcD8LiK
wmVb5DILueyLXB6AXNamcNkPuZznQXLZbyTJ5eTzNJf7wPoFI+QgHzm4qh3O
BiJnVZGzrshZFeSsHnL2MnJWH/0Po/8C9F+mQ3JWrWn2W86qnSQ5WyKBsyLk
7K/IWeZ7Odua8ygl51bMOZSSMx5z6lFyWmFOpTfNb3M2vCZzMq+ROYspOTMw
Zw3mPI45p/bQ80CNhPdoBoXja5DjWyS8R69Ajq9FjjfT79G9qEvtl3Qc+chE
PuYiH3VSFASNauVQJ1z8/KVFOTAUK6YL+QLwGR8rqFArg/TQpnmu4eWw23fw
k4RTeR/d9xyFy6nYdyL2rcG+mtg3W53s2+8y2TeNT/aNGbzvjRzvEZxkTdp9
ZHYleFkWF8YvzgBu6WD9FzalUKQ0kSOwr4RnoQ6PLxygcqo1Twglz23Mo4d5
ajHPSMwzQZXMczqazON3hswTi3l+wzy/YB7rHDLPUHUyT9lZMk+Ask50SvYD
CNb23zfeSNTuumipD6LUS9JfXY2u3zSiFDJuN4zQaKiGQzGv5dw50cCelWpV
vqAUZmSe2Vw9rRqMbhYXHCy5AVOURdpO8qVwYKB91rPCSujXZKZyM+xOOxyR
9r7srA9d31v1LfyoQn7Uvff/kq31uot53txQMZhYF3oOmZ8My8pOW1/XjJBY
z/NOzr48SAxm/Q9yV+/NhB2DNt91tpfs30XztXMfyo7ecv6f43lvxr/U8+yE
57nlfM7G8+mB5zPhr3itp9xamPG1e1TWhQKI1DfUj7P4E0KjLM2tU6uB6//M
wp59D4pWTcqtds6Wch/ounnrcc4GyrzTcV5byrzzcF43nDcR5zXGea/ivPWh
5LxDrpDznmB9eN66+zGb/Bhi+MbCwMCQk/GurkXX76C+8emLu2aP6+D4w0nu
zIAsaOZ/wU13PvYupwnmTMScM0LInLpRZE6G639zyur332Rn3XRWl8RrSfeD
rOSm9Y7pC++cmhdxrA6MB6xhyLvnQIzIrbjwdBg4supsPR+Wweb88SmO7ArI
mqq5d5FKGpjOBZX9xPvg6PPbNQKI9zifoqYi/9k5IFBY5ue3TgiRl5bEPSB0
+CxSbyWhK8V/+STTWQiNyXzv+8Rzph0nd8J+4v1RHX2+RR879AlBn6vo8xX6
KFN8HNFnMvrooA8HfdLQJwZ9RqGP7xXTZ+qMXAh00khcEk5w4Oh9hQr5DLie
6PDzpoeXIC+JVTs3TfzuuLevz6etd/p7mDK2v3eXLivX6/+iS/pc1nL21rzd
lavt/f4PliO+Gg==
     "]], {}},
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"RelieveDPZFighting" -> True, "DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0., 1500.}, {0., 1500.}, {0., 1500.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9076581151284494`*^9},
 CellLabel->"Out[30]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
sJD9mj1sztNByDllQjYNITeVC6kUnoR8pSikVYDnr7UMJteAkDMNIXvLmphG
ilSivSwwyUYw7j7u5qOVurNWUI78NBJlG+eCnMNlcrYMOa805FweCOYWdxVy
mjlmuzMxhseXF3kSe5SLQch+o0rRX9biVwbiWCAxXYXthYR8NghZ5eKYtbUg
UE+ZQC1DoA2GQKcZ51zVn3qGysV5r2IGgQ0gUMMQaKCsGd0sSJ0ekkAqxJNA
brpRoZvp5cZJCYOaKWy6LSBYXCZYjyHYekMwnBaGGTmJQ9mq2Q1MDFoL/aGM
sx3oi7VUg2Xth1JhbuamwVmjHTRLxNZ1K1Lu9hJkceEnjw7AKwvnJRJcnpdA
KTJJ8HhRgkpFvsaQAP/qL2uedeHm7FhWBsa5yVxtm4ZfO8ZqVuTrDIEacOwR
AqmseW25QCpWk0CPFRliuXMMYRvdaAjUA8eGEEg1lCXQKoIqY7UrxkeP4LGe
9z1+XKaQy2ck3WzI1A/HVMikcuVRQiYzLDdXXSuyK9HTqJzdatZUVD9EFwnl
vsVW7kcHsNTUa6jWZeVCqnhLQj5YbMl86dsDwP9y2TwyeasU8jEn5Ayygj9+
lEcwooav1z86wMp3WbgHi7Y6kMMB+1r38ctJ3CgUXrm3uSzogOXSVBGPDOWj
ZZInIKRP1V7aGfSS5FVZ0BkBAwdvJS8Xmkei0LEHQUTBuMrXsR3dkZc3k28m
yFsHeamYOvHjRwfa156VlspL/CrXd42SF+RjyFGYuSNmAZaFeGVjd5XJ2wPy
OlEn/u0jAwfPG6mZovolGTIMuaEL70NHomJt15/DnxOCzIUswIon96LMiZQZ
Xih2C8VOJn78SCb2wwMTf/RwP3zPLRLQ2RxJrtIAW/IRQ3I85wYw6qaXjex0
AVm/vyOCVCKYfH57E9m7xICBE3IxaZii8AsC7fneU6fkgs3zAUN9agylWYQy
8aOH+tt7zkwlFL7DWcY5N9bg1Z6Fpx8PaF7AUvDklpnu70Luel7uiR8+1A92
cLFBDomuLFaLDhY7LkSHv8HjiOmMZbmMstiHDdFjFr2Bojcs0Sf+cD/aQnSR
u6pKPc8OmPjcTiX/aKQL/v5vV/ksderDgX024EfLIMxiTxk1yyBMPrsNjeHC
chQqISIULt/G8dGJKPj3GUX2bf8+y7H/cRJ97HQ5euvZV6I/UhB94p39/e3d
a1JL9HOoqWVP1o3MUCLQyPt0+CqbylDQlPaFJzrjTCcObG89QgIXiumzXCYF
AreqBJ54Z59TG1y4hJm5W3mk7dSNMJADrUypfJKDrSNSKuAYZM/yzkzuhw25
UyY6lZ5Fy53ZcSZ5pk+Z3AfPWew8H83bV8nquVociWKX1gpVzRelkcj/+DKE
1JRBQPGggaLOKBKN4tBk9ttA0d61Ji1FQW2hUjE3JkLqY1fxC2Z5Is5M2N7a
OxWJy3jvRmJlpCTx1Zr3cjdOHM8Hie81JG6wxPHxSayyczqnujVOVKrOd/Te
bJOLQeK7/9YlviBoBSuqG+2gUqa93kJoBVvjSSDxHYbETZa4dnwSqy7FBQEF
nyOJXV0z8W95/0xzQDKxxUALq8ZyEPujf+tioyvH7EsJG/skNmRTKKnonLHZ
nQGSftiQtMWSRhhYLEEtOYlKlaaLFUCsEJuVxN7Q3CJW172U68d4BmVDKwmy
fTZg+NDfDQaVYxEGWiHtm8aHSt+NkOFHlWHFEg020QsAy40GFqzNzDhuLCpr
vyioCZN8VQGLl1/Oy1b1+UgY6qUg9/XVcveUyT3xwyyz+sZNrfaTY832zWti
a+UPyaw6TEpm7YNyC6HV2kepO5eD3NcYcmNtfnq53O2nNzfb912QTH5itD7x
3Mb6xCdGU0tuytdVauW8IPVCCtPjUMUx1XEdodT7HvjNhrsJBN9lCN4Hx2Et
ePu5ra32p9fX2w9clEy8NFafeGFTfeL5TXnBlce2+kjOWglTHQT35ZXHxd91
42p+zh9B+ct5A6jvmwHF9jIUWMqKeid/98O97Re2tdr7L04nXtvanHhlS33i
5c31ApJPrk3NzPySoAzsOzUUObUCfkC3j5VASQOUvz5/6cDPbjirOXnnpfWt
AGWrAQXLvP2ugNh+KYPxuQ3Nyac2NCbe2NaceD2DUwXpUyWQLg2Ccea1UULS
y6f88vuosCGH9nIpaVx2+NmOM3ref+DK+R5ftA0AXlUGsMdV9LCtntjQbD9y
aZpFnTe3NzNLejMDaoF9eWpgVdKmwfIUIAFWnRP+l1WgLtr+oUvTyQfX9knA
OwDvRgPvgBuoRbzYoI9mXz5wZSPD+5XtzamC/vQ6Ao0mP+rkVNnelccFVblD
B7XhocLr8IPrBlX77gK8V5ThTRBvgnif2NgEzBNf3dFMjgfyZxRkquUrG9vQ
FeRRBVlsC9A8ODI8zQOVYCdvXBMD2D2AdR1hvUFgHXT1AFRjatqsx/obA410
L2Q0NBFro4Rcug8O2ayyDr8vxJnzax5uhH9FSR72tQD7MgH7p9KEQZu3Z5BH
08mnNzayNON4YX92vQ1btDQ7rStkS2Odh0uzUQgrqaEjFu7Yxn094L5IFH4A
9099lIfmvjXzWpuagD27xld3NY8f/BMBvDJBqoyqJNjVhSg+pXLIguf9id03
OKewkCc28hsB+fmi4kvI4dVw9RgEzw2/qZF2i795PPhVAk340b/jpHOHLJFu
Wkwck+4rU08T8M0A+BwbcCq0PGttAJv1ETK03bgyG+3nr2C0KrZcHhSWDdWd
I0PnrM733OXSVgW04YAe2XfFbAl0HICeaeh0DY9YZpN63dc90FcMoE9WA1V5
uQKa+FJhbhagwtgMGI/u2zDXY/wwYDwDMTbyjdl+Oahs5rYzcOinwVtvbwJC
/5o60rrvbajcyE0OAGcm8cnNaGTUyRTLhPRRgHR60E+E8fmsiR4bTWsTX9vV
HPoAoRzYYENZH5wK+6K1stE6e9oeG97tAO8Up5Xwf3vbquTo/P5pmbl6bPEH
g+3pgE05x/WGn9HYOvrSXhvbnYBtiZtJC7jaFyyaNrn+pNrEjhW19tLphHEY
MNY+GIzPlGC8IjQSB9LRSL5lJLrYYZ/cfrqLkf02xrsB4wLRfutPiQFnhiVD
mYmR4QSU8IpSbtMp4n1V4h0TeDdW4lUdgM54lYcZgGMNoGbACCxgje6B4yxn
kF5jfcvWy0BjI0eoyR5zdfbfBWIjAdb9gMsUYiO/14gHyxDfB8chihyANmtj
QJu5rCLcYLdTgfvaFkqQquFyaBQTHpmCSwVc6WUVyKEykA/AsaUdESpyXxlI
16Zd63AXEFWafmVoNlZUCbELnztcBvZBOCaiRUl/M60vgm2EFsUw87cBdqPh
oC6ZGtjplWAB58qEvdPw3xVOVEQxIZshXKzQqWhroZtRhu5+h86p7EqnsjMN
dHgc/FtEpwIooaPY2tHZzhLo2ledFgOm4Gx9253svM7srtDtqET3enc6qnqj
Y4YiXiRxql1FedGKlaLPLsN7h2jNDC+25jwDbwuOA38neFWmrvHKSQgcfy28
c1xnGwBDAgGQo9sQaiIVF5p3Qddod3ygaHFsALN1hTGWC3e97qq8fa6B7VZD
bRcbwHoYWA3wZLkCtOGb/pXB+dI2iJwZoMw9dQFJBXlaU6SC5AUKXEenOs8A
9yHD4yypBBcDONlQX5paQyn/IZZu5UaQPSpO+cpQzTdQ3SiazEfDpQaqXjj2
f+CotoQG4aDohnB9j1l9vGGgWmCgulYrIrbVKYTq8pNiRtUHxz5GlWX7b+5Q
ShjiQgWwiwP/kf/ZHKTndtHAOiamiwxguwwlXN4ZWA1wieY6XlTUXGqU7jyF
qmyVTw5Vcmj/aBOQtR9cPwOQbTdcx+kGsH449haBbf/NgNEqU+UzzhXAShPr
xRoOlNkAzhYjoK36YOC85OFsUnBUR3BrUDG2HQmnCxd4gg1skx2+VhvYBuDY
84FjuzoA4Jz5HIWtY+FixMa2wdDBsz54YM8FYKoVCJhyGQRsXXir0hcusYGt
M7zGuQawQTi2csCaRWBbFbAaIMuwAC7/Y42Ubwsegv3e2Qqf0lerGrM04IMa
r8d3WT6ILa1F5/9d4FOdOWufirMK+Cpd/kkB37F9mxZ7fBcZ3qQ2seO02gUG
yCE4Nl11FGJaH8a0r1BMK8Eoy2kXl2NTDSSx1dzsHbXIxcqIT9YAYSwZAJ5n
eZWlNcR4URnGuksgv0alUpdK9nIq2cW0ARpFBNlxBjLmwQoWtBY+tYGq8SoF
PsUGc3bejWTamACSiw0kwyQ/tFa3SF6pRCL2OGI1XKPU0M8Sk7m9ciOn2sBW
G2pYB2CXHCcwNLpugEW607IznGNzIog0duqdKP5necplNsSVhidpAMRLDYjT
4VjrAuI2X9zsHuKu0FRsUKsLECuDwXIbYi2D2DzVSJBbgPMyA+cMPGJb8rka
Yd+BXhXqnf5F9RUN3Kzqjn/4zJrZKd0VvA03ogbf0ZOe7sADaAk+AfBLjHDY
C+BHpwI+BthukKZXIWZTNRB/JCBWEGjnNZU9nyEQl+afK2ycUCRrLjSUuQ9w
rjVwLmBlzj7jC2UF72NAuv3MmoWItsZTGfUq1YbW7AyFbaWNrQnYZhu+aACw
rTOwzcFjMvH10IZlaL8k0L7qbZXQPrOpPn7XOTWrH7snMMDnNFor4VbRZJWB
dtvKGBZaNIfs+DgIgC8vBRxLwE5po36nyFRIYsTbXLoKiH2c9O2bITa7THsC
Ls7DVyrIHau7Z2jIfopVH0DuNaLoMOBd3yXe2HeEp4D1nvNqFVBVZk5QRw1l
sJzxahvqAEBNDV2eAVCvmCLUr+ah+l6IAfX+81ILKm1HqpL0FQqq5XrhLU7S
z7Shgg43c95oJqDcMEUFltEG/e52yiK26ETv+TGHdN95qdmRvNYwzNMF1FKf
e1aF2iLAOGvGGjbjbAFw8vzF0ybvvQBzhWiuH1DbEVwSh5gdFFl7XEsKfD6F
ICf87nNXZvguTCvgKZfUFbyz8Zib53lJFlG2QTUWMZIjcqo6FzBeadQMHcbU
wugGSQHgDp0G+lThpc2YIx1+9sp0fD8DVG11XTjHDug0paqWz1VQzwktKaHG
gLWmmxP1dR5A3WhAnePiyddwdN/jJE9bBlVapof6sUtMqNcHS83tIUNQE574
ThmEnw8nfdC5bg4Rot2rGxZ+e6VdACA3lYGk4W1q06jGU1Vc5ttyvUxRDn7V
myRA3IgQI6uLKTaEZvdCGN2IfipXW/AiOQvoeUKDCejRVXOdy1kI6MYMdLO9
KyXXAm1ZC5OMetmzvpmr8QiA7z3r7NEEeENoWD63TALUrtWKIue7kvDkvrV9
fz22on9y56pWhM21uQwQz5Da1eTwwI3VU45nDPEcfXqDjBQWHJWkV8CxzO9C
B+eXVy6rv7/nvLkIB01siwFnFvX5vfCxHBKDOfTboJbzRq5LScEAgfjojp4P
N5LHDr8UutQpkqjtjSfXDu9a3Q/iOse31RB1JjPPovpRZ/yPuBfFeG8w6N/H
kP+jBzZg8mX1DsUTE9gfnKK47+j6HKAEAAEMDwoD1tUGJuwHpWWYfLfXHDoJ
Xd93X3S4Vn/knNTs9t5kOIHOwFQe7YClHpgE5/KNbQa66Vq5YhpiLdgIOzbq
HmSYDr+wKQVMlxhwbg4yc4hyu5XIxRqViaODUwfH7OFISNPhn+1liER7DXEX
x8+AQFw5n1aC771nrqyL1UHcNOJpJpwYHxe+WOJztc0o9hjxP+zr7DCADueb
DkYm+zXCnKW56Fv3XQBACKEpsiB+iGxHJsQnKYgdvbYFMXbH9u6zhhliPxx3
GhCHGGIcICYBooNXA3xZhub9+Gub6z6/eC/LE999fmPdI1StMm4Y1lKBsOAT
H85wZa/oIgNX4nAd2XP2DMaFtZVdBq5BjSs/D8DlvuTaY+lTsnMZwhrAy97I
AB59ZgP6+SqAKhOWAHMxuW5ApSbEKUhZFoGw6gHq0T3nouN0NbTdBtQBhppw
E9YQXoPVMz94lOXCkcAIjYgYSWjVbxONyJ7mxALGnONMJEZ4XRCiHLdow4CJ
5/YYMPtzSdRXfaBOfOgLjRsh/gTneiTYLX99CwMXuA8/n2WNL46lJu5bwjkG
t0ThNqoQCZpnB9xNA3cKx2vKcAtNblia7BsYgG8DbeeJOw4zREnf4O++dFUW
LTfWVwvgqntHwFWkJODOBhrSBvI7CfBjwAUREf51vkFFy6ACHdi1kordYupB
TtMzW/H4vZLTbzfJJ/bNLikAtwyJkGxMRcGHDcUekRTU84tHfAKbGOhjOJ5n
oO9xjk2ih9d1BnacJdPQjtpZeRICkASeck/QZ95ZTPIEjL8yFrbNs7aVIgJU
Cq4ISDzw3KKS0ewwueN0hJyJJoCPnhiAo9+uAebr81h30zyngNWy7aiZR+3M
nFQ+g45+PGOBkGO8yl6o9VbCh7scY9ZOOJ0fx8Xh41F4GqvYEt8vu/Zrq/Mf
DevIrRiHx3ONQNdH5Jw32ylCguR83ZEDr5bmpxZ0oVXNyhYR4rLG8YkK0TPq
hFRdMecL1JYsnI65jdsoFhSeueL/rgXovIoUH91Cz2oZyX3Pr7S0Fn5b8bOU
RqdjwCByea3NZdOwK8gIlE99A7OE14M9ZecghDbUxF6k01GK9mXx6dLaZn6L
Gz9m6m1QUwtsvRWFn5Go8JSYEfG2XKzLX7WeElOxshH7PZ7iOhzPMShG/5Uw
xT58rT8pRoqzF5RWdzcbTLIv5XwlF7/e2K7V9bWQiQHRcaafPBUQfTpE8Izo
1a+OqX0UjTpCPU+23+YuNr6yWBCP9Ion045HuSfydvv0mtyzdfE/mc17nhtw
PNvgGaNknXneU8Zz3ciREu0nSLeJb6fVUdDhV+nlV1uSyxCMs5qFqsZ1mmc/
ednzLJ6Gxwkk8ew64LhdqGeQN4KY6tNjiOXSPpNi+ayyXKTJLO8mhyFYhhcS
nWqFznsN52RJVUXKHQOvWYsIZjPHXK85dsdf3RKCcmB3TzW7tPmYKg5ILY5a
ntFRYsq74qiE7YkpsK2SRIvtJhzPLEuCe5jtXRVsJ2VqXculB25VlOvCqhrR
VvIjfqFfeEE5EuKfbgp2K9wUOYbdrCVMhP0Ga7J+jBGrr2PLjFNLTIjfI3TX
8ZKWibpqmdKso1XWHtjx6uP22Gn6GN8iOJzW4iZw9awkDOpvoxSMultN6G1B
qg6DZ694trfWgXEg3Npue2sXDNPmqmpKjmI4Ho8+4KcZWVujWmlJDxzXGDxj
355WhQHRR/acOwP/224wjn/BuM9uNb0gdj7dTzRwWXIouX1JNoN36JubCTZC
w40KuUowNgA1BLofazrhVaElfAsVxkpol3Pj+X7+kTrevzu9HWF6e+U+IiOR
CKWRc/wT4j0Xciv2olBt0AvH1UYbYGd7yGiDbWVtgFrvRsPZBdWc/le1Qr4l
Mu+DrVCDRojcXC1ohtdCM4DrsVpB7AtW2gri4cCc0OlWaBPBqP+1Y9wKuOGQ
3PoCjYGSnwlxvh34t/IZlTcq/gulvOkG/1cb/CfUCt4GuPCTGw/Vzqi32AY8
kE+eP3u9hC/oFkP1K8UpDC9tchHhDdce5moRt8iwLhtD7v5MD9VVmSW1wwq6
WiR+nMceCVrcMVPsg+MZZcXfmQazWzsw+1XFbCyZjQKtLtEpcvqq4rQeCzpB
xdHlZx7mi5mHsehcV03nonI6rflhFmH9cFxVNiAw2yBsy1QIq4UVZ2LwEHNC
g7CtMsdGJXT659wyLCZ5fhO759WvXp2KZVisNJfanHmSnILpkCo5q4VNEdlV
+Aw6EiWcgUBckh8pmuMoOrRzVd1TV02b0CmvZ2L0mIcv853D4pAfklejeOYn
0sHrmY2OwIy8g1/d1jBXA1+kmZN9cPhfPGTPZA4qDq4U7jkvrNL0WjcIx5WG
1s3TzLV3nz0cbS6LPTFNdvnqLjE7aUeTVm8CZQNVNeGCzrGhwgKEjLTsIp62
zPe9+OrmBrGm4sj51ayJB4exWWsbVdv5WuEa2VphhOsFmq3Du9b0R1eV5acJ
B+SUlIoXKfjegauV9RYIKngyr1ibIELAViAx/M3F0/UGTedU03SaoY8LFU3W
1EZF0xAcT8/TtALnnxRoGrO7Vb5Q8JVdcp6DoGuH6Eyh53fdqgGZ3huOjGeg
H3pxDDeIOfjqVQ0ouVoadWY1VSuNrxBV1jZIltcvUrXCUbXIoGpTBVU1YCou
06fMcfNot5zaDKV4KGS1FEu8WiR7HbgizV6Zv99YN/f9OSNQZJULVxtf0RR1
DIzDcDzNoGixQdFGw+jqOgF22VdxuPXNHT4Y9ucLfWXsHHx+I7CTjj9zRerZ
UTnAimp2zjK+ItnBENg0OJkOx+Vy2II4OSFwcuzaixYiJ1fmOPnargInpDNv
Kp1x1SI67w0NSnK9ud0ivD9CXnDk6vPr04kn16fjT5Xwsryal3MZ/CKlK6pA
Z3meGZIXDGfEy4jBywaDlzTMjS/MsYJBPWAinfjSjkIsoxp8T4mrDtQ8sR7p
udJg5ZRqVmibZhX2tS117G/OhOMyg58lmp/Jnatb0RWV/HTSmy9JvclMyor3
BkeHoGPz2XUZT+tStx+OeBJvaaH8YsOXaGqsIQRHzWgHak40qFlvUJNUqg54
YMp6VAYUJu10SRAq0WfWpeOfVQQt0QTla7CjDrEK3e75On737/K+MhE0C46n
GgQtNQi63CAopsKQ8sNJnhbUHueIfee4yrYOfmkb5tdHoUPy6bXp+OOXedsy
8uNSfqzV05ofO04tqDl+RmGDl4yfk+VcGbftW3Sywc9aMS3+vosSX0SrUqA8
Ja6ILKcW+MTR0dWq0qKjz8O2wpnUGw2u3MOKqgub1j55mjC78F5CmArspxiE
+eVpfnCU+2t5hdI0oTbFboaYZ0burSJpgXmnuMV0CS2zu6CFnlWg3LqkRVa9
wSYnd6yIkQykBRk5yWDkVFKXjAlm5LIcI7xMJO5ShVB50jB7rqAwB2Fy1iuB
mfFPXJaaO+nPCMyUVv42M/yFSk3KYxapCfIzq4yZZQYzZ7tz2THhzzWMGSu1
zvrjJ7C8IXqs2SvxDqnEV8PU0axPAaStfuyydKPhYoe64OxqQwu1kalZ0KXs
oV4tNdhbbrB3Jo6wAHktMSFB1/Y7WRwx5uc6ecbY8rY2D8IM6le3hJm2L25K
jz6bdTI2GVy5BxSXVt+sJdFEk6sJpPK5G/AxTCJTg66E6TrRiHSnGXTh7h9x
oEvPjYutHawqVK0GvGVviFlikaBOD9b6uWIZde9l4Q/nCVrP2G5V05db4VdC
X/5RH2HxiXDp1fSdbtCHG8OkQJ+z0GRi+2m19omBwpy2YdxLSNO8jgFL9Y4s
jaWQO5WyVLdZ8nivN74yX7LUOUNImZ0lBjsrDHbwXD2wE0t2pqxcMOtye2Hy
ldOvjD/hzNA69WxUSLBgCUMpf7HmL18sEcs2OGGQ/Om+rmCtzv7fYm2lwRqa
KRCWuBkpQFqUslKJ4Zgop1gx2yCGxBg4ickIc76+JrnByqTipiWBlnHiZy6r
dEErlRUeRyORODRYqUYMelYZ9GDIbOboSZCerwZ6kmpV0saXBKIwSz/4tZ35
GTthPj4OYY3V3V6DdR/w8tzcelzUKGfeZGoWG7FvdaDm/T3nz0VqMPMEP56k
zq0b1OzIe6N8xKNX6spr1V7JL8F48ZWxBm3/qixIPtnPmZrOBjQj5ZXZrhhZ
YzCCnTuYdJFAjKuhe86+JhiJEqs3R69gS3WmI3NDbEe2n37X25KrX5dORvQa
cHs5M+JhfuW921GcdULMLDKYOdNgBksm/cyM05V4Yhs56BwznW3IOeP4YOai
Dn1hcyNMMMQpwiJRGnMzw8WQpMWNNXfwNoMMzVPHGNbD3tji6SyDJyxJwnSS
pMY81YAmr0ZqbE0XlGKDp5ZTJGsGeVPOIEeT8j+XVJMlJgAyWbcbNjVPkFUa
sHpYlRYaFdqzDYoWaYqSPEVqAKSjpVFUP/SFrQ3em/J1mm5ew0UGsVcmHCi6
uJqbFoO9g8DKEC4ZyRFoqU8vc7PAiFbnOG6gOsvcLGBugpmhlZFf7irxMTQo
QQ2qW3OjgZkLbVJ8R78vT4oKRpqUjnGqr5KUczUp+B+Ozg5qhakkJc2rC/Yz
grrUy9mA4dbzNBv56hnNclP+93ZDIzQv1p6tipd+5mW+wct5Bi9zmJegLAkZ
0hJlSOWkxByt3NTj2Htj9MixdzxE0mtiOv3Z1SxNL2MJ9Yj8MD3014pXipsB
9sMWN+cb3MyC45ClM+nE1uU1yQ+yU5PVWGk+KTtg9L9EhvA0tP6gOCHbDRZW
V9BmleuSUaSUD0mujFsDrEtzjRLthQZfM5ivgi5Jvip1qcaJYIO0xweq13gC
duLnmMILjG1VFyzNNWDfbpzTLCkCLZYGmaU5RnS/yGBpWLMUtKoGJGXuyKsV
hfWSZBl7WmFKbkYnlNEysg4+dUXDT32OrGnoywNbpXW0BQYzdwQnxNeaK9lK
/QQan4sj8VbVo5o1v/Ph7rOHmbVBZi3RuiVZezPPmjbD2Pltp1avbuWVEVFg
sI7n2DI9g8uDj2GNqLmVkUwZ/CwyfJGVAyjaknz+oJbdUad1mBmbbTBGWyrC
bC1mrF8zFvQMjTG7wLqlnDqaaWPqPHqRrjgsfMBhgFcwhcSECRiLX3xtc8gj
xTikVUrzM4mlUt3eibEOY5OjONxPzt6i69JAF8yDwP964TiszTKZMl21Mu2K
/ey2Onr/Ou2dEGZpL63m6ZRynlTCQDydYyiiFRSns1rNMjLvywyeWponKLCt
wIII9uZqeS2b2JI5fqTOqHRTPS0J/Mk5SAe/jB9+hdYb0FIDP7Uap/I6/sRI
rlWHXF5GHWYR8xRhatW/RdgMJmymkUWMGoQ1mLCcHWbvbFuO7otfSNaJgixc
+10X9TTBj6CmgfNsXqDded3aF6ToxS9mprhY85OvG60wbMrKH+YWmKrMH6qZ
WmswlWqmUq1LyE6Uen5yU0k8TTVlhWGyTZTQchWa/OfnLwNJYH8Lqjk6o5oj
JkJyVNrdncnMzDCYWWcwE5cxY+vQxJZltfbaE2M9vcQNkLjiNbouNwLg1erg
l3fytC1PFm02xnOXyfDmVZPlJgHqXpyVPMxRCqU+binULPbpFm04fwKXOeH/
09lD1S01aniKzB0XGkV25KS22E9SdvMjs94OzvbztvfiF7c2aOi7lCIL8xQp
ssLebNasYSPsXcEUTS/z37FFVgJkTWxexr4pduPgb/g0qwVMQRmuMIVULMpw
CzJquIdxjCsyoJwCoW9G4Moqp1CpVoU5K6nSXHWs7M5hdbK42uC5mjOkzU7k
BE1va4oftjWqMDUCRaWj3y/n1qzQwyecoxpzK6KHqlmyHhh2h3GOWHI9784J
whzWqKFSjcIeMlA1wFSZRsd65Lmq0VSK7U1P1zaY11U+FznM337GPawS7Q5q
uwPV7FwamODpkJ3ZsWKcqoHPZXYGDXbWu3jv2ekz2IHyd/DdkXBOnifkChyV
2LqA+BIJ6Ov4BkS9ntzUW0HZBkdZplyPf2K03lvNWNhI+k4HXOUCkqfSODeP
Lcxi53LHhGenVzvsJJdDekoid0wmxjQtyEoLWSmf0J5fBPD0BjdV+7kN9fHn
rkybNiO+hLDe4OGODtx0UeCdxzo0UJYNNJmlVhcsbWGWYmBpYuwUnwx4nurO
2tzsf7mesdOqCZjb/mT2ylSprsnKl+6sGYV3GD5Hk9Vx7HYBq5RFFiaVPUxW
YwruCJhCqrJLglq9Ia0tcVtPab66WWUCXMHM7kzR4mq+xgy+yPBUJJut+OoY
5BawcvWXdVfQLeFCuTlZzjkT/0s0c6HQ4phr5R2U17OJTU7XqNyiqZupqdtW
Sh1Mmjj47JVI3f7nrl9VVtOj50spL02cqcSAOHNrB7qf2bSQdc3i7lIunOe4
qzF3DasznHNkdaYuRx8qXkodZpektibe3NFyg+hwetD2c4HHn78w1pz87Ia+
I5/eNO/YvuvXqXrotnLylBVq8vzmUTJSmOQtYvJ6jerxpdyfiRJJXpnBmtTF
kroIyYuSYLyuoGwz2HIM9lkMHnppc+/hZ7cOHTlw9ZxjT2+d9f4nxua3Pz02
G/Rlp+HBiDTl5xVpejdIKwQsYivtKSvuzShoGvUKG2Lo08glbCcXV5E1TIt7
WN3yGxAc+sLVvYdf3DZ85Lntc98/sH3h+09tX9B+duvMnz8/1sSVCJ9Zm/qn
cqg5ckgVpgtzBEGl+cNi1iGLFqwSz1K0uFW+NU2L8Fv1Mr+V2Hz4WXOsPNv9
4EU//H3oizt6D7+8ffjICzvnvv/szoVHn905//ALVw9zYTRLTN+DMPAZN8ve
P7dDeW0rg9Dq07FjvJjVp1U2BjHb2Zpc1qtZ6tbMqphydavBQ29ktLy6c/jI
S7vnvv/87oVHn981//BL24eNRatYYfALEVZ3oEi5Kk2RVQ8ejUTeMMKqZFGE
g1lzOPLV5AK5eqV9xQZFaZUyDaPSADsvZ+y8sHsh/D78hZ3DpXmYZOo5WoOw
x4BtZQtuaJBWZXbu7I2wIjWNavAFzBJVDpCm3RlNO1f3R7lxrCrv4wiKJ89c
MG3yjvOSkGdF2FdGhjJGjr6wez7oD+gRMEbVrD617iefheXYevFTo2kFWeqc
JqtjJXgJk9UoG09GslIia8eKjKxzHVnxlOxuEytVq714aJrHfeg1cD85njLe
fOW4SJad4tcPv3hV6lcrHD9ZlR3lE9n+LLJwYsJcDv6Zn6aalCRtyq6qjpTV
3zthqAZeGtzQ+89lNL2Y0ZTRVs+zlN9escBSWJ4gnmbDntnKAyRLpWHuRFak
etlklrmsSDRpjonZnmlTPszZVuc8d+PQ2PL64atW9h/detbsvz5lXt+RF3fO
BXpCyh5qMbXcHJccE9cYiEOIn600pGMQW8oaYrFwjmbBGnVypBzbc+FCIqUD
H7XAR3vL6mHg4/2rz557ZOuaGZNXnY6W5hcSdEsKTNQtJSXSMX7WcdCDSpIY
ASzQU+dCJQwNZBa0LeNk9wULJ7etbMnhgchFrqa3mENXndZsbz1z5tHt58yT
NLhMMZZ+Jwr9kzpNkje8ceR3JCV+IMrDvN0KfpQXIX7cg/rMJ/Qpb3wyq4/F
z9maH0t9XIivQ4g/dPXpjrOtGWfEF/XWDm0+vdneTjRtO2f+kW1nzZncsrK/
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"7cbd8347-2b19-4f9c-9102-b0da971508bd"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.593498914710322*^9, {3.593499120008687*^9, 
   3.59349912230986*^9}},ExpressionUUID->"604affb6-b37d-4062-b7f7-\
b5984808caa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Comentarios acerca de los m\[EAcute]todos del simplex \
y de puntos interiores:",
 FontSize->20,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0.67, 0]]], "Subtitle",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.5935014160512323`*^9, 3.593501454579236*^9}, {
   3.593701741386943*^9, 3.593701741655039*^9}, 3.688727752448434*^9},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"37234ed2-350e-49f5-ac74-273ea8c53f25"],

Cell[TextData[StyleBox["La  siguiente instrucci\[OAcute]n resuelve un \
problema de P. L. que tiene m\[UAcute]tiples \[OAcute]ptimos (cualquier punto \
del segmento que une (1, 0) y (0, 1) es soluci\[OAcute]n \[OAcute]ptima). El \
algoritmo de puntos interiores nos da como soluci\[OAcute]n \[OAcute]ptima el \
punto medio de dicho segmento, mientras que el simplex nos da un \
v\[EAcute]rtice del conjunto de restricciones: ",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5934989598177557`*^9, 3.593499162339692*^9}, {
  3.5934994306487093`*^9, 3.593499471272382*^9}, {3.688727946833474*^9, 
  3.6887279515221443`*^9}},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"579b43f2-7b10-47e8-9251-2504126d12fb"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{" ", 
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1."}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<InteriorPoint\>\""}]}], "]"}]}],
  FontSize->18]], "Input",
 CellChangeTimes->{{3.5934991660480223`*^9, 3.593499205973238*^9}, {
   3.5934994803937407`*^9, 3.593499539688507*^9}, {3.59349958385238*^9, 
   3.59349958499308*^9}, 3.593499681573803*^9, {3.59349971738284*^9, 
   3.593499720099433*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7a679245-ef7f-41af-b053-20b31a8b257c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.49999999929400346`", ",", "0.49999999929400346`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.907658132795986*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"cff8a512-3862-436a-96d7-788b37ed3c25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{" ", 
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1."}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Simplex\>\""}]}], "]"}]}],
  FontSize->18]], "Input",
 CellChangeTimes->{{3.59349970863673*^9, 3.593499712652301*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"a61cf97c-cb0f-4701-88a8-32fec91e55d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.9076581347958374`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"263d624a-1c41-4db0-96fc-c364789a779e"]
}, Open  ]],

Cell[TextData[StyleBox["El m\[EAcute]todo de puntos interiores es \
especialmente \[UAcute]til para resolver grandes problemas de P.L.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.593500202631179*^9, 3.593500282887809*^9}, 
   3.688727816280561*^9},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"4f715e55-df33-40ff-803a-1daeed5549f5"],

Cell[TextData[{
 StyleBox["Accedemos a los problemas de P.L. del repositorio Netlib\n\t",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"https", ":"}], "//", 
        RowBox[{"en", "-", "m", "-", "wikipedia", "-", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"org", ".", "translate", ".", "goog"}], "/", "wiki"}], 
           "/", 
           RowBox[{"Netlib", "?", "_x"}]}], "_tr", " ", "_sl"}]}]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"en", "&"}], "_x", " ", "_tr", " ", "_tl"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"es", "&"}], "_x", " ", "_tr", " ", "_hl"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"es", "&"}], "_x", " ", "_tr", " ", "_pto"}], "=", 
          "nui"}]}]}]}], ",", "sc", " "}]}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL[
      "https://en-m-wikipedia-org.translate.goog/wiki/Netlib?_x_tr_sl=en&_x_\
tr_tl=es&_x_tr_hl=es&_x_tr_pto=nui,sc"], None},
    ButtonNote->
     "https://en-m-wikipedia-org.translate.goog/wiki/Netlib?_x_tr_sl=en&_x_tr_\
tl=es&_x_tr_hl=es&_x_tr_pto=nui,sc"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"ecef2dd1-5b90-4978-9e2f-09525bbb38e9"],
 StyleBox["\n \t",
  FontSize->18],
 StyleBox[ButtonBox[" http://www.netlib.org/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.netlib.org/"], None},
  ButtonNote->"http://www.netlib.org/"],
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.593502197684495*^9, 3.593502197903482*^9}, {
   3.59350242446583*^9, 3.59350247389804*^9}, {3.593502688381675*^9, 
   3.5935027707726927`*^9}, {3.593502801186844*^9, 3.593502855087569*^9}, 
   3.846669611033285*^9, {3.846669641256507*^9, 3.8466696412570457`*^9}, {
   3.8466697029184504`*^9, 3.84666970291966*^9}},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"e0454897-2df6-4814-bdc7-0c64502694c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", "\"\<LinearProgramming\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5935021173204393`*^9, 3.593502132614072*^9}},
 FontSize->18,
 CellLabel->"In[33]:=",ExpressionUUID->"4633f065-98c0-4a63-8595-7c59405fcbbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"25fv47\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"80bau3b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"adlittle\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"afiro\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"agg\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"agg2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"agg3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bandm\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"beaconfd\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bgdbg1\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bgetam\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bgindy\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bgprtr\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"blend\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bnl1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bnl2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"boeing1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"boeing2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"bore3d\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"box1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"brandy\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"capri\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ceria3d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"chemcom\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cplex1\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cplex2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cre-a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cre-b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cre-c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cre-d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"cycle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"czprob\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"d2q06c\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"d6cube\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"degen2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"degen3\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"dfl001\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"e226\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"etamacro\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ex72a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ex73a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"fffff800\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"finnis\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"fit1d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"fit1p\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"fit2d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"fit2p\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"forest6\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"forplan\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"galenet\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ganges\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"gfrd-pnc\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"gosh\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"gran\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"greenbea\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"greenbeb\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"grow15\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"grow22\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"grow7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"israel\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"itest2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"itest6\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"kb2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ken-07\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ken-11\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ken-13\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ken-18\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"klein1\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"klein2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"klein3\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"lotfi\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"maros\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"maros-r7\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"modszk1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"mondou2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"nesm\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"osa-07\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"osa-14\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"osa-30\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"osa-60\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pang\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pds-02\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pds-06\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pds-10\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pds-20\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"perold\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot4\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot4i\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot87\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot.ja\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilotnov\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"pilot.we\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"qual\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"reactor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"recipe\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"refinery\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sc105\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sc205\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sc50a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sc50b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scagr25\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scagr7\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scfxm1\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scfxm2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scfxm3\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scorpion\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scrs8\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scsd1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scsd6\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"scsd8\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sctap1\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sctap2\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sctap3\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"seba\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"share1b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"share2b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"shell\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship04l\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship04s\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship08l\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship08s\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship12l\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"ship12s\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"sierra\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"stair\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"standata\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"standgub\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"standmps\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"stocfor1\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"stocfor2\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"tuff\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"vol1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"vtp.base\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"wood1p\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"woodinfe\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LinearProgramming\"\>", ",", "\<\"woodw\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9076581460294294`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"35f09584-4669-42e5-a95d-9d1102734218"]
}, Open  ]],

Cell["Vamos a importar alguno de sus problemas :", "Text",
 CellChangeTimes->{{3.593502965750404*^9, 3.593503012595295*^9}, {
  3.593503477645235*^9, 3.593503496433613*^9}, {3.593791072486874*^9, 
  3.593791081122213*^9}},
 FontSize->18,
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"086fed83-1c6e-4bb2-9d01-0e83dc066630"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExampleData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LinearProgramming\>\"", ",", "\"\<capri\>\""}], "}"}], ",", 
    "\"\<Dimensions\>\""}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "271", " ", "restricciones", " ", "y", " ", "353", " ", "variables"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5937909428501577`*^9, 3.5937909453686247`*^9}, 
   3.593791109081703*^9, {3.9076588217397723`*^9, 3.9076588218695493`*^9}},
 FontSize->18,
 CellLabel->"In[48]:=",ExpressionUUID->"f389e8c0-0e01-4b70-9733-0daf27a9817b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"271", ",", "353"}], "}"}]], "Output",
 CellChangeTimes->{{3.907658823699662*^9, 3.907658829994752*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"b0efb917-0aaa-44c3-8c1f-99c84385d3f5"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9076588083873243`*^9, 
  3.907658826929672*^9}},ExpressionUUID->"62e2dd36-9405-4a66-9306-\
563e151e8ad1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"capri", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<LinearProgramming\>\"", ",", "\"\<capri\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5937041209977407`*^9, 3.593704159731089*^9}, {
   3.593790075891218*^9, 3.59379008718664*^9}, 3.593791109083255*^9, 
   3.7516398584786987`*^9, 3.751639902643714*^9, {3.783081631851356*^9, 
   3.78308163464695*^9}, {3.877358164199489*^9, 3.877358174006084*^9}},
 FontSize->18,
 CellLabel->"In[38]:=",ExpressionUUID->"a2fbbd1d-3eab-4100-a450-0c37bac0f180"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.907658158591064*^9, 3.9076581712624965`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"dde9a67a-051e-4a91-9c3e-21afc997fdf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"capri", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"capri", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"capri", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Simplex\>\""}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.593503563315387*^9, 3.5935035821206007`*^9}, {
   3.593503613840261*^9, 3.593503632853272*^9}, {3.593503706996063*^9, 
   3.59350370962302*^9}, {3.593702215646138*^9, 3.5937022160865707`*^9}, {
   3.593702974347631*^9, 3.593702996778378*^9}, {3.5937042111482897`*^9, 
   3.593704220857263*^9}, 3.593757680182168*^9, {3.593790089595063*^9, 
   3.593790123104124*^9}, 3.593790774662644*^9, {3.7830816373868523`*^9, 
   3.783081648400064*^9}, {3.783267287620326*^9, 3.783267297435047*^9}},
 FontSize->18,
 CellLabel->"In[39]:=",ExpressionUUID->"ca435e3b-d47f-4fbc-a2b5-8e229b80cebe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0625`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582312810965`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"7acbf9e8-8050-4a9a-af3d-adf3242e514d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"capri", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"capri", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"capri", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<InteriorPoint\>\""}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.593503563315387*^9, 3.5935035821206007`*^9}, {
   3.593503613840261*^9, 3.593503632853272*^9}, {3.593503706996063*^9, 
   3.59350370962302*^9}, {3.593702215646138*^9, 3.5937022160865707`*^9}, {
   3.593702974347631*^9, 3.593702996778378*^9}, {3.5937042111482897`*^9, 
   3.593704220857263*^9}, 3.593757680182168*^9, {3.593790089595063*^9, 
   3.5937901615110617`*^9}, 3.593790780902693*^9, {3.783081655609523*^9, 
   3.783081663590753*^9}},
 FontSize->18,
 CellLabel->"In[40]:=",ExpressionUUID->"35df1b18-d0c2-4ce4-bf6d-31522cb35796"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.03125`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582328747425`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"93b1d714-383d-4f66-975f-55e6f82516d7"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9075146856549063`*^9},ExpressionUUID->"6d61331a-b4c1-4181-8e89-\
3c4cb1e16c20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExampleData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LinearProgramming\>\"", ",", "\"\<degen2\>\""}], "}"}], 
    ",", "\"\<Dimensions\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"444", " ", "restricciones"}], ",", " ", 
    RowBox[{"523", " ", "variables"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.593790966009478*^9, 3.5937909693359632`*^9}, {
  3.907659036731415*^9, 3.9076590431994643`*^9}},
 FontSize->18,ExpressionUUID->"42290cac-8c53-4725-ae92-621fc8a24668"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"444", ",", "534"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582358680305`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"d4806731-0d70-4cd9-ae63-e2accd5586c5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"degen2", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<LinearProgramming\>\"", ",", "\"\<degen2\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5937041209977407`*^9, 3.593704159731089*^9}, {
  3.593790075891218*^9, 3.59379008718664*^9}, {3.593790186063138*^9, 
  3.593790190749672*^9}, {3.593790325866845*^9, 3.593790328016737*^9}, {
  3.593790642441309*^9, 3.5937906455355377`*^9}, {3.593790742855021*^9, 
  3.59379074538904*^9}, {3.783081710391965*^9, 3.783081716100609*^9}},
 FontSize->18,
 CellLabel->"In[42]:=",ExpressionUUID->"838da2e5-62e3-444b-b816-992b8bd24606"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"degen2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"degen2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"degen2", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Simplex\>\""}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.593503563315387*^9, 3.5935035821206007`*^9}, {
   3.593503613840261*^9, 3.593503632853272*^9}, {3.593503706996063*^9, 
   3.59350370962302*^9}, {3.593702215646138*^9, 3.5937022160865707`*^9}, {
   3.593702974347631*^9, 3.593702996778378*^9}, {3.5937042111482897`*^9, 
   3.593704220857263*^9}, 3.593757680182168*^9, {3.593790089595063*^9, 
   3.593790123104124*^9}, 3.593790628066231*^9, {3.783081721879611*^9, 
   3.7830817274842243`*^9}},
 FontSize->18,
 CellLabel->"In[43]:=",ExpressionUUID->"d4c27bdf-3785-4a57-81fa-8b0432deea75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.375`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582388209653`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"4bf21fc6-a6f1-46a8-8584-38d034e8a6e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"LinearProgramming", "[", 
    RowBox[{
     RowBox[{"degen2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"degen2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"degen2", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<InteriorPoint\>\""}]}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.593503563315387*^9, 3.5935035821206007`*^9}, {
   3.593503613840261*^9, 3.593503632853272*^9}, {3.593503706996063*^9, 
   3.59350370962302*^9}, {3.593702215646138*^9, 3.5937022160865707`*^9}, {
   3.593702974347631*^9, 3.593702996778378*^9}, {3.5937042111482897`*^9, 
   3.593704220857263*^9}, 3.593757680182168*^9, {3.593790089595063*^9, 
   3.593790123104124*^9}, {3.593790339915213*^9, 3.593790360640506*^9}, 
   3.593790634274024*^9, {3.783081732479167*^9, 3.78308173747614*^9}},
 FontSize->18,
 CellLabel->"In[44]:=",ExpressionUUID->"b412e4dc-c937-4e62-a2bd-d1a1ce11df66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0625`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582397298384`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"ede3f696-df27-4cf5-8e15-b15002ccc1ed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.593791127394918*^9, 
  3.593791127535007*^9}},ExpressionUUID->"d718ee4d-b1a9-4e46-abde-\
20436edf64d4"],

Cell[TextData[StyleBox["El algoritmo de puntos interiores funciona bien para \
problemas que no son ni imposibles ni ilimitados. En estos casos puede no \
converger.",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.5935016692289352`*^9, 3.5935017400890903`*^9}, {
  3.593501847360669*^9, 3.593501847893512*^9}},
 Background->RGBColor[
  1., 1., 0.85],ExpressionUUID->"5e7f6328-2e6a-4fb0-9ae8-ec29f31f2da9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1."}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Simplex\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.593501362120242*^9, 3.5935013659583693`*^9}},
 FontSize->18,
 CellLabel->"In[45]:=",ExpressionUUID->"06e925ef-6cfb-4247-b15c-79d569a261c0"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpsub", "\"This problem is unbounded.\"", 2, 45, 7, 
   17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.90765824455657*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[45]:=",ExpressionUUID->"a8653b1b-2228-4fb9-8359-8c5624c7ac1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{3.9076582445721893`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f1138070-a808-4fd4-b5ac-3d9469867eab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1."}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<InteriorPoint\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5935011338148203`*^9, 3.593501235047793*^9}, {
  3.593501307093034*^9, 3.593501331313528*^9}},
 FontSize->18,
 CellLabel->"In[46]:=",ExpressionUUID->"b022706d-8cf3-4bae-850f-af70a9928523"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpdinf", 
   "\"The dual of this problem is infeasible, which implies that this problem \
is either unbounded or infeasible. Setting the option Method -> \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Simplex\\\\\\\"\\\"}]\\) should give a more \
definite answer, though large problems may take longer computing time.\"", 2, 
   46, 8, 17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9076582457283783`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[46]:=",ExpressionUUID->"8ada729f-71a8-47b2-a661-41bcd5d95891"],

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\<\"InteriorPoint\"\>"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.9076582457439847`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"bdb86681-fe99-48f8-9123-00ede17b757a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Dualidad",
 FontSize->24,
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0, 1],
 CellChangeTimes->{{3.4685597832953*^9, 3.4685598064365177`*^9}, {
  3.5935038692611303`*^9, 3.593503873635168*^9}},
 FontSize->22,
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"405d735e-53ec-4a90-8dcf-20a8ba4e42c5"],

Cell[CellGroupData[{

Cell["Problemas", "Subsection",
 CellChangeTimes->{{3.4685947926163073`*^9, 3.468594795291469*^9}},
 FontSize->18,ExpressionUUID->"072bf513-5ea3-4500-b912-085d290cd8e6"],

Cell[TextData[{
 StyleBox["1.",
  FontWeight->"Bold"],
 " Resolver el siguiente problema de Programaci\[OAcute]n Lineal y su dual."
}], "Text",
 CellChangeTimes->{{3.4685664645155897`*^9, 3.468566491270513*^9}, {
   3.468594812596507*^9, 3.468594846963173*^9}, {3.468594906258399*^9, 
   3.468595165795587*^9}, 3.468595259904422*^9, {3.468595325284309*^9, 
   3.468595327408353*^9}, {3.4686885967729692`*^9, 3.46868862535812*^9}, 
   3.5932685360968523`*^9},
 FontSize->18,ExpressionUUID->"f6e667e4-f3e1-40fe-961f-19ca6b895d5b"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {GridBox[{
            {"Min", 
             RowBox[{"  ", 
              RowBox[{
               RowBox[{"6", "x1"}], "+", 
               RowBox[{"8", "x2"}]}]}]}
           }]},
         {
          RowBox[{"                      ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s", ".", "a"}], "   ", "3", "x1"}], "+", "x2"}], 
            "\[GreaterEqual]", "4"}]}]}
        }]},
      {
       RowBox[{"                             ", 
        RowBox[{
         RowBox[{
          RowBox[{"5", "x1"}], "+", 
          RowBox[{"2", "x2"}]}], "\[GreaterEqual]", " ", "7"}]}]}
     }]},
   {
    RowBox[{"                            ", 
     RowBox[{"x1", ",", 
      RowBox[{"x2", "\[GreaterEqual]", "0"}]}]}]}
  }]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468595351440996*^9, 3.468595354444128*^9}, {
  3.468688302010812*^9, 3.46868850789683*^9}, {3.46876676848702*^9, 
  3.468766817078368*^9}, {3.501227298052863*^9, 3.501227354728475*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"28283735-7338-4307-a4df-34d8659644e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", " ", "8"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"5", ",", " ", "2"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"7", ",", " ", "1"}], "}"}]}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"hacer", " ", "dual", " ", "a", " ", "mano"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.907659066017132*^9, 3.907659099595728*^9}, {
  3.907659245104396*^9, 
  3.9076592490103946`*^9}},ExpressionUUID->"629a8e93-d8fa-48c8-abda-\
02f09e0a1b93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["7", "5"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.907659105501478*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"a840c48a-46cb-4e60-945e-52487d37d1c6"]
}, Open  ]],

Cell[TextData[{
 StyleBox["2.",
  FontWeight->"Bold"],
 " Resolver el siguiente problema de Programaci\[OAcute]n Lineal y su dual."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.4685664645155897`*^9, 3.468566491270513*^9}, {
   3.468594812596507*^9, 3.468594846963173*^9}, {3.468594906258399*^9, 
   3.468595165795587*^9}, 3.468595259904422*^9, {3.468595325284309*^9, 
   3.468595327408353*^9}, {3.4686885967729692`*^9, 3.46868862535812*^9}, {
   3.501227421212716*^9, 3.501227422548469*^9}},
 FontSize->18,ExpressionUUID->"c74f8b04-dffa-4f4e-8227-df7e53295713"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {GridBox[{
            {"Max", 
             RowBox[{"  ", 
              RowBox[{
               RowBox[{"4", "x1"}], "+", 
               RowBox[{"7", "x2"}]}]}]}
           }]},
         {
          RowBox[{"                      ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s", ".", "a"}], "   ", "3", "x1"}], "+", 
             RowBox[{"5", "x2"}]}], "\[LessEqual]", "6"}]}]}
        }]},
      {
       RowBox[{"                             ", 
        RowBox[{
         RowBox[{"x1", "+", 
          RowBox[{"2", "x2"}]}], "\[LessEqual]", "8"}]}]}
     }]},
   {"                         "}
  }]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468595351440996*^9, 3.468595354444128*^9}, {
  3.468688302010812*^9, 3.46868850789683*^9}, {3.46876676848702*^9, 
  3.468766817078368*^9}, {3.501227298052863*^9, 3.501227354728475*^9}, {
  3.5012274299092484`*^9, 3.501227465772331*^9}, {3.5012275582726507`*^9, 
  3.501227572574654*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"9704c5e0-08ba-42db-a0dc-6f69df66db4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearProgramming", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", " ", "7"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "5"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", " ", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9076591775197477`*^9, 3.90765923351149*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d6e6c185-1983-46da-958a-ed67b940fda7"],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming", "lpsub", "\"This problem is unbounded.\"", 2, 51, 9, 
   17258923727056326129, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.907659233855177*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[51]:=",ExpressionUUID->"d6a26caa-3f7d-4f35-a61f-a80b67b304ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{3.9076592030335503`*^9, 3.907659233870801*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"1279dc78-628d-4f88-99fd-ccc3c4a15f7e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["3.",
  FontWeight->"Bold"],
 " Resolver el siguiente problema de Programaci\[OAcute]n Lineal y su dual."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.4685664645155897`*^9, 3.468566491270513*^9}, {
   3.468594812596507*^9, 3.468594846963173*^9}, {3.468594906258399*^9, 
   3.468595165795587*^9}, 3.468595259904422*^9, {3.468595325284309*^9, 
   3.468595327408353*^9}, {3.4686885967729692`*^9, 3.46868862535812*^9}, {
   3.501227421212716*^9, 3.501227422548469*^9}, {3.5012276248460197`*^9, 
   3.501227625628251*^9}},
 FontSize->18,ExpressionUUID->"d35a3580-e30b-4f20-b4d4-0fdd3ef53af6"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {GridBox[{
            {"Max", 
             RowBox[{"  ", 
              RowBox[{
               RowBox[{"8", "x1"}], "+", 
               RowBox[{"3", "x2"}], "-", 
               RowBox[{"2", "x3"}]}]}]}
           }]},
         {
          RowBox[{"                      ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s", ".", "a"}], "   ", "x1"}], "-", 
             RowBox[{"6", "x2"}], "+", "x3"}], "\[GreaterEqual]", "2"}]}]}
        }]},
      {
       RowBox[{"                             ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"5", "x1"}], "+", 
           RowBox[{"7", "x2"}], "-", 
           RowBox[{"2", "x3"}]}], "=", 
          RowBox[{"-", "4"}]}], "\[IndentingNewLine]", 
         "                                 ", 
         RowBox[{
          RowBox[{"x1", "\[LessEqual]", "0"}], ",", 
          RowBox[{"x2", "\[GreaterEqual]", "0"}]}]}]}]}
     }]},
   {"                         "}
  }]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468595351440996*^9, 3.468595354444128*^9}, {
  3.468688302010812*^9, 3.46868850789683*^9}, {3.46876676848702*^9, 
  3.468766817078368*^9}, {3.501227298052863*^9, 3.501227354728475*^9}, {
  3.5012274299092484`*^9, 3.501227465772331*^9}, {3.5012275582726507`*^9, 
  3.501227572574654*^9}, {3.5012276313011303`*^9, 3.501227718115799*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"2c870841-be0e-4d3d-98ad-c0bee9bd278e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"8", ",", " ", "3", ",", " ", 
      RowBox[{"-", "2"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "6"}], ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"5", ",", " ", "7", ",", " ", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", " ", "0"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Infinity"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "}"}]}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"hacer", " ", "dual", " ", "a", " ", "mano"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9076592591971974`*^9, 3.9076592616813984`*^9}, {
  3.907659301091846*^9, 3.907659342799615*^9}, {3.907659379906397*^9, 
  3.907659410993597*^9}},ExpressionUUID->"0a9b363f-0198-4433-b46d-\
d44d0190a1b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.9076593920305634`*^9, 3.9076594028691607`*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"6f9aafa1-2f32-4bda-9833-8a0d5d303e13"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["C\[AAcute]lculo de soluciones alternativas",
 FontWeight->"Bold",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 CellFrame->3,
 CellFrameColor->RGBColor[0, 0, 1],
 CellChangeTimes->{{3.468560723044957*^9, 3.468560741281863*^9}, {
   3.468828651286426*^9, 3.468828668213129*^9}, 3.815323230064086*^9},
 FontSize->24,
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"12c5dfc5-9c18-4600-9dd4-b76cf0a18ee4"],

Cell[TextData[{
 "Vamos a",
 StyleBox[" ",
  FontWeight->"Bold"],
 " resolver el siguiente problema de Programaci\[OAcute]n Lineal."
}], "Text",
 CellChangeTimes->{{3.4687668526559753`*^9, 3.4687668601744432`*^9}, {
  3.5012279082154713`*^9, 3.50122790866716*^9}, {3.593503919772966*^9, 
  3.593503937009754*^9}, {3.593504019177925*^9, 3.593504021399026*^9}, {
  3.783081529959746*^9, 3.7830815310301037`*^9}},
 FontSize->18,ExpressionUUID->"46457ad5-5665-418d-be8d-63a9f67a8173"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {GridBox[{
            {GridBox[{
               {GridBox[{
                  {"Max", 
                   RowBox[{
                    RowBox[{"4", "x1"}], "+", 
                    RowBox[{"12", "x2"}], "+", 
                    RowBox[{"3", "x3"}]}]}
                 }]},
               {
                RowBox[{"                                    ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", ".", "a", ".", "  ", "3"}], "x1"}], "+", 
                   RowBox[{"6", "x2"}], "+", 
                   RowBox[{"2", "x3"}]}], "\[LessEqual]", "6750"}]}]}
              }]},
            {
             RowBox[{"                     ", 
              RowBox[{"x1", "\[LessEqual]", "1000"}]}]}
           }]},
         {
          RowBox[{"                   ", 
           RowBox[{"x2", "\[LessEqual]", "500"}]}]}
        }]},
      {
       RowBox[{"                      ", 
        RowBox[{"x3", "\[LessEqual]", " ", "1500"}]}]}
     }]},
   {
    RowBox[{"                              ", 
     RowBox[{"x1", ",", "x2", ",", 
      RowBox[{"x3", "\[GreaterEqual]", "0"}]}]}]}
  }]], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellFrameColor->RGBColor[0, 0.67, 0],
 CellChangeTimes->{{3.468766599353421*^9, 3.468766763574479*^9}},
 FontSize->18,ExpressionUUID->"14fd20cc-646f-4ea3-a445-53226aa321ff"],

Cell[TextData[{
 "La soluci\[OAcute]n \[OAcute]ptima del problema es ",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox["x",
      FontWeight->"Bold"], "o"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"250", ",", "500", ",", "1500"}], ")"}], "  ", "y", " ", 
      SubscriptBox["z", "o"]}], "=", "11500"}]}], TraditionalForm]],
  ExpressionUUID->"d0f170a1-9b40-4dfb-a8a6-474eb58616d9"],
 ".\nVamos a comprobar si el problema tiene soluciones alternativas, para \
ello, es necesario conocer los costos reducidos de la \[UAcute]ltima tabla \
del problema,  que son ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "j"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"e66ba5c6-53c8-48f0-a376-d37f13ca48f4"],
 " -",
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    SubsuperscriptBox["c", "B", "t"]}], TraditionalForm]],ExpressionUUID->
  "84e5b80d-a703-48c6-9576-35f0bf337eca"],
 StyleBox[". ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["B", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FontSize->18,ExpressionUUID->"4b62bd04-4ad8-4c24-8679-4094946dc394"],
 StyleBox[". ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "j"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"a488b3fe-7035-41fb-ac19-e31b0e2a5e74"],
 " para todo j=1, 2,...,7.\nLas variables b\[AAcute]sicas del problema son \
x1, x2, x3 y x5, por lo que\n\n\t\t\t\t",
 StyleBox["B = (",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "1"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"a54ffb3e-222e-446d-b4d1-f04b902b53d5"],
 StyleBox[",",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["a", "2"]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"a20a3d75-35c6-465e-af7f-dccebb8e28f3"],
 StyleBox[", ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "3"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"d1135581-ae4e-4094-b53e-84b99ff55308"],
 StyleBox[", ",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "5"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"4b0b206e-199f-4a2b-9ec4-fe70c9ccfde7"],
 StyleBox[") ",
  FontSize->18],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {GridBox[{
         {GridBox[{
            {"3", "6"}
           }], "2"}
        }], "0"},
      {GridBox[{
         {GridBox[{
            {GridBox[{
               {GridBox[{
                  {"1"},
                  {"0"}
                 }]},
               {"0"}
              }], GridBox[{
               {GridBox[{
                  {"0"},
                  {"1"}
                 }]},
               {"0"}
              }]}
           }], GridBox[{
            {GridBox[{
               {"0"},
               {"0"}
              }]},
            {"1"}
           }]}
        }], GridBox[{
         {GridBox[{
            {"1"},
            {"0"}
           }]},
         {"0"}
        }]}
     }], "\[NoBreak]", ")"}], TraditionalForm]],ExpressionUUID->
  "8af0204e-9b45-4b14-b6ce-d352d668686e"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.4687668847225103`*^9, 3.468766964800387*^9}, {
  3.468766995486413*^9, 3.468767155948781*^9}, {3.468767220261382*^9, 
  3.468767258149589*^9}, {3.4687672893038063`*^9, 3.4687675163669977`*^9}, {
  3.468767563241887*^9, 3.4687678846411943`*^9}, {3.469380660906971*^9, 
  3.469380693262764*^9}, {3.907514732456006*^9, 3.907514762599634*^9}},
 FontSize->18,
 Background->GrayLevel[
  1],ExpressionUUID->"08fdb6c8-acb7-4096-aca2-9e2498eb5667"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cB", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "3"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "6", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", "\.ba"}], ",", " ", 
    RowBox[{"2", "\.ba"}], ",", " ", 
    RowBox[{"3", "\.ba"}], ",", " ", 
    RowBox[{"5", "\.ba", " ", "columnas"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "2", ",", "1", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "3"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.468767529762497*^9, 3.4687675605276117`*^9}, {
  3.4687679137700377`*^9, 3.468768017940036*^9}, {3.468768053407585*^9, 
  3.468768071209566*^9}, {3.907659649196811*^9, 3.907659674269452*^9}},
 FontSize->18,ExpressionUUID->"0710e37e-fa8f-4941-adc4-eea697e5c40f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"costosreducisos", " ", "=", 
  RowBox[{"c", "-", 
   RowBox[{"cB", ".", 
    RowBox[{"Inverse", "[", "B", "]"}], ".", "A", "  ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "los", " ", "costes", " ", "asociados", " ", "a", " ", "la", " ", 
        "base", " ", "B"}], " ", "->", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
       "Es", " ", "la", " ", "\[UAcute]nica", " ", "soluci\[OAcute]n", " ", 
        "del", " ", "problema"}], " ", "->", " ", 
       RowBox[{"Es", " ", 
        RowBox[{"S", ".", "O", ".", "B", ".", " ", 
         RowBox[{"(", "\[UAcute]nica", ")"}]}]}]}]}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.468768024698944*^9, 3.4687680489020357`*^9}, {
  3.907514789030298*^9, 3.907514793004622*^9}, {3.90751484314825*^9, 
  3.907514845570603*^9}, {3.907659848411865*^9, 3.907659898236442*^9}},
 FontSize->18,
 CellLabel->"In[62]:=",ExpressionUUID->"359e97c2-94de-48a7-aec6-8c2b98f62bb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   FractionBox["4", "3"], ",", "0", ",", "4", ",", 
   FractionBox["1", "3"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9076594308203535`*^9, {3.9076598891945543`*^9, 3.9076598991939297`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"0520c888-defa-4f4d-8fe1-a9661773ee10"]
}, Open  ]],

Cell["\<\
Podemos afirmar que el problema no tiene m\[UAcute]ltiples \[OAcute]ptimos, \
ya que no hay ning\[UAcute]n costo reducido nulo que corresponda a alg\
\[UAcute]n vector no b\[AAcute]sico.
La soluci\[OAcute]n del dual del problema la podemos dar fij\[AAcute]ndonos \
en las \[UAcute]ltimas cuatro componentes del vector de costos reducidos \
(porque el problema primal es de maximizaci\[OAcute]n).\
\>", "Text",
 CellGroupingRules->"NormalGrouping",
 CellChangeTimes->{{3.468768094065588*^9, 3.46876814722757*^9}, {
  3.468768197125231*^9, 3.468768309847361*^9}, {3.593504058729052*^9, 
  3.5935040650483923`*^9}, {3.783100886252022*^9, 3.7831008949544086`*^9}, {
  3.907514880890499*^9, 3.907514884065027*^9}, {3.907515055500904*^9, 
  3.9075150568909283`*^9}, {3.907515233497086*^9, 3.90751529216671*^9}},
 FontSize->18,ExpressionUUID->"e73bb711-d1b5-4cb7-adee-8723837b06e6"],

Cell[TextData[StyleBox["De todas formas, plantea y resuelve el problema dual \
del problema dado.",
 FontSize->18]], "Text",
 CellChangeTimes->{3.5935040813925657`*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"cb993a83-72d1-430c-9f96-dc826187009e"],

Cell[TextData[{
 StyleBox["4. ",
  FontWeight->"Bold"],
 "Resolver el siguiente problema de Programaci\[OAcute]n Lineal y su dual. En \
caso de que alguno de los dos problemas tenga m\[UAcute]ltiples \
\[OAcute]ptimos, h\[AAcute]llense \[EAcute]stos."
}], "Text",
 CellChangeTimes->{{3.4687668526559753`*^9, 3.4687668601744432`*^9}, {
  3.4688278084584017`*^9, 3.4688278089535303`*^9}, {3.468827989338385*^9, 
  3.468828035016698*^9}, {3.501227920326037*^9, 3.501227920715321*^9}, {
  3.783081904487068*^9, 3.783081904885296*^9}, {3.783100905627777*^9, 
  3.783100915426341*^9}},
 FontSize->18,ExpressionUUID->"fe3fbbfa-054f-48a7-b83a-0b02572bb86f"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {
          RowBox[{"               ", GridBox[{
             {"Max", 
              RowBox[{"x1", "+", "x2"}]}
            }]}]},
         {
          RowBox[{"                            ", 
           RowBox[{
            RowBox[{
             RowBox[{"s", ".", "a", ".", "  ", "x1"}], "+", "x2"}], 
            "\[LessEqual]", "4"}]}]}
        }]},
      {
       RowBox[{"                                   ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"5", "x1"}], "+", 
           RowBox[{"3", "x2"}]}], "\[LessEqual]", "15"}], 
         "\[IndentingNewLine]", "\t\t\t        ", 
         RowBox[{
          RowBox[{
           RowBox[{"7", "x1"}], "+", 
           RowBox[{"5", "x2"}]}], "\[LessEqual]", "35"}]}]}]}
     }]},
   {
    RowBox[{"                                         ", 
     RowBox[{"x1", ",", 
      RowBox[{"x2", "\[GreaterEqual]", "0"}]}]}]}
  }]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468766599353421*^9, 3.468766763574479*^9}, {
  3.468827820866357*^9, 3.468827828884705*^9}, {3.468827867603544*^9, 
  3.468827962302918*^9}, {3.501228827404501*^9, 3.501228836380639*^9}, {
  3.625925210896467*^9, 3.6259252752374287`*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"3332453c-ddd0-4f9e-a581-3b630e7dfe23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearProgramming", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "5"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"35", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.908261121718919*^9, 3.908261121718919*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"04769aec-1396-4c0c-81f7-3609f430f46b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "2"], ",", 
   FractionBox["5", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.90826112435893*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"69746583-e59d-4f06-88d0-345abf020917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "5", ",", " ", "3", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "}"}],
     ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "7", ",", " ", "5", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9082611387361155`*^9, 3.9082611719217405`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a27c9db2-57da-4fa5-81b2-933f8e2af9f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9082611623057766`*^9, 3.9082611751051245`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"39f085a7-4cfa-4c19-8425-4aa475cfeb40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"5", ",", " ", "3", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"7", ",", " ", "5", ",", " ", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908261176237043*^9, 3.9082611844590974`*^9}, {
  3.90826132395772*^9, 3.9082613577676587`*^9}, {3.9082614221179132`*^9, 
  3.9082614222269063`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d6104683-087c-4324-9e97-33097555be6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908261425228893*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"808d896b-f519-436d-9a05-ccf33ffc40d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.908261427205351*^9, 3.9082614334534035`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"706e6ff7-ddf7-494a-bd53-b42b057cab8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9082614349116836`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f7df1b92-f9d3-4022-bec1-289e0dcc254c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cB", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908261435758739*^9, 3.9082614425034122`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"92938196-6c6b-4316-9f9a-a9de0a9cb545"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.908261446567025*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"ac938c1b-ac4f-4906-8c88-1076a2229988"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"{", 
   RowBox[{"4", ",", " ", "15", ",", " ", "35"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908261187951708*^9, 3.9082611947850447`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1851f307-5c71-4a64-89cd-283fa6eb9a5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "15", ",", "35"}], "}"}]], "Output",
 CellChangeTimes->{3.908261198425788*^9, 3.908261448739306*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1bdfb56a-9203-47d9-9093-c15a498ec5fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "-", 
  RowBox[{"cB", ".", 
   RowBox[{"Inverse", "[", "B", "]"}], ".", "A"}]}]], "Input",
 CellChangeTimes->{{3.9082612008878746`*^9, 3.908261209228504*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c91b6e59-14fd-49d9-a439-348a31f04a25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9082614495175285`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6751860e-8eab-48bc-86bb-a8ff6de6e00a"]
}, Open  ]],

Cell["\<\
Como el cuarto costo indirecto es nulo y no corresponde a un vector \
b\[AAcute]sica, esto nos indica que el problema tiene m\[UAcute]ltiples \
\[OAcute]ptimos\
\>", "Text",
 CellChangeTimes->{{3.9082612151061525`*^9, 3.908261246120586*^9}, 
   3.9082614823067055`*^9},ExpressionUUID->"bc7c1dfe-0497-46a2-b061-\
fe829c5df6ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "B", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908261249417321*^9, 3.9082612601041584`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a2f68f92-cd7c-4a6d-9a88-5cb71e9d3eae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908261451805971*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"5e881d9f-612b-44b5-bdc4-bae5025d7e3c"]
}, Open  ]],

Cell["\<\
a4 entra en la base (la costo indirecto nulo)
a1 sale de la base\
\>", "Text",
 CellChangeTimes->{{3.9082612637970686`*^9, 3.9082612856963844`*^9}, {
  3.9082614739666348`*^9, 
  3.908261475569954*^9}},ExpressionUUID->"1fcabd77-2c10-488e-b93b-\
1c02d346293f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bnew", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "3", ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "5", ",", " ", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.908261290520603*^9, 3.908261304407878*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"773f0d6c-26b2-4990-995f-f681b4900549"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.908261305836958*^9, 3.90826145459225*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"205bc751-c948-4667-85cb-aef6610b23f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "Bnew", "]"}], ".", "b"}]], "Input",
 CellChangeTimes->{{3.9082613072141075`*^9, 3.9082613121926203`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"62741a76-8153-474a-84b5-37edd53de722"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.9082613129540443`*^9, 3.90826145585044*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1bc57192-894f-4d60-95ca-a7ff65aa517f"]
}, Open  ]],

Cell["\<\
Las soluciones \[OAcute]ptimas b\[AAcute]sicas del problema son (3/2, 5/2, 0, \
0, 12) y (0, 4, 0, 3, 15) 
Todo el segmento que une dichas soluciones es de soluciones \[OAcute]ptimas .
El primal no es degenerado (tiene 3 componentes no nulas).\
\>", "Text",
 CellChangeTimes->{{3.9082613729323697`*^9, 3.908261412493466*^9}, {
  3.908261461401223*^9, 3.90826146438358*^9}, {3.908261520296996*^9, 
  3.9082615460105844`*^9}},ExpressionUUID->"41b66f45-74ce-480b-89b3-\
16c8f81d1449"],

Cell[TextData[{
 StyleBox["5.",
  FontWeight->"Bold"],
 " Resolver el siguiente problema de Programaci\[OAcute]n Lineal y su dual. \
En caso de que alguno de los dos problemas tenga m\[UAcute]ltiples \
\[OAcute]ptimos, h\[AAcute]llense \[EAcute]stos."
}], "Text",
 CellChangeTimes->{{3.4687668526559753`*^9, 3.4687668601744432`*^9}, {
   3.4688278084584017`*^9, 3.4688278089535303`*^9}, {3.468827989338385*^9, 
   3.468828035016698*^9}, {3.501227920326037*^9, 3.501227920715321*^9}, {
   3.5012288121974983`*^9, 3.5012288128122377`*^9}, {3.78308190649358*^9, 
   3.783081906677021*^9}, 3.7831009252595873`*^9},
 FontSize->18,ExpressionUUID->"42833be8-b9d6-475b-a9bb-0db4248009b1"],

Cell[BoxData[GridBox[{
   {GridBox[{
      {GridBox[{
         {
          RowBox[{"               ", GridBox[{
             {"Max", 
              RowBox[{
               RowBox[{"3", "x1"}], "+", 
               RowBox[{"7", "x2"}], "+", 
               RowBox[{"5", "x3"}]}]}
            }]}]},
         {
          RowBox[{"                            ", 
           RowBox[{
            RowBox[{
             RowBox[{"s", ".", "a", ".", "  ", "x1"}], "+", "x2", "+", "x3"}],
             "\[LessEqual]", "100"}]}]}
        }]},
      {
       RowBox[{"                                     ", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "x1"}], "+", 
          RowBox[{"3", "x2"}], "+", "x3"}], "\[LessEqual]", "100"}]}]}
     }]},
   {
    RowBox[{"                              ", 
     RowBox[{"x1", ",", "x2", ",", 
      RowBox[{"x3", "\[GreaterEqual]", "0"}]}]}]}
  }]], "Text",
 CellFrame->3,
 CellFrameColor->RGBColor[1, 0.5, 0],
 CellChangeTimes->{{3.468766599353421*^9, 3.468766763574479*^9}, {
  3.468827820866357*^9, 3.468827828884705*^9}, {3.468827867603544*^9, 
  3.468827962302918*^9}, {3.501228819044857*^9, 3.5012288232280273`*^9}, {
  3.501228869014204*^9, 3.501228920761444*^9}},
 FontSize->18,
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1c11e408-d6ed-4f99-bec5-1b6d3e1eea88"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{1024.5, 513.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification:>1. Inherited,
FrontEndVersion->"13.1 para Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"86b385ab-9044-46fd-b50a-80d301a0c888"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 1127, 23, 188, "Title",ExpressionUUID->"333b2812-7075-48b6-85ec-d994c7acd63b"],
Cell[1552, 40, 545, 11, 113, "Subtitle",ExpressionUUID->"cf6dbb8d-b006-4622-80c1-4c432e78c2f4"],
Cell[CellGroupData[{
Cell[2122, 55, 354, 9, 71, "Section",ExpressionUUID->"cdb7bb68-6b2c-417a-9cca-f07f18764908"],
Cell[CellGroupData[{
Cell[2501, 68, 201, 2, 51, "Subsection",ExpressionUUID->"4b5f5bf4-0626-48a6-b174-7ac2e7a8abde"],
Cell[2705, 72, 283, 3, 38, "Text",ExpressionUUID->"dde1cf14-5ec1-4037-b8b4-bc7f5d8e81a7"],
Cell[2991, 77, 447, 13, 56, "Input",ExpressionUUID->"ffab45ad-adac-4c6c-8f1e-7a43383b69f0"],
Cell[3441, 92, 418, 12, 58, "Text",ExpressionUUID->"b80bda00-ac94-4acf-804f-0032c782ee45"],
Cell[3862, 106, 506, 16, 56, "Input",ExpressionUUID->"4885ce0b-ed00-4619-bc04-9a47dc557db4"],
Cell[4371, 124, 207, 2, 38, "Text",ExpressionUUID->"e94dc849-8651-4297-9da9-7dbc2fa36bd3"],
Cell[4581, 128, 478, 12, 76, "Input",ExpressionUUID->"0ca315d0-68a1-4f59-8e0f-564aef0e8ae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5096, 145, 269, 4, 51, "Subsection",ExpressionUUID->"29e55415-983f-4820-844a-4df00b493eb4"],
Cell[5368, 151, 732, 20, 112, "Text",ExpressionUUID->"490bac00-7aab-4de5-80fe-6300da7b8435"],
Cell[CellGroupData[{
Cell[6125, 175, 709, 18, 28, "Input",ExpressionUUID->"7076f7b7-fc33-4875-a55a-48f6399d9122"],
Cell[6837, 195, 293, 8, 32, "Output",ExpressionUUID->"fa7433d1-3776-4dd0-a74c-f5d887d447d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7167, 208, 504, 13, 28, "Input",ExpressionUUID->"a5d1cad3-0a5a-44fb-8e80-e40233ea6299"],
Cell[7674, 223, 333, 10, 32, "Output",ExpressionUUID->"def2eb99-02ac-48e3-b9fa-77353e089ed5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8044, 238, 194, 3, 28, "Input",ExpressionUUID->"646c96d2-3bd9-4aee-b9b5-5bf3e5d82b61"],
Cell[8241, 243, 312, 9, 32, "Output",ExpressionUUID->"b209bc22-e0f0-4da5-b380-3c7e0599734c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8590, 257, 193, 3, 28, "Input",ExpressionUUID->"4b1da500-c49e-4d6b-ab87-44650ecacd0e"],
Cell[8786, 262, 335, 10, 32, "Output",ExpressionUUID->"54bedda8-68ed-43b4-979d-64b04bf9a4db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9158, 277, 206, 3, 43, "Input",ExpressionUUID->"1a9bbe21-070c-4c94-a6b5-60dcf893a114"],
Cell[9367, 282, 455, 14, 48, "Output",ExpressionUUID->"0a470e6f-d901-4d69-ac38-26542b5340d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9859, 301, 204, 3, 43, "Input",ExpressionUUID->"2ce41706-b0b8-4415-ae53-1d04a0aaaea1"],
Cell[10066, 306, 431, 14, 48, "Output",ExpressionUUID->"73dd3a3f-a5c0-42f9-aed7-0448e1d7c96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10534, 325, 211, 3, 43, "Input",ExpressionUUID->"66457ac6-0c4f-473f-9ae0-e760253ecaf8"],
Cell[10748, 330, 314, 8, 32, "Output",ExpressionUUID->"aa5917cd-2494-4c6d-9141-56235c77a1d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11099, 343, 207, 3, 43, "Input",ExpressionUUID->"b5c45cc9-4f9c-49e4-9557-9bd576d7e6b4"],
Cell[11309, 348, 334, 10, 32, "Output",ExpressionUUID->"1be0526d-caea-46bf-b4b7-673f650c4ca2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11680, 363, 201, 3, 43, "Input",ExpressionUUID->"15a10adf-bdc5-424e-8eb5-3f19ee819882"],
Cell[11884, 368, 188, 3, 32, "Output",ExpressionUUID->"3437c566-904f-4fec-9362-6919fe3a9b4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12109, 376, 203, 3, 43, "Input",ExpressionUUID->"76dc150a-379a-4c11-b63d-d6ad1611abe4"],
Cell[12315, 381, 166, 3, 32, "Output",ExpressionUUID->"ebad3685-d4b0-471f-bfc4-545a6a3c41a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12542, 391, 383, 9, 71, "Section",ExpressionUUID->"d448170d-f629-4d2b-b29b-407731c66f5e"],
Cell[12928, 402, 131656, 2172, 792, "Text",ExpressionUUID->"06c4638b-b5d3-4d06-bc5c-d9b81f0a7c11"],
Cell[144587, 2576, 154, 3, 28, "Input",ExpressionUUID->"8fb560a5-8864-42a9-b27e-32330b485718"],
Cell[144744, 2581, 566, 15, 76, "Input",ExpressionUUID->"38b0051e-cb8f-4a76-a431-99cbd9816bc3"],
Cell[145313, 2598, 554, 21, 38, "Text",ExpressionUUID->"44c3367b-56a3-4392-aa76-27a0b0fa7a3c"],
Cell[145870, 2621, 1434, 32, 51, "DisplayFormula",ExpressionUUID->"39cf5aad-9b70-49cb-960a-22c8fb2a21d5"],
Cell[147307, 2655, 636, 18, 28, "Input",ExpressionUUID->"14d161bb-4f4b-456c-8e98-12c1967ac89a"],
Cell[CellGroupData[{
Cell[147968, 2677, 262, 4, 43, "Input",ExpressionUUID->"99d52b31-3b75-4381-a71c-e938ea42e49c"],
Cell[148233, 2683, 196, 4, 32, "Output",ExpressionUUID->"36c54112-22aa-4b20-a0d7-c9e357086e3e"]
}, Open  ]],
Cell[148444, 2690, 1355, 37, 237, "Input",ExpressionUUID->"1689e888-f562-41ce-949d-7330ad95f27e"],
Cell[149802, 2729, 1080, 29, 90, "Text",ExpressionUUID->"fae25572-2e3d-4e0a-90e0-7485649e3232"],
Cell[150885, 2760, 1100, 37, 51, "DisplayFormula",ExpressionUUID->"e8526e8b-d924-47af-9979-771b670be946"],
Cell[CellGroupData[{
Cell[152010, 2801, 702, 20, 43, "Input",ExpressionUUID->"953cb78c-d4c2-4be6-94c4-3a641e42b465"],
Cell[152715, 2823, 244, 5, 48, "Output",ExpressionUUID->"e2cb5025-6a24-431e-88db-cfa1201285bc"]
}, Open  ]],
Cell[152974, 2831, 665, 16, 76, "Input",ExpressionUUID->"6e02b955-ac01-4dd3-83a4-433c1789febc"],
Cell[153642, 2849, 753, 21, 38, "Text",ExpressionUUID->"d0710c6e-7467-4008-9d67-870768af2f79"],
Cell[154398, 2872, 1086, 37, 51, "DisplayFormula",ExpressionUUID->"bbfaebc1-67a1-4181-844b-c66f978ce028"],
Cell[CellGroupData[{
Cell[155509, 2913, 862, 25, 43, "Input",ExpressionUUID->"4e99465d-9836-4f5e-a126-05b0a6341a1a"],
Cell[156374, 2940, 237, 5, 32, "Output",ExpressionUUID->"ccc8efcd-c001-4721-bed7-d2062a9fe41b"]
}, Open  ]],
Cell[156626, 2948, 879, 23, 76, "Input",ExpressionUUID->"b0d1daf6-d45c-4a51-96f8-ffc4838d77c3"],
Cell[157508, 2973, 846, 20, 38, "Text",ExpressionUUID->"ffdd4088-bc95-4494-86fa-38b1df23cc94"],
Cell[158357, 2995, 1161, 33, 51, "DisplayFormula",ExpressionUUID->"99e042af-c968-45c0-9013-06332239c3e7"],
Cell[CellGroupData[{
Cell[159543, 3032, 933, 29, 43, "Input",ExpressionUUID->"36e077a9-e095-4694-955c-0176de0c2d50"],
Cell[160479, 3063, 215, 5, 32, "Output",ExpressionUUID->"850f02c7-22c7-4a10-ac87-9614e6d53de9"]
}, Open  ]],
Cell[160709, 3071, 1105, 25, 184, "Input",ExpressionUUID->"4ae491a3-97cb-45fc-8c62-188a4906f75b"],
Cell[161817, 3098, 732, 25, 38, "Text",ExpressionUUID->"8996ab3b-157f-46b1-9925-36ae80dfe4ce"],
Cell[162552, 3125, 1146, 30, 51, "DisplayFormula",ExpressionUUID->"031a18f7-47c0-4a0d-ab0b-8641aa17ed1a"],
Cell[CellGroupData[{
Cell[163723, 3159, 744, 21, 43, "Input",ExpressionUUID->"8151146b-7b18-41f4-adad-db0ec994e4c1"],
Cell[164470, 3182, 240, 5, 48, "Output",ExpressionUUID->"0e00ccd3-6e12-4ffe-b591-0b37d40252ff"]
}, Open  ]],
Cell[164725, 3190, 727, 16, 76, "Input",ExpressionUUID->"0e37cce8-c8ac-49f7-9a8d-2b0ff5ad4c6e"],
Cell[165455, 3208, 790, 23, 38, "Text",ExpressionUUID->"0879cb82-2621-4182-aeb7-2b2d310c9054"],
Cell[166248, 3233, 1112, 31, 51, "DisplayFormula",ExpressionUUID->"deeea438-011a-412c-831d-29d8539f2580"],
Cell[CellGroupData[{
Cell[167385, 3268, 858, 24, 43, "Input",ExpressionUUID->"fe35fc0e-f046-4972-be51-752a8e9945d9"],
Cell[168246, 3294, 436, 9, 28, "Message",ExpressionUUID->"5f1f7d9d-590f-4231-a20b-434d2959ac9e"],
Cell[168685, 3305, 246, 5, 32, "Output",ExpressionUUID->"fa947ff9-493c-485f-8e12-b7cb8ddb1f3f"]
}, Open  ]],
Cell[168946, 3313, 1036, 23, 210, "Input",ExpressionUUID->"61dc69e3-6628-44f8-9c38-ea08ac54e8ad"],
Cell[169985, 3338, 1048, 35, 64, "Text",ExpressionUUID->"87096ee9-1d64-4b0b-8142-ad9a91137850"],
Cell[171036, 3375, 208, 4, 67, "Input",ExpressionUUID->"19adb553-5dd3-4a22-98bd-3852e3b21f32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171281, 3384, 492, 10, 70, "Subtitle",ExpressionUUID->"49fd31d0-436c-4e38-8207-009069da27d1"],
Cell[CellGroupData[{
Cell[171798, 3398, 1604, 49, 157, "Input",ExpressionUUID->"3842c606-d2b2-4127-8b56-a598c2ec76a7"],
Cell[173405, 3449, 340, 8, 28, "Message",ExpressionUUID->"bf666c70-f046-4684-a92e-4eb408df779b"],
Cell[173748, 3459, 218, 4, 32, "Output",ExpressionUUID->"8efcd0d4-dc84-48e3-be3e-e41effb4ad53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174015, 3469, 444, 10, 70, "Subtitle",ExpressionUUID->"e5830918-7fa6-4eea-b2ed-568ad8bfea41"],
Cell[CellGroupData[{
Cell[174484, 3483, 1413, 47, 157, "Input",ExpressionUUID->"47142a24-35ca-4c06-aac2-0738aa375cf4"],
Cell[175900, 3532, 376, 9, 28, "Message",ExpressionUUID->"f2b7f7f0-0007-4795-a6fe-5806d172ad6b"],
Cell[176279, 3543, 885, 30, 32, "Output",ExpressionUUID->"c2f01065-45fd-4f61-a64d-ac5fb5ed8904"]
}, Open  ]],
Cell[177179, 3576, 233, 5, 86, "Input",ExpressionUUID->"bc1d9ca2-e880-4003-9214-2ac90eb10e63"],
Cell[177415, 3583, 944, 25, 85, "Text",ExpressionUUID->"6701ca95-5340-4e68-9f9e-d493faf0c1f3"],
Cell[CellGroupData[{
Cell[178384, 3612, 939, 22, 83, "Input",ExpressionUUID->"a1bc0ad8-a7d5-43c7-aff8-60159d6450ca",
 CellID->28861],
Cell[179326, 3636, 8966, 164, 370, "Output",ExpressionUUID->"d7b3bf4c-ae8a-492e-a408-c87441861588"]
}, Open  ]],
Cell[188307, 3803, 1149, 29, 85, "Text",ExpressionUUID->"39c4027b-d32d-4a82-b467-615ce492ead9"],
Cell[CellGroupData[{
Cell[189481, 3836, 1441, 33, 129, "Input",ExpressionUUID->"d1b14e4e-df10-4114-a0ab-27dda47dbc8d",
 CellID->989707567],
Cell[190925, 3871, 47000, 787, 407, 14044, 246, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7cbd8347-2b19-4f9c-9102-b0da971508bd"]
}, Open  ]],
Cell[237940, 4661, 196, 4, 48, "Input",ExpressionUUID->"604affb6-b37d-4062-b7f7-b5984808caa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238173, 4670, 478, 10, 70, "Subtitle",ExpressionUUID->"37234ed2-350e-49f5-ac74-273ea8c53f25"],
Cell[238654, 4682, 717, 11, 106, "Text",ExpressionUUID->"579b43f2-7b10-47e8-9251-2504126d12fb"],
Cell[CellGroupData[{
Cell[239396, 4697, 824, 22, 49, "Input",ExpressionUUID->"7a679245-ef7f-41af-b053-20b31a8b257c"],
Cell[240223, 4721, 235, 5, 32, "Output",ExpressionUUID->"cff8a512-3862-436a-96d7-788b37ed3c25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240495, 4731, 644, 19, 49, "Input",ExpressionUUID->"a61cf97c-cb0f-4701-88a8-32fec91e55d3"],
Cell[241142, 4752, 200, 4, 32, "Output",ExpressionUUID->"263d624a-1c41-4db0-96fc-c364789a779e"]
}, Open  ]],
Cell[241357, 4759, 348, 6, 54, "Text",ExpressionUUID->"4f715e55-df33-40ff-803a-1daeed5549f5"],
Cell[241708, 4767, 1964, 52, 137, "Text",ExpressionUUID->"e0454897-2df6-4814-bdc7-0c64502694c1"],
Cell[CellGroupData[{
Cell[243697, 4823, 250, 4, 54, "Input",ExpressionUUID->"4633f065-98c0-4a63-8595-7c59405fcbbb"],
Cell[243950, 4829, 13605, 348, 680, "Output",ExpressionUUID->"35f09584-4669-42e5-a95d-9d1102734218"]
}, Open  ]],
Cell[257570, 5180, 332, 6, 54, "Text",ExpressionUUID->"086fed83-1c6e-4bb2-9d01-0e83dc066630"],
Cell[CellGroupData[{
Cell[257927, 5190, 571, 14, 83, "Input",ExpressionUUID->"f389e8c0-0e01-4b70-9733-0daf27a9817b"],
Cell[258501, 5206, 222, 4, 32, "Output",ExpressionUUID->"b0efb917-0aaa-44c3-8c1f-99c84385d3f5"]
}, Open  ]],
Cell[258738, 5213, 154, 3, 28, InheritFromParent,ExpressionUUID->"62e2dd36-9405-4a66-9306-563e151e8ad1"],
Cell[258895, 5218, 580, 12, 54, "Input",ExpressionUUID->"a2fbbd1d-3eab-4100-a450-0c37bac0f180"],
Cell[259478, 5232, 173, 2, 28, "Input",ExpressionUUID->"dde9a67a-051e-4a91-9c3e-21afc997fdf8"],
Cell[CellGroupData[{
Cell[259676, 5238, 1010, 21, 54, "Input",ExpressionUUID->"ca435e3b-d47f-4fbc-a2b5-8e229b80cebe"],
Cell[260689, 5261, 205, 4, 32, "Output",ExpressionUUID->"7acbf9e8-8050-4a9a-af3d-adf3242e514d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260931, 5270, 970, 21, 54, "Input",ExpressionUUID->"35df1b18-d0c2-4ce4-bf6d-31522cb35796"],
Cell[261904, 5293, 206, 4, 32, "Output",ExpressionUUID->"93b1d714-383d-4f66-975f-55e6f82516d7"]
}, Open  ]],
Cell[262125, 5300, 149, 3, 48, "Input",ExpressionUUID->"6d61331a-b4c1-4181-8e89-3c4cb1e16c20"],
Cell[CellGroupData[{
Cell[262299, 5307, 533, 13, 83, "Input",ExpressionUUID->"42290cac-8c53-4725-ae92-621fc8a24668"],
Cell[262835, 5322, 200, 4, 32, "Output",ExpressionUUID->"d4806731-0d70-4cd9-ae63-e2accd5586c5"]
}, Open  ]],
Cell[263050, 5329, 654, 13, 54, "Input",ExpressionUUID->"838da2e5-62e3-444b-b816-992b8bd24606"],
Cell[CellGroupData[{
Cell[263729, 5346, 967, 21, 54, "Input",ExpressionUUID->"d4c27bdf-3785-4a57-81fa-8b0432deea75"],
Cell[264699, 5369, 204, 4, 32, "Output",ExpressionUUID->"4bf21fc6-a6f1-46a8-8584-38d034e8a6e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264940, 5378, 1016, 21, 54, "Input",ExpressionUUID->"b412e4dc-c937-4e62-a2bd-d1a1ce11df66"],
Cell[265959, 5401, 205, 4, 32, "Output",ExpressionUUID->"ede3f696-df27-4cf5-8e15-b15002ccc1ed"]
}, Open  ]],
Cell[266179, 5408, 206, 4, 67, "Input",ExpressionUUID->"d718ee4d-b1a9-4e46-abde-20436edf64d4"],
Cell[266388, 5414, 406, 7, 80, "Text",ExpressionUUID->"5e7f6328-2e6a-4fb0-9ae8-ec29f31f2da9"],
Cell[CellGroupData[{
Cell[266819, 5425, 515, 14, 54, "Input",ExpressionUUID->"06e925ef-6cfb-4247-b15c-79d569a261c0"],
Cell[267337, 5441, 339, 8, 28, "Message",ExpressionUUID->"a8653b1b-2228-4fb9-8359-8c5624c7ac1e"],
Cell[267679, 5451, 220, 4, 32, "Output",ExpressionUUID->"f1138070-a808-4fd4-b5ac-3d9469867eab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267936, 5460, 570, 15, 54, "Input",ExpressionUUID->"b022706d-8cf3-4bae-850f-af70a9928523"],
Cell[268509, 5477, 606, 12, 46, "Message",ExpressionUUID->"8ada729f-71a8-47b2-a661-41bcd5d95891"],
Cell[269118, 5491, 486, 14, 32, "Output",ExpressionUUID->"bdb86681-fe99-48f8-9123-00ede17b757a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269641, 5510, 393, 10, 71, "Section",ExpressionUUID->"405d735e-53ec-4a90-8dcf-20a8ba4e42c5"],
Cell[CellGroupData[{
Cell[270059, 5524, 169, 2, 51, "Subsection",ExpressionUUID->"072bf513-5ea3-4500-b912-085d290cd8e6"],
Cell[270231, 5528, 528, 10, 38, "Text",ExpressionUUID->"f6e667e4-f3e1-40fe-961f-19ca6b895d5b"],
Cell[270762, 5540, 1203, 37, 130, "Text",ExpressionUUID->"28283735-7338-4307-a4df-34d8659644e2"],
Cell[CellGroupData[{
Cell[271990, 5581, 801, 23, 43, "Input",ExpressionUUID->"629a8e93-d8fa-48c8-abda-02f09e0a1b93"],
Cell[272794, 5606, 216, 5, 48, "Output",ExpressionUUID->"a840c48a-46cb-4e60-945e-52487d37d1c6"]
}, Open  ]],
Cell[273025, 5614, 618, 12, 38, "Text",ExpressionUUID->"c74f8b04-dffa-4f4e-8227-df7e53295713"],
Cell[273646, 5628, 1192, 35, 130, "Text",ExpressionUUID->"9704c5e0-08ba-42db-a0dc-6f69df66db4a"],
Cell[CellGroupData[{
Cell[274863, 5667, 961, 29, 43, "Input",ExpressionUUID->"d6e6c185-1983-46da-958a-ed67b940fda7"],
Cell[275827, 5698, 340, 8, 28, "Message",ExpressionUUID->"d6a26caa-3f7d-4f35-a61f-a80b67b304ff"],
Cell[276170, 5708, 242, 4, 32, "Output",ExpressionUUID->"1279dc78-628d-4f88-99fd-ccc3c4a15f7e"]
}, Open  ]],
Cell[276427, 5715, 670, 13, 38, "Text",ExpressionUUID->"d35a3580-e30b-4f20-b4d4-0fdd3ef53af6"],
Cell[277100, 5730, 1587, 44, 161, "Text",ExpressionUUID->"2c870841-be0e-4d3d-98ad-c0bee9bd278e"],
Cell[CellGroupData[{
Cell[278712, 5778, 1334, 38, 99, "Input",ExpressionUUID->"0a9b363f-0198-4433-b46d-d44d0190a1b3"],
Cell[280049, 5818, 232, 4, 32, "Output",ExpressionUUID->"6f9aafa1-2f32-4bda-9833-8a0d5d303e13"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280342, 5829, 433, 9, 71, "Section",ExpressionUUID->"12c5dfc5-9c18-4600-9dd4-b76cf0a18ee4"],
Cell[280778, 5840, 480, 10, 38, "Text",ExpressionUUID->"46457ad5-5665-418d-be8d-63a9f67a8173"],
Cell[281261, 5852, 1434, 41, 158, "Text",ExpressionUUID->"14fd20cc-646f-4ea3-a445-53226aa321ff"],
Cell[282698, 5895, 3612, 120, 241, "Text",ExpressionUUID->"08fdb6c8-acb7-4096-aca2-9e2498eb5667"],
Cell[286313, 6017, 1985, 59, 114, "Input",ExpressionUUID->"0710e37e-fa8f-4941-adc4-eea697e5c40f"],
Cell[CellGroupData[{
Cell[288323, 6080, 974, 22, 109, "Input",ExpressionUUID->"359e97c2-94de-48a7-aec6-8c2b98f62bb4"],
Cell[289300, 6104, 343, 7, 48, "Output",ExpressionUUID->"0520c888-defa-4f4d-8fe1-a9661773ee10"]
}, Open  ]],
Cell[289658, 6114, 885, 14, 116, "Text",ExpressionUUID->"e73bb711-d1b5-4cb7-adee-8723837b06e6",
 CellGroupingRules->"NormalGrouping"],
Cell[290546, 6130, 262, 5, 54, "Text",ExpressionUUID->"cb993a83-72d1-430c-9f96-dc826187009e"],
Cell[290811, 6137, 649, 12, 64, "Text",ExpressionUUID->"fe3fbbfa-054f-48a7-b83a-0b02572bb86f"],
Cell[291463, 6151, 1403, 41, 161, "Text",ExpressionUUID->"3332453c-ddd0-4f9e-a581-3b630e7dfe23"],
Cell[CellGroupData[{
Cell[292891, 6196, 888, 28, 64, "Input",ExpressionUUID->"04769aec-1396-4c0c-81f7-3609f430f46b"],
Cell[293782, 6226, 236, 6, 48, "Output",ExpressionUUID->"69746583-e59d-4f06-88d0-345abf020917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294055, 6237, 601, 17, 28, "Input",ExpressionUUID->"a27c9db2-57da-4fa5-81b2-933f8e2af9f1"],
Cell[294659, 6256, 471, 11, 32, "Output",ExpressionUUID->"39f085a7-4cfa-4c19-8425-4aa475cfeb40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295167, 6272, 583, 13, 28, "Input",ExpressionUUID->"d6104683-087c-4324-9e97-33097555be6a"],
Cell[295753, 6287, 380, 10, 32, "Output",ExpressionUUID->"808d896b-f519-436d-9a05-ccf33ffc40d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296170, 6302, 336, 8, 28, "Input",ExpressionUUID->"706e6ff7-ddf7-494a-bd53-b42b057cab8e"],
Cell[296509, 6312, 263, 6, 32, "Output",ExpressionUUID->"f7df1b92-f9d3-4022-bec1-289e0dcc254c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296809, 6323, 304, 7, 28, "Input",ExpressionUUID->"92938196-6c6b-4316-9f9a-a9de0a9cb545"],
Cell[297116, 6332, 242, 6, 32, "Output",ExpressionUUID->"ac938c1b-ac4f-4906-8c88-1076a2229988"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297395, 6343, 265, 5, 28, "Input",ExpressionUUID->"1851f307-5c71-4a64-89cd-283fa6eb9a5c"],
Cell[297663, 6350, 228, 4, 32, "Output",ExpressionUUID->"1bdfb56a-9203-47d9-9093-c15a498ec5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297928, 6359, 265, 5, 43, "Input",ExpressionUUID->"c91b6e59-14fd-49d9-a439-348a31f04a25"],
Cell[298196, 6366, 226, 4, 32, "Output",ExpressionUUID->"6751860e-8eab-48bc-86bb-a8ff6de6e00a"]
}, Open  ]],
Cell[298437, 6373, 336, 7, 35, "Text",ExpressionUUID->"bc7c1dfe-0497-46a2-b061-fe829c5df6ac"],
Cell[CellGroupData[{
Cell[298798, 6384, 297, 6, 43, "Input",ExpressionUUID->"a2f68f92-cd7c-4a6d-9a88-5cb71e9d3eae"],
Cell[299098, 6392, 287, 8, 48, "Output",ExpressionUUID->"5e881d9f-612b-44b5-bdc4-bae5025d7e3c"]
}, Open  ]],
Cell[299400, 6403, 269, 7, 58, "Text",ExpressionUUID->"1fcabd77-2c10-488e-b93b-1c02d346293f"],
Cell[CellGroupData[{
Cell[299694, 6414, 477, 11, 28, "Input",ExpressionUUID->"773f0d6c-26b2-4990-995f-f681b4900549"],
Cell[300174, 6427, 402, 10, 32, "Output",ExpressionUUID->"205bc751-c948-4667-85cb-aef6610b23f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300613, 6442, 235, 4, 43, "Input",ExpressionUUID->"62741a76-8153-474a-84b5-37edd53de722"],
Cell[300851, 6448, 228, 4, 32, "Output",ExpressionUUID->"1bc57192-894f-4d60-95ca-a7ff65aa517f"]
}, Open  ]],
Cell[301094, 6455, 491, 9, 81, "Text",ExpressionUUID->"41b66f45-74ce-480b-89b3-16c8f81d1449"],
Cell[301588, 6466, 680, 12, 64, "Text",ExpressionUUID->"42833be8-b9d6-475b-a9bb-0db4248009b1"],
Cell[302271, 6480, 1326, 38, 130, "Text",ExpressionUUID->"1c11e408-d6ed-4f99-bec5-1b6d3e1eea88"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

